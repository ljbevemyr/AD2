from .graph import Graph

data = [dict() for _ in range(42)]
# Graph consisting of 2 nodes
data[0]["graph"] = Graph(is_directed=False)
data[0]["graph"].add_edge("a", "b", 410)
data[0]["graph"].add_edge("a", "c", 1605)
data[0]["graph"].add_edge("b", "c", 56)
data[0]["mst"] = Graph(is_directed=False)
data[0]["mst"].add_edge("a", "b", weight=410)
data[0]["mst"].add_edge("b", "c", weight=56)
data[0]["solutions"] = [
    { "edge": ("a", "c"), "weight": 1606, "expected": [('a', 'b'), ('b', 'c')] },
    { "edge": ("a", "c"), "weight": 1604, "expected": [('a', 'b'), ('b', 'c')] },
    { "edge": ("b", "c"), "weight": 55, "expected": [('a', 'b'), ('b', 'c')] },
    { "edge": ("b", "c"), "weight": 57, "expected": [('a', 'b'), ('b', 'c')] }
]
# Graph consisting of 3 nodes
data[1]["graph"] = Graph(is_directed=False)
data[1]["graph"].add_edge("a", "b", 1647)
data[1]["graph"].add_edge("a", "c", 1465)
data[1]["graph"].add_edge("a", "d", 1676)
data[1]["graph"].add_edge("b", "c", 706)
data[1]["graph"].add_edge("b", "d", 1645)
data[1]["graph"].add_edge("c", "d", 451)
data[1]["mst"] = Graph(is_directed=False)
data[1]["mst"].add_edge("a", "c", weight=1465)
data[1]["mst"].add_edge("b", "c", weight=706)
data[1]["mst"].add_edge("c", "d", weight=451)
data[1]["solutions"] = [
    { "edge": ("b", "d"), "weight": 1646, "expected": [('a', 'c'), ('b', 'c'), ('c', 'd')] },
    { "edge": ("a", "d"), "weight": 1675, "expected": [('a', 'c'), ('b', 'c'), ('c', 'd')] },
    { "edge": ("a", "c"), "weight": 1464, "expected": [('a', 'c'), ('b', 'c'), ('c', 'd')] },
    { "edge": ("a", "c"), "weight": 1466, "expected": [('a', 'c'), ('b', 'c'), ('c', 'd')] }
]
# Graph consisting of 4 nodes
data[2]["graph"] = Graph(is_directed=False)
data[2]["graph"].add_edge("a", "c", 874)
data[2]["graph"].add_edge("a", "d", 98)
data[2]["graph"].add_edge("a", "e", 1353)
data[2]["graph"].add_edge("c", "b", 519)
data[2]["graph"].add_edge("c", "d", 1544)
data[2]["graph"].add_edge("d", "b", 1520)
data[2]["graph"].add_edge("e", "b", 1229)
data[2]["mst"] = Graph(is_directed=False)
data[2]["mst"].add_edge("a", "c", weight=874)
data[2]["mst"].add_edge("a", "d", weight=98)
data[2]["mst"].add_edge("c", "b", weight=519)
data[2]["mst"].add_edge("e", "b", weight=1229)
data[2]["solutions"] = [
    { "edge": ("a", "e"), "weight": 1354, "expected": [('a', 'd'), ('a', 'c'), ('c', 'b'), ('e', 'b')] },
    { "edge": ("d", "b"), "weight": 1519, "expected": [('a', 'd'), ('a', 'c'), ('c', 'b'), ('e', 'b')] },
    { "edge": ("a", "c"), "weight": 873, "expected": [('a', 'd'), ('a', 'c'), ('c', 'b'), ('e', 'b')] },
    { "edge": ("e", "b"), "weight": 1230, "expected": [('a', 'd'), ('a', 'c'), ('c', 'b'), ('e', 'b')] }
]
# Graph consisting of 5 nodes
data[3]["graph"] = Graph(is_directed=False)
data[3]["graph"].add_edge("a", "d", 1012)
data[3]["graph"].add_edge("a", "e", 1276)
data[3]["graph"].add_edge("a", "f", 1550)
data[3]["graph"].add_edge("b", "c", 1446)
data[3]["graph"].add_edge("d", "c", 529)
data[3]["graph"].add_edge("d", "e", 598)
data[3]["graph"].add_edge("e", "b", 1126)
data[3]["graph"].add_edge("f", "b", 1141)
data[3]["graph"].add_edge("f", "c", 1491)
data[3]["mst"] = Graph(is_directed=False)
data[3]["mst"].add_edge("a", "d", weight=1012)
data[3]["mst"].add_edge("d", "c", weight=529)
data[3]["mst"].add_edge("d", "e", weight=598)
data[3]["mst"].add_edge("e", "b", weight=1126)
data[3]["mst"].add_edge("f", "b", weight=1141)
data[3]["solutions"] = [
    { "edge": ("a", "f"), "weight": 1551, "expected": [('a', 'd'), ('d', 'c'), ('d', 'e'), ('e', 'b'), ('f', 'b')] },
    { "edge": ("b", "c"), "weight": 1445, "expected": [('a', 'd'), ('d', 'c'), ('d', 'e'), ('e', 'b'), ('f', 'b')] },
    { "edge": ("f", "b"), "weight": 1140, "expected": [('a', 'd'), ('d', 'c'), ('d', 'e'), ('e', 'b'), ('f', 'b')] },
    { "edge": ("d", "e"), "weight": 599, "expected": [('a', 'd'), ('d', 'c'), ('d', 'e'), ('e', 'b'), ('f', 'b')] }
]
# Graph consisting of 6 nodes
data[4]["graph"] = Graph(is_directed=False)
data[4]["graph"].add_edge("a", "b", 916)
data[4]["graph"].add_edge("a", "f", 1297)
data[4]["graph"].add_edge("a", "g", 731)
data[4]["graph"].add_edge("b", "d", 862)
data[4]["graph"].add_edge("b", "e", 355)
data[4]["graph"].add_edge("d", "c", 1557)
data[4]["graph"].add_edge("e", "c", 787)
data[4]["graph"].add_edge("f", "e", 1359)
data[4]["graph"].add_edge("g", "c", 1260)
data[4]["graph"].add_edge("g", "d", 666)
data[4]["mst"] = Graph(is_directed=False)
data[4]["mst"].add_edge("a", "f", weight=1297)
data[4]["mst"].add_edge("a", "g", weight=731)
data[4]["mst"].add_edge("b", "d", weight=862)
data[4]["mst"].add_edge("b", "e", weight=355)
data[4]["mst"].add_edge("e", "c", weight=787)
data[4]["mst"].add_edge("g", "d", weight=666)
data[4]["solutions"] = [
    { "edge": ("f", "e"), "weight": 1360, "expected": [('a', 'g'), ('a', 'f'), ('b', 'e'), ('b', 'd'), ('g', 'd'), ('e', 'c')] },
    { "edge": ("d", "c"), "weight": 1556, "expected": [('a', 'g'), ('a', 'f'), ('b', 'e'), ('b', 'd'), ('g', 'd'), ('e', 'c')] },
    { "edge": ("b", "e"), "weight": 354, "expected": [('a', 'g'), ('a', 'f'), ('b', 'e'), ('b', 'd'), ('g', 'd'), ('e', 'c')] },
    { "edge": ("a", "f"), "weight": 1298, "expected": [('a', 'g'), ('a', 'f'), ('b', 'e'), ('b', 'd'), ('g', 'd'), ('e', 'c')] }
]
# Graph consisting of 7 nodes
data[5]["graph"] = Graph(is_directed=False)
data[5]["graph"].add_edge("a", "b", 1519)
data[5]["graph"].add_edge("a", "c", 391)
data[5]["graph"].add_edge("a", "f", 480)
data[5]["graph"].add_edge("b", "d", 412)
data[5]["graph"].add_edge("b", "f", 1076)
data[5]["graph"].add_edge("c", "f", 1209)
data[5]["graph"].add_edge("c", "g", 1065)
data[5]["graph"].add_edge("d", "e", 93)
data[5]["graph"].add_edge("d", "g", 1165)
data[5]["graph"].add_edge("e", "h", 1230)
data[5]["graph"].add_edge("g", "e", 1335)
data[5]["mst"] = Graph(is_directed=False)
data[5]["mst"].add_edge("a", "c", weight=391)
data[5]["mst"].add_edge("a", "f", weight=480)
data[5]["mst"].add_edge("b", "d", weight=412)
data[5]["mst"].add_edge("b", "f", weight=1076)
data[5]["mst"].add_edge("c", "g", weight=1065)
data[5]["mst"].add_edge("d", "e", weight=93)
data[5]["mst"].add_edge("e", "h", weight=1230)
data[5]["solutions"] = [
    { "edge": ("g", "e"), "weight": 1336, "expected": [('a', 'c'), ('a', 'f'), ('b', 'd'), ('b', 'f'), ('c', 'g'), ('d', 'e'), ('e', 'h')] },
    { "edge": ("g", "e"), "weight": 1334, "expected": [('a', 'c'), ('a', 'f'), ('b', 'd'), ('b', 'f'), ('c', 'g'), ('d', 'e'), ('e', 'h')] },
    { "edge": ("e", "h"), "weight": 1229, "expected": [('a', 'c'), ('a', 'f'), ('b', 'd'), ('b', 'f'), ('c', 'g'), ('d', 'e'), ('e', 'h')] },
    { "edge": ("a", "c"), "weight": 392, "expected": [('a', 'c'), ('a', 'f'), ('b', 'd'), ('b', 'f'), ('c', 'g'), ('d', 'e'), ('e', 'h')] }
]
# Graph consisting of 8 nodes
data[6]["graph"] = Graph(is_directed=False)
data[6]["graph"].add_edge("a", "b", 456)
data[6]["graph"].add_edge("a", "e", 1327)
data[6]["graph"].add_edge("a", "h", 1300)
data[6]["graph"].add_edge("b", "f", 1519)
data[6]["graph"].add_edge("b", "i", 1623)
data[6]["graph"].add_edge("c", "d", 946)
data[6]["graph"].add_edge("c", "g", 841)
data[6]["graph"].add_edge("d", "g", 1193)
data[6]["graph"].add_edge("e", "f", 837)
data[6]["graph"].add_edge("e", "i", 1576)
data[6]["graph"].add_edge("h", "c", 1370)
data[6]["graph"].add_edge("h", "d", 1244)
data[6]["graph"].add_edge("i", "f", 1146)
data[6]["mst"] = Graph(is_directed=False)
data[6]["mst"].add_edge("a", "b", weight=456)
data[6]["mst"].add_edge("a", "e", weight=1327)
data[6]["mst"].add_edge("a", "h", weight=1300)
data[6]["mst"].add_edge("c", "d", weight=946)
data[6]["mst"].add_edge("c", "g", weight=841)
data[6]["mst"].add_edge("e", "f", weight=837)
data[6]["mst"].add_edge("h", "d", weight=1244)
data[6]["mst"].add_edge("i", "f", weight=1146)
data[6]["solutions"] = [
    { "edge": ("e", "i"), "weight": 1577, "expected": [('a', 'b'), ('a', 'h'), ('a', 'e'), ('e', 'f'), ('h', 'd'), ('i', 'f'), ('c', 'g'), ('c', 'd')] },
    { "edge": ("b", "i"), "weight": 1622, "expected": [('a', 'b'), ('a', 'h'), ('a', 'e'), ('e', 'f'), ('h', 'd'), ('i', 'f'), ('c', 'g'), ('c', 'd')] },
    { "edge": ("a", "h"), "weight": 1299, "expected": [('a', 'b'), ('a', 'h'), ('a', 'e'), ('e', 'f'), ('h', 'd'), ('i', 'f'), ('c', 'g'), ('c', 'd')] },
    { "edge": ("c", "g"), "weight": 842, "expected": [('a', 'b'), ('a', 'h'), ('a', 'e'), ('e', 'f'), ('h', 'd'), ('i', 'f'), ('c', 'g'), ('c', 'd')] }
]
# Graph consisting of 9 nodes
data[7]["graph"] = Graph(is_directed=False)
data[7]["graph"].add_edge("a", "c", 965)
data[7]["graph"].add_edge("a", "g", 868)
data[7]["graph"].add_edge("a", "h", 728)
data[7]["graph"].add_edge("b", "d", 1461)
data[7]["graph"].add_edge("b", "f", 635)
data[7]["graph"].add_edge("c", "g", 153)
data[7]["graph"].add_edge("c", "h", 348)
data[7]["graph"].add_edge("d", "i", 1504)
data[7]["graph"].add_edge("d", "j", 254)
data[7]["graph"].add_edge("f", "i", 127)
data[7]["graph"].add_edge("f", "j", 814)
data[7]["graph"].add_edge("g", "e", 1007)
data[7]["graph"].add_edge("h", "b", 452)
data[7]["graph"].add_edge("i", "e", 593)
data[7]["graph"].add_edge("j", "e", 262)
data[7]["mst"] = Graph(is_directed=False)
data[7]["mst"].add_edge("a", "h", weight=728)
data[7]["mst"].add_edge("b", "f", weight=635)
data[7]["mst"].add_edge("c", "g", weight=153)
data[7]["mst"].add_edge("c", "h", weight=348)
data[7]["mst"].add_edge("d", "j", weight=254)
data[7]["mst"].add_edge("f", "i", weight=127)
data[7]["mst"].add_edge("h", "b", weight=452)
data[7]["mst"].add_edge("i", "e", weight=593)
data[7]["mst"].add_edge("j", "e", weight=262)
data[7]["solutions"] = [
    { "edge": ("a", "c"), "weight": 966, "expected": [('a', 'h'), ('c', 'g'), ('c', 'h'), ('h', 'b'), ('b', 'f'), ('d', 'j'), ('f', 'i'), ('i', 'e'), ('j', 'e')] },
    { "edge": ("a", "c"), "weight": 964, "expected": [('a', 'h'), ('c', 'g'), ('c', 'h'), ('h', 'b'), ('b', 'f'), ('d', 'j'), ('f', 'i'), ('i', 'e'), ('j', 'e')] },
    { "edge": ("i", "e"), "weight": 592, "expected": [('a', 'h'), ('c', 'g'), ('c', 'h'), ('h', 'b'), ('b', 'f'), ('d', 'j'), ('f', 'i'), ('i', 'e'), ('j', 'e')] },
    { "edge": ("f", "i"), "weight": 128, "expected": [('a', 'h'), ('c', 'g'), ('c', 'h'), ('h', 'b'), ('b', 'f'), ('d', 'j'), ('f', 'i'), ('i', 'e'), ('j', 'e')] }
]
# Graph consisting of 10 nodes
data[8]["graph"] = Graph(is_directed=False)
data[8]["graph"].add_edge("a", "c", 228)
data[8]["graph"].add_edge("a", "d", 579)
data[8]["graph"].add_edge("a", "g", 1218)
data[8]["graph"].add_edge("b", "f", 1076)
data[8]["graph"].add_edge("b", "j", 1390)
data[8]["graph"].add_edge("c", "g", 643)
data[8]["graph"].add_edge("c", "i", 1386)
data[8]["graph"].add_edge("d", "i", 1360)
data[8]["graph"].add_edge("d", "k", 1681)
data[8]["graph"].add_edge("e", "h", 1478)
data[8]["graph"].add_edge("f", "k", 138)
data[8]["graph"].add_edge("g", "b", 525)
data[8]["graph"].add_edge("i", "e", 657)
data[8]["graph"].add_edge("j", "f", 999)
data[8]["graph"].add_edge("j", "h", 1485)
data[8]["graph"].add_edge("k", "e", 918)
data[8]["mst"] = Graph(is_directed=False)
data[8]["mst"].add_edge("a", "c", weight=228)
data[8]["mst"].add_edge("a", "d", weight=579)
data[8]["mst"].add_edge("b", "f", weight=1076)
data[8]["mst"].add_edge("c", "g", weight=643)
data[8]["mst"].add_edge("e", "h", weight=1478)
data[8]["mst"].add_edge("f", "k", weight=138)
data[8]["mst"].add_edge("g", "b", weight=525)
data[8]["mst"].add_edge("i", "e", weight=657)
data[8]["mst"].add_edge("j", "f", weight=999)
data[8]["mst"].add_edge("k", "e", weight=918)
data[8]["solutions"] = [
    { "edge": ("d", "i"), "weight": 1361, "expected": [('a', 'c'), ('a', 'd'), ('c', 'g'), ('g', 'b'), ('b', 'f'), ('j', 'f'), ('f', 'k'), ('i', 'e'), ('k', 'e'), ('e', 'h')] },
    { "edge": ("j", "h"), "weight": 1484, "expected": [('a', 'c'), ('a', 'd'), ('c', 'g'), ('g', 'b'), ('b', 'f'), ('j', 'f'), ('f', 'k'), ('i', 'e'), ('k', 'e'), ('e', 'h')] },
    { "edge": ("b", "f"), "weight": 1075, "expected": [('a', 'c'), ('a', 'd'), ('c', 'g'), ('g', 'b'), ('b', 'f'), ('j', 'f'), ('f', 'k'), ('i', 'e'), ('k', 'e'), ('e', 'h')] },
    { "edge": ("f", "k"), "weight": 139, "expected": [('a', 'c'), ('a', 'd'), ('c', 'g'), ('g', 'b'), ('b', 'f'), ('j', 'f'), ('f', 'k'), ('i', 'e'), ('k', 'e'), ('e', 'h')] }
]
# Graph consisting of 11 nodes
data[9]["graph"] = Graph(is_directed=False)
data[9]["graph"].add_edge("a", "g", 321)
data[9]["graph"].add_edge("a", "h", 1670)
data[9]["graph"].add_edge("a", "i", 203)
data[9]["graph"].add_edge("b", "f", 550)
data[9]["graph"].add_edge("b", "j", 1081)
data[9]["graph"].add_edge("b", "l", 777)
data[9]["graph"].add_edge("d", "k", 680)
data[9]["graph"].add_edge("f", "e", 1645)
data[9]["graph"].add_edge("f", "k", 22)
data[9]["graph"].add_edge("g", "c", 441)
data[9]["graph"].add_edge("g", "d", 1444)
data[9]["graph"].add_edge("h", "c", 1204)
data[9]["graph"].add_edge("h", "d", 871)
data[9]["graph"].add_edge("i", "c", 1021)
data[9]["graph"].add_edge("i", "e", 402)
data[9]["graph"].add_edge("j", "l", 1532)
data[9]["graph"].add_edge("k", "e", 978)
data[9]["mst"] = Graph(is_directed=False)
data[9]["mst"].add_edge("a", "g", weight=321)
data[9]["mst"].add_edge("a", "i", weight=203)
data[9]["mst"].add_edge("b", "f", weight=550)
data[9]["mst"].add_edge("b", "j", weight=1081)
data[9]["mst"].add_edge("b", "l", weight=777)
data[9]["mst"].add_edge("d", "k", weight=680)
data[9]["mst"].add_edge("f", "k", weight=22)
data[9]["mst"].add_edge("g", "c", weight=441)
data[9]["mst"].add_edge("h", "d", weight=871)
data[9]["mst"].add_edge("i", "e", weight=402)
data[9]["mst"].add_edge("k", "e", weight=978)
data[9]["solutions"] = [
    { "edge": ("i", "c"), "weight": 1022, "expected": [('a', 'i'), ('a', 'g'), ('i', 'e'), ('g', 'c'), ('h', 'd'), ('b', 'f'), ('b', 'l'), ('b', 'j'), ('f', 'k'), ('d', 'k'), ('k', 'e')] },
    { "edge": ("g", "d"), "weight": 1443, "expected": [('a', 'i'), ('a', 'g'), ('i', 'e'), ('g', 'c'), ('h', 'd'), ('b', 'f'), ('b', 'l'), ('b', 'j'), ('f', 'k'), ('d', 'k'), ('k', 'e')] },
    { "edge": ("d", "k"), "weight": 679, "expected": [('a', 'i'), ('a', 'g'), ('i', 'e'), ('g', 'c'), ('h', 'd'), ('b', 'f'), ('b', 'l'), ('b', 'j'), ('f', 'k'), ('d', 'k'), ('k', 'e')] },
    { "edge": ("b", "f"), "weight": 551, "expected": [('a', 'i'), ('a', 'g'), ('i', 'e'), ('g', 'c'), ('h', 'd'), ('b', 'f'), ('b', 'l'), ('b', 'j'), ('f', 'k'), ('d', 'k'), ('k', 'e')] }
]
# Graph consisting of 12 nodes
data[10]["graph"] = Graph(is_directed=False)
data[10]["graph"].add_edge("a", "g", 495)
data[10]["graph"].add_edge("a", "h", 1567)
data[10]["graph"].add_edge("a", "m", 70)
data[10]["graph"].add_edge("b", "e", 483)
data[10]["graph"].add_edge("c", "i", 521)
data[10]["graph"].add_edge("c", "k", 1493)
data[10]["graph"].add_edge("d", "f", 554)
data[10]["graph"].add_edge("d", "j", 1126)
data[10]["graph"].add_edge("e", "k", 891)
data[10]["graph"].add_edge("e", "l", 130)
data[10]["graph"].add_edge("g", "c", 1434)
data[10]["graph"].add_edge("g", "f", 1273)
data[10]["graph"].add_edge("h", "b", 29)
data[10]["graph"].add_edge("h", "l", 644)
data[10]["graph"].add_edge("i", "f", 145)
data[10]["graph"].add_edge("i", "l", 1082)
data[10]["graph"].add_edge("k", "j", 1180)
data[10]["graph"].add_edge("m", "b", 716)
data[10]["graph"].add_edge("m", "d", 560)
data[10]["mst"] = Graph(is_directed=False)
data[10]["mst"].add_edge("a", "g", weight=495)
data[10]["mst"].add_edge("a", "m", weight=70)
data[10]["mst"].add_edge("b", "e", weight=483)
data[10]["mst"].add_edge("c", "i", weight=521)
data[10]["mst"].add_edge("d", "f", weight=554)
data[10]["mst"].add_edge("d", "j", weight=1126)
data[10]["mst"].add_edge("e", "k", weight=891)
data[10]["mst"].add_edge("e", "l", weight=130)
data[10]["mst"].add_edge("h", "b", weight=29)
data[10]["mst"].add_edge("i", "f", weight=145)
data[10]["mst"].add_edge("m", "b", weight=716)
data[10]["mst"].add_edge("m", "d", weight=560)
data[10]["solutions"] = [
    { "edge": ("h", "l"), "weight": 645, "expected": [('a', 'm'), ('a', 'g'), ('m', 'd'), ('m', 'b'), ('h', 'b'), ('b', 'e'), ('e', 'l'), ('e', 'k'), ('c', 'i'), ('i', 'f'), ('d', 'f'), ('d', 'j')] },
    { "edge": ("g", "c"), "weight": 1433, "expected": [('a', 'm'), ('a', 'g'), ('m', 'd'), ('m', 'b'), ('h', 'b'), ('b', 'e'), ('e', 'l'), ('e', 'k'), ('c', 'i'), ('i', 'f'), ('d', 'f'), ('d', 'j')] },
    { "edge": ("m", "b"), "weight": 715, "expected": [('a', 'm'), ('a', 'g'), ('m', 'd'), ('m', 'b'), ('h', 'b'), ('b', 'e'), ('e', 'l'), ('e', 'k'), ('c', 'i'), ('i', 'f'), ('d', 'f'), ('d', 'j')] },
    { "edge": ("b", "e"), "weight": 484, "expected": [('a', 'm'), ('a', 'g'), ('m', 'd'), ('m', 'b'), ('h', 'b'), ('b', 'e'), ('e', 'l'), ('e', 'k'), ('c', 'i'), ('i', 'f'), ('d', 'f'), ('d', 'j')] }
]
# Graph consisting of 13 nodes
data[11]["graph"] = Graph(is_directed=False)
data[11]["graph"].add_edge("a", "d", 824)
data[11]["graph"].add_edge("a", "f", 194)
data[11]["graph"].add_edge("a", "g", 366)
data[11]["graph"].add_edge("b", "e", 447)
data[11]["graph"].add_edge("b", "m", 1161)
data[11]["graph"].add_edge("c", "h", 486)
data[11]["graph"].add_edge("c", "n", 1395)
data[11]["graph"].add_edge("d", "e", 340)
data[11]["graph"].add_edge("d", "j", 12)
data[11]["graph"].add_edge("e", "h", 1211)
data[11]["graph"].add_edge("f", "b", 1457)
data[11]["graph"].add_edge("f", "m", 766)
data[11]["graph"].add_edge("g", "c", 1184)
data[11]["graph"].add_edge("g", "j", 1069)
data[11]["graph"].add_edge("i", "l", 685)
data[11]["graph"].add_edge("j", "i", 1270)
data[11]["graph"].add_edge("l", "k", 153)
data[11]["graph"].add_edge("m", "i", 931)
data[11]["graph"].add_edge("n", "h", 890)
data[11]["graph"].add_edge("n", "k", 1509)
data[11]["mst"] = Graph(is_directed=False)
data[11]["mst"].add_edge("a", "d", weight=824)
data[11]["mst"].add_edge("a", "f", weight=194)
data[11]["mst"].add_edge("a", "g", weight=366)
data[11]["mst"].add_edge("b", "e", weight=447)
data[11]["mst"].add_edge("c", "h", weight=486)
data[11]["mst"].add_edge("d", "e", weight=340)
data[11]["mst"].add_edge("d", "j", weight=12)
data[11]["mst"].add_edge("f", "m", weight=766)
data[11]["mst"].add_edge("g", "c", weight=1184)
data[11]["mst"].add_edge("i", "l", weight=685)
data[11]["mst"].add_edge("l", "k", weight=153)
data[11]["mst"].add_edge("m", "i", weight=931)
data[11]["mst"].add_edge("n", "h", weight=890)
data[11]["solutions"] = [
    { "edge": ("j", "i"), "weight": 1271, "expected": [('a', 'f'), ('a', 'g'), ('a', 'd'), ('d', 'j'), ('d', 'e'), ('f', 'm'), ('g', 'c'), ('b', 'e'), ('m', 'i'), ('c', 'h'), ('n', 'h'), ('i', 'l'), ('l', 'k')] },
    { "edge": ("f", "b"), "weight": 1456, "expected": [('a', 'f'), ('a', 'g'), ('a', 'd'), ('d', 'j'), ('d', 'e'), ('f', 'm'), ('g', 'c'), ('b', 'e'), ('m', 'i'), ('c', 'h'), ('n', 'h'), ('i', 'l'), ('l', 'k')] },
    { "edge": ("d", "j"), "weight": 11, "expected": [('a', 'f'), ('a', 'g'), ('a', 'd'), ('d', 'j'), ('d', 'e'), ('f', 'm'), ('g', 'c'), ('b', 'e'), ('m', 'i'), ('c', 'h'), ('n', 'h'), ('i', 'l'), ('l', 'k')] },
    { "edge": ("f", "m"), "weight": 767, "expected": [('a', 'f'), ('a', 'g'), ('a', 'd'), ('d', 'j'), ('d', 'e'), ('f', 'm'), ('g', 'c'), ('b', 'e'), ('m', 'i'), ('c', 'h'), ('n', 'h'), ('i', 'l'), ('l', 'k')] }
]
# Graph consisting of 14 nodes
data[12]["graph"] = Graph(is_directed=False)
data[12]["graph"].add_edge("a", "f", 1306)
data[12]["graph"].add_edge("a", "g", 644)
data[12]["graph"].add_edge("a", "k", 790)
data[12]["graph"].add_edge("b", "e", 1362)
data[12]["graph"].add_edge("b", "o", 303)
data[12]["graph"].add_edge("c", "i", 216)
data[12]["graph"].add_edge("d", "h", 700)
data[12]["graph"].add_edge("d", "j", 1304)
data[12]["graph"].add_edge("d", "n", 473)
data[12]["graph"].add_edge("e", "c", 1397)
data[12]["graph"].add_edge("f", "c", 748)
data[12]["graph"].add_edge("f", "g", 29)
data[12]["graph"].add_edge("g", "b", 596)
data[12]["graph"].add_edge("h", "l", 408)
data[12]["graph"].add_edge("i", "j", 956)
data[12]["graph"].add_edge("i", "m", 286)
data[12]["graph"].add_edge("k", "e", 1575)
data[12]["graph"].add_edge("k", "j", 348)
data[12]["graph"].add_edge("l", "m", 1671)
data[12]["graph"].add_edge("n", "h", 406)
data[12]["graph"].add_edge("n", "m", 289)
data[12]["graph"].add_edge("o", "l", 844)
data[12]["mst"] = Graph(is_directed=False)
data[12]["mst"].add_edge("a", "g", weight=644)
data[12]["mst"].add_edge("a", "k", weight=790)
data[12]["mst"].add_edge("b", "e", weight=1362)
data[12]["mst"].add_edge("b", "o", weight=303)
data[12]["mst"].add_edge("c", "i", weight=216)
data[12]["mst"].add_edge("d", "n", weight=473)
data[12]["mst"].add_edge("f", "c", weight=748)
data[12]["mst"].add_edge("f", "g", weight=29)
data[12]["mst"].add_edge("g", "b", weight=596)
data[12]["mst"].add_edge("h", "l", weight=408)
data[12]["mst"].add_edge("i", "m", weight=286)
data[12]["mst"].add_edge("k", "j", weight=348)
data[12]["mst"].add_edge("n", "h", weight=406)
data[12]["mst"].add_edge("n", "m", weight=289)
data[12]["solutions"] = [
    { "edge": ("e", "c"), "weight": 1398, "expected": [('a', 'g'), ('a', 'k'), ('k', 'j'), ('f', 'g'), ('f', 'c'), ('g', 'b'), ('b', 'o'), ('b', 'e'), ('c', 'i'), ('i', 'm'), ('d', 'n'), ('n', 'm'), ('n', 'h'), ('h', 'l')] },
    { "edge": ("l", "m"), "weight": 1670, "expected": [('a', 'g'), ('a', 'k'), ('k', 'j'), ('f', 'g'), ('f', 'c'), ('g', 'b'), ('b', 'o'), ('b', 'e'), ('c', 'i'), ('i', 'm'), ('d', 'n'), ('n', 'm'), ('n', 'h'), ('h', 'l')] },
    { "edge": ("b", "e"), "weight": 1361, "expected": [('a', 'g'), ('a', 'k'), ('k', 'j'), ('f', 'g'), ('f', 'c'), ('g', 'b'), ('b', 'o'), ('b', 'e'), ('c', 'i'), ('i', 'm'), ('d', 'n'), ('n', 'm'), ('n', 'h'), ('h', 'l')] },
    { "edge": ("d", "n"), "weight": 474, "expected": [('a', 'g'), ('a', 'k'), ('k', 'j'), ('f', 'g'), ('f', 'c'), ('g', 'b'), ('b', 'o'), ('b', 'e'), ('c', 'i'), ('i', 'm'), ('d', 'n'), ('n', 'm'), ('n', 'h'), ('h', 'l')] }
]
# Graph consisting of 15 nodes
data[13]["graph"] = Graph(is_directed=False)
data[13]["graph"].add_edge("a", "c", 437)
data[13]["graph"].add_edge("a", "h", 379)
data[13]["graph"].add_edge("a", "p", 326)
data[13]["graph"].add_edge("b", "j", 201)
data[13]["graph"].add_edge("b", "o", 392)
data[13]["graph"].add_edge("c", "g", 147)
data[13]["graph"].add_edge("c", "m", 750)
data[13]["graph"].add_edge("d", "n", 317)
data[13]["graph"].add_edge("e", "f", 94)
data[13]["graph"].add_edge("e", "i", 1127)
data[13]["graph"].add_edge("e", "k", 240)
data[13]["graph"].add_edge("g", "f", 206)
data[13]["graph"].add_edge("g", "l", 52)
data[13]["graph"].add_edge("h", "b", 1301)
data[13]["graph"].add_edge("h", "l", 495)
data[13]["graph"].add_edge("i", "k", 1027)
data[13]["graph"].add_edge("j", "d", 1150)
data[13]["graph"].add_edge("j", "f", 1321)
data[13]["graph"].add_edge("m", "d", 413)
data[13]["graph"].add_edge("m", "l", 927)
data[13]["graph"].add_edge("o", "i", 544)
data[13]["graph"].add_edge("o", "k", 421)
data[13]["graph"].add_edge("p", "n", 562)
data[13]["mst"] = Graph(is_directed=False)
data[13]["mst"].add_edge("a", "c", weight=437)
data[13]["mst"].add_edge("a", "h", weight=379)
data[13]["mst"].add_edge("a", "p", weight=326)
data[13]["mst"].add_edge("b", "j", weight=201)
data[13]["mst"].add_edge("b", "o", weight=392)
data[13]["mst"].add_edge("c", "g", weight=147)
data[13]["mst"].add_edge("d", "n", weight=317)
data[13]["mst"].add_edge("e", "f", weight=94)
data[13]["mst"].add_edge("e", "k", weight=240)
data[13]["mst"].add_edge("g", "f", weight=206)
data[13]["mst"].add_edge("g", "l", weight=52)
data[13]["mst"].add_edge("m", "d", weight=413)
data[13]["mst"].add_edge("o", "i", weight=544)
data[13]["mst"].add_edge("o", "k", weight=421)
data[13]["mst"].add_edge("p", "n", weight=562)
data[13]["solutions"] = [
    { "edge": ("j", "d"), "weight": 1151, "expected": [('a', 'p'), ('a', 'h'), ('a', 'c'), ('c', 'g'), ('p', 'n'), ('b', 'j'), ('b', 'o'), ('o', 'k'), ('o', 'i'), ('m', 'd'), ('g', 'l'), ('g', 'f'), ('d', 'n'), ('e', 'f'), ('e', 'k')] },
    { "edge": ("e", "i"), "weight": 1126, "expected": [('a', 'p'), ('a', 'h'), ('a', 'c'), ('c', 'g'), ('p', 'n'), ('b', 'j'), ('b', 'o'), ('o', 'k'), ('o', 'i'), ('m', 'd'), ('g', 'l'), ('g', 'f'), ('d', 'n'), ('e', 'f'), ('e', 'k')] },
    { "edge": ("b", "o"), "weight": 391, "expected": [('a', 'p'), ('a', 'h'), ('a', 'c'), ('c', 'g'), ('p', 'n'), ('b', 'j'), ('b', 'o'), ('o', 'k'), ('o', 'i'), ('m', 'd'), ('g', 'l'), ('g', 'f'), ('d', 'n'), ('e', 'f'), ('e', 'k')] },
    { "edge": ("e", "k"), "weight": 241, "expected": [('a', 'p'), ('a', 'h'), ('a', 'c'), ('c', 'g'), ('p', 'n'), ('b', 'j'), ('b', 'o'), ('o', 'k'), ('o', 'i'), ('m', 'd'), ('g', 'l'), ('g', 'f'), ('d', 'n'), ('e', 'f'), ('e', 'k')] }
]
# Graph consisting of 15 nodes
data[14]["graph"] = Graph(is_directed=False)
data[14]["graph"].add_edge("a", "h", 216)
data[14]["graph"].add_edge("a", "i", 249)
data[14]["graph"].add_edge("a", "k", 105)
data[14]["graph"].add_edge("b", "g", 96)
data[14]["graph"].add_edge("b", "j", 198)
data[14]["graph"].add_edge("c", "n", 113)
data[14]["graph"].add_edge("c", "o", 256)
data[14]["graph"].add_edge("e", "m", 117)
data[14]["graph"].add_edge("f", "l", 222)
data[14]["graph"].add_edge("g", "e", 47)
data[14]["graph"].add_edge("h", "c", 244)
data[14]["graph"].add_edge("h", "f", 42)
data[14]["graph"].add_edge("i", "m", 50)
data[14]["graph"].add_edge("i", "p", 60)
data[14]["graph"].add_edge("j", "d", 192)
data[14]["graph"].add_edge("j", "g", 247)
data[14]["graph"].add_edge("k", "b", 55)
data[14]["graph"].add_edge("k", "e", 51)
data[14]["graph"].add_edge("l", "p", 28)
data[14]["graph"].add_edge("m", "l", 174)
data[14]["graph"].add_edge("n", "d", 252)
data[14]["graph"].add_edge("n", "p", 8)
data[14]["graph"].add_edge("o", "d", 23)
data[14]["graph"].add_edge("o", "f", 237)
data[14]["mst"] = Graph(is_directed=False)
data[14]["mst"].add_edge("a", "h", weight=216)
data[14]["mst"].add_edge("a", "k", weight=105)
data[14]["mst"].add_edge("b", "j", weight=198)
data[14]["mst"].add_edge("c", "n", weight=113)
data[14]["mst"].add_edge("e", "m", weight=117)
data[14]["mst"].add_edge("g", "e", weight=47)
data[14]["mst"].add_edge("h", "f", weight=42)
data[14]["mst"].add_edge("i", "m", weight=50)
data[14]["mst"].add_edge("i", "p", weight=60)
data[14]["mst"].add_edge("j", "d", weight=192)
data[14]["mst"].add_edge("k", "b", weight=55)
data[14]["mst"].add_edge("k", "e", weight=51)
data[14]["mst"].add_edge("l", "p", weight=28)
data[14]["mst"].add_edge("n", "p", weight=8)
data[14]["mst"].add_edge("o", "d", weight=23)
data[14]["solutions"] = [
    { "edge": ("o", "f"), "weight": 238, "expected": [('a', 'k'), ('a', 'h'), ('i', 'm'), ('i', 'p'), ('k', 'e'), ('k', 'b'), ('h', 'f'), ('b', 'j'), ('j', 'd'), ('g', 'e'), ('c', 'n'), ('n', 'p'), ('o', 'd'), ('e', 'm'), ('l', 'p')] },
    { "edge": ("c", "o"), "weight": 255, "expected": [('a', 'k'), ('a', 'h'), ('i', 'm'), ('i', 'p'), ('k', 'e'), ('k', 'b'), ('h', 'f'), ('b', 'j'), ('j', 'd'), ('g', 'e'), ('c', 'n'), ('n', 'p'), ('o', 'd'), ('e', 'm'), ('l', 'p')] },
    { "edge": ("a", "k"), "weight": 104, "expected": [('a', 'k'), ('a', 'h'), ('i', 'm'), ('i', 'p'), ('k', 'e'), ('k', 'b'), ('h', 'f'), ('b', 'j'), ('j', 'd'), ('g', 'e'), ('c', 'n'), ('n', 'p'), ('o', 'd'), ('e', 'm'), ('l', 'p')] },
    { "edge": ("i", "p"), "weight": 61, "expected": [('a', 'k'), ('a', 'h'), ('i', 'm'), ('i', 'p'), ('k', 'e'), ('k', 'b'), ('h', 'f'), ('b', 'j'), ('j', 'd'), ('g', 'e'), ('c', 'n'), ('n', 'p'), ('o', 'd'), ('e', 'm'), ('l', 'p')] }
]
# Graph consisting of 16 nodes
data[15]["graph"] = Graph(is_directed=False)
data[15]["graph"].add_edge("a", "e", 343)
data[15]["graph"].add_edge("a", "m", 438)
data[15]["graph"].add_edge("a", "o", 755)
data[15]["graph"].add_edge("b", "f", 863)
data[15]["graph"].add_edge("b", "g", 314)
data[15]["graph"].add_edge("c", "j", 1067)
data[15]["graph"].add_edge("c", "k", 992)
data[15]["graph"].add_edge("c", "n", 1611)
data[15]["graph"].add_edge("d", "p", 798)
data[15]["graph"].add_edge("e", "b", 752)
data[15]["graph"].add_edge("e", "d", 1437)
data[15]["graph"].add_edge("f", "l", 119)
data[15]["graph"].add_edge("g", "l", 381)
data[15]["graph"].add_edge("g", "p", 1536)
data[15]["graph"].add_edge("h", "i", 1461)
data[15]["graph"].add_edge("j", "d", 633)
data[15]["graph"].add_edge("j", "i", 1488)
data[15]["graph"].add_edge("k", "i", 861)
data[15]["graph"].add_edge("k", "p", 1587)
data[15]["graph"].add_edge("l", "h", 1016)
data[15]["graph"].add_edge("m", "f", 1366)
data[15]["graph"].add_edge("m", "q", 488)
data[15]["graph"].add_edge("n", "h", 1418)
data[15]["graph"].add_edge("o", "n", 1583)
data[15]["graph"].add_edge("o", "q", 540)
data[15]["mst"] = Graph(is_directed=False)
data[15]["mst"].add_edge("a", "e", weight=343)
data[15]["mst"].add_edge("a", "m", weight=438)
data[15]["mst"].add_edge("b", "g", weight=314)
data[15]["mst"].add_edge("c", "j", weight=1067)
data[15]["mst"].add_edge("c", "k", weight=992)
data[15]["mst"].add_edge("d", "p", weight=798)
data[15]["mst"].add_edge("e", "b", weight=752)
data[15]["mst"].add_edge("e", "d", weight=1437)
data[15]["mst"].add_edge("f", "l", weight=119)
data[15]["mst"].add_edge("g", "l", weight=381)
data[15]["mst"].add_edge("j", "d", weight=633)
data[15]["mst"].add_edge("k", "i", weight=861)
data[15]["mst"].add_edge("l", "h", weight=1016)
data[15]["mst"].add_edge("m", "q", weight=488)
data[15]["mst"].add_edge("n", "h", weight=1418)
data[15]["mst"].add_edge("o", "q", weight=540)
data[15]["solutions"] = [
    { "edge": ("h", "i"), "weight": 1462, "expected": [('a', 'e'), ('a', 'm'), ('e', 'b'), ('e', 'd'), ('m', 'q'), ('o', 'q'), ('b', 'g'), ('f', 'l'), ('g', 'l'), ('c', 'k'), ('c', 'j'), ('j', 'd'), ('k', 'i'), ('n', 'h'), ('d', 'p'), ('l', 'h')] },
    { "edge": ("g", "p"), "weight": 1535, "expected": [('a', 'e'), ('a', 'm'), ('e', 'b'), ('e', 'd'), ('m', 'q'), ('o', 'q'), ('b', 'g'), ('f', 'l'), ('g', 'l'), ('c', 'k'), ('c', 'j'), ('j', 'd'), ('k', 'i'), ('n', 'h'), ('d', 'p'), ('l', 'h')] },
    { "edge": ("m", "q"), "weight": 487, "expected": [('a', 'e'), ('a', 'm'), ('e', 'b'), ('e', 'd'), ('m', 'q'), ('o', 'q'), ('b', 'g'), ('f', 'l'), ('g', 'l'), ('c', 'k'), ('c', 'j'), ('j', 'd'), ('k', 'i'), ('n', 'h'), ('d', 'p'), ('l', 'h')] },
    { "edge": ("n", "h"), "weight": 1419, "expected": [('a', 'e'), ('a', 'm'), ('e', 'b'), ('e', 'd'), ('m', 'q'), ('o', 'q'), ('b', 'g'), ('f', 'l'), ('g', 'l'), ('c', 'k'), ('c', 'j'), ('j', 'd'), ('k', 'i'), ('n', 'h'), ('d', 'p'), ('l', 'h')] }
]
# Graph consisting of 17 nodes
data[16]["graph"] = Graph(is_directed=False)
data[16]["graph"].add_edge("a", "d", 1354)
data[16]["graph"].add_edge("a", "e", 1087)
data[16]["graph"].add_edge("a", "n", 1534)
data[16]["graph"].add_edge("b", "m", 1161)
data[16]["graph"].add_edge("c", "g", 1085)
data[16]["graph"].add_edge("d", "c", 532)
data[16]["graph"].add_edge("d", "n", 684)
data[16]["graph"].add_edge("e", "b", 1278)
data[16]["graph"].add_edge("e", "c", 335)
data[16]["graph"].add_edge("f", "i", 1623)
data[16]["graph"].add_edge("f", "j", 644)
data[16]["graph"].add_edge("f", "l", 954)
data[16]["graph"].add_edge("g", "j", 1485)
data[16]["graph"].add_edge("g", "r", 1519)
data[16]["graph"].add_edge("h", "o", 1109)
data[16]["graph"].add_edge("h", "p", 1097)
data[16]["graph"].add_edge("i", "l", 291)
data[16]["graph"].add_edge("i", "r", 611)
data[16]["graph"].add_edge("j", "h", 104)
data[16]["graph"].add_edge("l", "k", 453)
data[16]["graph"].add_edge("m", "k", 1220)
data[16]["graph"].add_edge("m", "q", 1507)
data[16]["graph"].add_edge("n", "b", 552)
data[16]["graph"].add_edge("o", "p", 960)
data[16]["graph"].add_edge("o", "q", 46)
data[16]["graph"].add_edge("p", "q", 1311)
data[16]["graph"].add_edge("r", "k", 1245)
data[16]["mst"] = Graph(is_directed=False)
data[16]["mst"].add_edge("a", "e", weight=1087)
data[16]["mst"].add_edge("b", "m", weight=1161)
data[16]["mst"].add_edge("c", "g", weight=1085)
data[16]["mst"].add_edge("d", "c", weight=532)
data[16]["mst"].add_edge("d", "n", weight=684)
data[16]["mst"].add_edge("e", "c", weight=335)
data[16]["mst"].add_edge("f", "j", weight=644)
data[16]["mst"].add_edge("f", "l", weight=954)
data[16]["mst"].add_edge("h", "p", weight=1097)
data[16]["mst"].add_edge("i", "l", weight=291)
data[16]["mst"].add_edge("i", "r", weight=611)
data[16]["mst"].add_edge("j", "h", weight=104)
data[16]["mst"].add_edge("l", "k", weight=453)
data[16]["mst"].add_edge("m", "k", weight=1220)
data[16]["mst"].add_edge("n", "b", weight=552)
data[16]["mst"].add_edge("o", "p", weight=960)
data[16]["mst"].add_edge("o", "q", weight=46)
data[16]["solutions"] = [
    { "edge": ("f", "i"), "weight": 1624, "expected": [('a', 'e'), ('d', 'c'), ('d', 'n'), ('e', 'c'), ('n', 'b'), ('b', 'm'), ('m', 'k'), ('c', 'g'), ('f', 'j'), ('f', 'l'), ('i', 'l'), ('i', 'r'), ('j', 'h'), ('l', 'k'), ('h', 'p'), ('o', 'q'), ('o', 'p')] },
    { "edge": ("g", "j"), "weight": 1484, "expected": [('a', 'e'), ('d', 'c'), ('d', 'n'), ('e', 'c'), ('n', 'b'), ('b', 'm'), ('m', 'k'), ('c', 'g'), ('f', 'j'), ('f', 'l'), ('i', 'l'), ('i', 'r'), ('j', 'h'), ('l', 'k'), ('h', 'p'), ('o', 'q'), ('o', 'p')] },
    { "edge": ("o", "q"), "weight": 45, "expected": [('a', 'e'), ('d', 'c'), ('d', 'n'), ('e', 'c'), ('n', 'b'), ('b', 'm'), ('m', 'k'), ('c', 'g'), ('f', 'j'), ('f', 'l'), ('i', 'l'), ('i', 'r'), ('j', 'h'), ('l', 'k'), ('h', 'p'), ('o', 'q'), ('o', 'p')] },
    { "edge": ("d", "n"), "weight": 685, "expected": [('a', 'e'), ('d', 'c'), ('d', 'n'), ('e', 'c'), ('n', 'b'), ('b', 'm'), ('m', 'k'), ('c', 'g'), ('f', 'j'), ('f', 'l'), ('i', 'l'), ('i', 'r'), ('j', 'h'), ('l', 'k'), ('h', 'p'), ('o', 'q'), ('o', 'p')] }
]
# Graph consisting of 18 nodes
data[17]["graph"] = Graph(is_directed=False)
data[17]["graph"].add_edge("a", "c", 746)
data[17]["graph"].add_edge("a", "e", 951)
data[17]["graph"].add_edge("a", "o", 105)
data[17]["graph"].add_edge("b", "d", 749)
data[17]["graph"].add_edge("b", "j", 458)
data[17]["graph"].add_edge("b", "p", 1505)
data[17]["graph"].add_edge("c", "i", 1059)
data[17]["graph"].add_edge("c", "s", 893)
data[17]["graph"].add_edge("d", "g", 485)
data[17]["graph"].add_edge("d", "s", 721)
data[17]["graph"].add_edge("e", "n", 950)
data[17]["graph"].add_edge("e", "p", 615)
data[17]["graph"].add_edge("f", "h", 1491)
data[17]["graph"].add_edge("f", "l", 935)
data[17]["graph"].add_edge("g", "h", 1322)
data[17]["graph"].add_edge("i", "s", 789)
data[17]["graph"].add_edge("j", "f", 775)
data[17]["graph"].add_edge("j", "h", 1073)
data[17]["graph"].add_edge("k", "q", 600)
data[17]["graph"].add_edge("k", "r", 1255)
data[17]["graph"].add_edge("l", "q", 605)
data[17]["graph"].add_edge("n", "k", 735)
data[17]["graph"].add_edge("n", "l", 859)
data[17]["graph"].add_edge("o", "g", 1063)
data[17]["graph"].add_edge("o", "i", 997)
data[17]["graph"].add_edge("p", "m", 865)
data[17]["graph"].add_edge("q", "m", 180)
data[17]["graph"].add_edge("r", "m", 1657)
data[17]["mst"] = Graph(is_directed=False)
data[17]["mst"].add_edge("a", "c", weight=746)
data[17]["mst"].add_edge("a", "o", weight=105)
data[17]["mst"].add_edge("b", "d", weight=749)
data[17]["mst"].add_edge("b", "j", weight=458)
data[17]["mst"].add_edge("c", "s", weight=893)
data[17]["mst"].add_edge("d", "g", weight=485)
data[17]["mst"].add_edge("d", "s", weight=721)
data[17]["mst"].add_edge("e", "p", weight=615)
data[17]["mst"].add_edge("f", "l", weight=935)
data[17]["mst"].add_edge("i", "s", weight=789)
data[17]["mst"].add_edge("j", "f", weight=775)
data[17]["mst"].add_edge("j", "h", weight=1073)
data[17]["mst"].add_edge("k", "q", weight=600)
data[17]["mst"].add_edge("k", "r", weight=1255)
data[17]["mst"].add_edge("l", "q", weight=605)
data[17]["mst"].add_edge("n", "k", weight=735)
data[17]["mst"].add_edge("p", "m", weight=865)
data[17]["mst"].add_edge("q", "m", weight=180)
data[17]["solutions"] = [
    { "edge": ("g", "h"), "weight": 1323, "expected": [('a', 'o'), ('a', 'c'), ('c', 's'), ('e', 'p'), ('b', 'j'), ('b', 'd'), ('j', 'f'), ('j', 'h'), ('d', 'g'), ('d', 's'), ('p', 'm'), ('i', 's'), ('n', 'k'), ('f', 'l'), ('l', 'q'), ('k', 'q'), ('k', 'r'), ('q', 'm')] },
    { "edge": ("b", "p"), "weight": 1504, "expected": [('a', 'o'), ('a', 'c'), ('c', 's'), ('e', 'p'), ('b', 'j'), ('b', 'd'), ('j', 'f'), ('j', 'h'), ('d', 'g'), ('d', 's'), ('p', 'm'), ('i', 's'), ('n', 'k'), ('f', 'l'), ('l', 'q'), ('k', 'q'), ('k', 'r'), ('q', 'm')] },
    { "edge": ("j", "h"), "weight": 1072, "expected": [('a', 'o'), ('a', 'c'), ('c', 's'), ('e', 'p'), ('b', 'j'), ('b', 'd'), ('j', 'f'), ('j', 'h'), ('d', 'g'), ('d', 's'), ('p', 'm'), ('i', 's'), ('n', 'k'), ('f', 'l'), ('l', 'q'), ('k', 'q'), ('k', 'r'), ('q', 'm')] },
    { "edge": ("j", "f"), "weight": 776, "expected": [('a', 'o'), ('a', 'c'), ('c', 's'), ('e', 'p'), ('b', 'j'), ('b', 'd'), ('j', 'f'), ('j', 'h'), ('d', 'g'), ('d', 's'), ('p', 'm'), ('i', 's'), ('n', 'k'), ('f', 'l'), ('l', 'q'), ('k', 'q'), ('k', 'r'), ('q', 'm')] }
]
# Graph consisting of 18 nodes
data[18]["graph"] = Graph(is_directed=False)
data[18]["graph"].add_edge("a", "i", 193)
data[18]["graph"].add_edge("a", "k", 158)
data[18]["graph"].add_edge("a", "m", 107)
data[18]["graph"].add_edge("b", "j", 82)
data[18]["graph"].add_edge("b", "l", 343)
data[18]["graph"].add_edge("b", "s", 283)
data[18]["graph"].add_edge("c", "h", 335)
data[18]["graph"].add_edge("c", "o", 318)
data[18]["graph"].add_edge("d", "e", 14)
data[18]["graph"].add_edge("d", "r", 243)
data[18]["graph"].add_edge("e", "n", 196)
data[18]["graph"].add_edge("f", "p", 222)
data[18]["graph"].add_edge("h", "n", 170)
data[18]["graph"].add_edge("i", "o", 132)
data[18]["graph"].add_edge("i", "s", 78)
data[18]["graph"].add_edge("j", "h", 128)
data[18]["graph"].add_edge("j", "o", 290)
data[18]["graph"].add_edge("k", "c", 98)
data[18]["graph"].add_edge("k", "e", 162)
data[18]["graph"].add_edge("l", "q", 111)
data[18]["graph"].add_edge("l", "r", 65)
data[18]["graph"].add_edge("m", "d", 240)
data[18]["graph"].add_edge("m", "g", 117)
data[18]["graph"].add_edge("n", "f", 151)
data[18]["graph"].add_edge("p", "g", 10)
data[18]["graph"].add_edge("p", "q", 302)
data[18]["graph"].add_edge("r", "f", 126)
data[18]["graph"].add_edge("s", "g", 224)
data[18]["mst"] = Graph(is_directed=False)
data[18]["mst"].add_edge("a", "i", weight=193)
data[18]["mst"].add_edge("a", "k", weight=158)
data[18]["mst"].add_edge("a", "m", weight=107)
data[18]["mst"].add_edge("b", "j", weight=82)
data[18]["mst"].add_edge("d", "e", weight=14)
data[18]["mst"].add_edge("e", "n", weight=196)
data[18]["mst"].add_edge("h", "n", weight=170)
data[18]["mst"].add_edge("i", "o", weight=132)
data[18]["mst"].add_edge("i", "s", weight=78)
data[18]["mst"].add_edge("j", "h", weight=128)
data[18]["mst"].add_edge("k", "c", weight=98)
data[18]["mst"].add_edge("k", "e", weight=162)
data[18]["mst"].add_edge("l", "q", weight=111)
data[18]["mst"].add_edge("l", "r", weight=65)
data[18]["mst"].add_edge("m", "g", weight=117)
data[18]["mst"].add_edge("n", "f", weight=151)
data[18]["mst"].add_edge("p", "g", weight=10)
data[18]["mst"].add_edge("r", "f", weight=126)
data[18]["solutions"] = [
    { "edge": ("j", "o"), "weight": 291, "expected": [('a', 'm'), ('a', 'k'), ('a', 'i'), ('i', 's'), ('i', 'o'), ('k', 'c'), ('k', 'e'), ('m', 'g'), ('b', 'j'), ('j', 'h'), ('l', 'r'), ('l', 'q'), ('h', 'n'), ('d', 'e'), ('r', 'f'), ('e', 'n'), ('n', 'f'), ('p', 'g')] },
    { "edge": ("m", "d"), "weight": 239, "expected": [('a', 'm'), ('a', 'k'), ('a', 'i'), ('i', 's'), ('i', 'o'), ('k', 'c'), ('k', 'e'), ('m', 'g'), ('b', 'j'), ('j', 'h'), ('l', 'r'), ('l', 'q'), ('h', 'n'), ('d', 'e'), ('r', 'f'), ('e', 'n'), ('n', 'f'), ('p', 'g')] },
    { "edge": ("m", "g"), "weight": 116, "expected": [('a', 'm'), ('a', 'k'), ('a', 'i'), ('i', 's'), ('i', 'o'), ('k', 'c'), ('k', 'e'), ('m', 'g'), ('b', 'j'), ('j', 'h'), ('l', 'r'), ('l', 'q'), ('h', 'n'), ('d', 'e'), ('r', 'f'), ('e', 'n'), ('n', 'f'), ('p', 'g')] },
    { "edge": ("i", "o"), "weight": 133, "expected": [('a', 'm'), ('a', 'k'), ('a', 'i'), ('i', 's'), ('i', 'o'), ('k', 'c'), ('k', 'e'), ('m', 'g'), ('b', 'j'), ('j', 'h'), ('l', 'r'), ('l', 'q'), ('h', 'n'), ('d', 'e'), ('r', 'f'), ('e', 'n'), ('n', 'f'), ('p', 'g')] }
]
# Graph consisting of 19 nodes
data[19]["graph"] = Graph(is_directed=False)
data[19]["graph"].add_edge("a", "d", 535)
data[19]["graph"].add_edge("a", "e", 488)
data[19]["graph"].add_edge("a", "l", 905)
data[19]["graph"].add_edge("b", "c", 1617)
data[19]["graph"].add_edge("b", "q", 43)
data[19]["graph"].add_edge("c", "h", 1126)
data[19]["graph"].add_edge("c", "k", 1060)
data[19]["graph"].add_edge("d", "e", 1270)
data[19]["graph"].add_edge("d", "m", 1593)
data[19]["graph"].add_edge("e", "b", 1527)
data[19]["graph"].add_edge("f", "j", 548)
data[19]["graph"].add_edge("f", "s", 1138)
data[19]["graph"].add_edge("g", "i", 900)
data[19]["graph"].add_edge("g", "n", 398)
data[19]["graph"].add_edge("h", "f", 414)
data[19]["graph"].add_edge("h", "r", 927)
data[19]["graph"].add_edge("i", "p", 1444)
data[19]["graph"].add_edge("j", "n", 1053)
data[19]["graph"].add_edge("k", "m", 1052)
data[19]["graph"].add_edge("k", "o", 935)
data[19]["graph"].add_edge("l", "g", 1218)
data[19]["graph"].add_edge("l", "p", 27)
data[19]["graph"].add_edge("m", "j", 374)
data[19]["graph"].add_edge("q", "n", 1516)
data[19]["graph"].add_edge("q", "o", 1452)
data[19]["graph"].add_edge("r", "o", 871)
data[19]["graph"].add_edge("r", "p", 1549)
data[19]["graph"].add_edge("s", "i", 100)
data[19]["graph"].add_edge("s", "t", 1433)
data[19]["mst"] = Graph(is_directed=False)
data[19]["mst"].add_edge("a", "d", weight=535)
data[19]["mst"].add_edge("a", "e", weight=488)
data[19]["mst"].add_edge("a", "l", weight=905)
data[19]["mst"].add_edge("b", "q", weight=43)
data[19]["mst"].add_edge("c", "k", weight=1060)
data[19]["mst"].add_edge("f", "j", weight=548)
data[19]["mst"].add_edge("g", "i", weight=900)
data[19]["mst"].add_edge("g", "n", weight=398)
data[19]["mst"].add_edge("h", "f", weight=414)
data[19]["mst"].add_edge("h", "r", weight=927)
data[19]["mst"].add_edge("j", "n", weight=1053)
data[19]["mst"].add_edge("k", "o", weight=935)
data[19]["mst"].add_edge("l", "g", weight=1218)
data[19]["mst"].add_edge("l", "p", weight=27)
data[19]["mst"].add_edge("m", "j", weight=374)
data[19]["mst"].add_edge("q", "o", weight=1452)
data[19]["mst"].add_edge("r", "o", weight=871)
data[19]["mst"].add_edge("s", "i", weight=100)
data[19]["mst"].add_edge("s", "t", weight=1433)
data[19]["solutions"] = [
    { "edge": ("b", "c"), "weight": 1618, "expected": [('a', 'e'), ('a', 'd'), ('a', 'l'), ('l', 'p'), ('l', 'g'), ('b', 'q'), ('q', 'o'), ('c', 'k'), ('k', 'o'), ('h', 'f'), ('h', 'r'), ('m', 'j'), ('f', 'j'), ('j', 'n'), ('s', 'i'), ('s', 't'), ('g', 'n'), ('g', 'i'), ('r', 'o')] },
    { "edge": ("r", "p"), "weight": 1548, "expected": [('a', 'e'), ('a', 'd'), ('a', 'l'), ('l', 'p'), ('l', 'g'), ('b', 'q'), ('q', 'o'), ('c', 'k'), ('k', 'o'), ('h', 'f'), ('h', 'r'), ('m', 'j'), ('f', 'j'), ('j', 'n'), ('s', 'i'), ('s', 't'), ('g', 'n'), ('g', 'i'), ('r', 'o')] },
    { "edge": ("h", "r"), "weight": 926, "expected": [('a', 'e'), ('a', 'd'), ('a', 'l'), ('l', 'p'), ('l', 'g'), ('b', 'q'), ('q', 'o'), ('c', 'k'), ('k', 'o'), ('h', 'f'), ('h', 'r'), ('m', 'j'), ('f', 'j'), ('j', 'n'), ('s', 'i'), ('s', 't'), ('g', 'n'), ('g', 'i'), ('r', 'o')] },
    { "edge": ("g", "i"), "weight": 901, "expected": [('a', 'e'), ('a', 'd'), ('a', 'l'), ('l', 'p'), ('l', 'g'), ('b', 'q'), ('q', 'o'), ('c', 'k'), ('k', 'o'), ('h', 'f'), ('h', 'r'), ('m', 'j'), ('f', 'j'), ('j', 'n'), ('s', 'i'), ('s', 't'), ('g', 'n'), ('g', 'i'), ('r', 'o')] }
]
# Graph consisting of 20 nodes
data[20]["graph"] = Graph(is_directed=False)
data[20]["graph"].add_edge("a", "c", 146)
data[20]["graph"].add_edge("a", "h", 731)
data[20]["graph"].add_edge("a", "t", 1544)
data[20]["graph"].add_edge("b", "e", 260)
data[20]["graph"].add_edge("b", "k", 201)
data[20]["graph"].add_edge("b", "p", 551)
data[20]["graph"].add_edge("c", "q", 1146)
data[20]["graph"].add_edge("c", "t", 809)
data[20]["graph"].add_edge("d", "l", 21)
data[20]["graph"].add_edge("d", "s", 1067)
data[20]["graph"].add_edge("e", "i", 1508)
data[20]["graph"].add_edge("e", "n", 655)
data[20]["graph"].add_edge("f", "u", 636)
data[20]["graph"].add_edge("g", "r", 579)
data[20]["graph"].add_edge("h", "j", 480)
data[20]["graph"].add_edge("h", "o", 99)
data[20]["graph"].add_edge("i", "o", 1076)
data[20]["graph"].add_edge("k", "f", 938)
data[20]["graph"].add_edge("k", "i", 339)
data[20]["graph"].add_edge("l", "j", 1451)
data[20]["graph"].add_edge("n", "m", 355)
data[20]["graph"].add_edge("n", "o", 559)
data[20]["graph"].add_edge("p", "m", 326)
data[20]["graph"].add_edge("p", "r", 1655)
data[20]["graph"].add_edge("q", "d", 1083)
data[20]["graph"].add_edge("q", "g", 344)
data[20]["graph"].add_edge("r", "m", 841)
data[20]["graph"].add_edge("s", "l", 1665)
data[20]["graph"].add_edge("t", "f", 215)
data[20]["graph"].add_edge("u", "g", 232)
data[20]["graph"].add_edge("u", "j", 550)
data[20]["mst"] = Graph(is_directed=False)
data[20]["mst"].add_edge("a", "c", weight=146)
data[20]["mst"].add_edge("a", "h", weight=731)
data[20]["mst"].add_edge("b", "e", weight=260)
data[20]["mst"].add_edge("b", "k", weight=201)
data[20]["mst"].add_edge("b", "p", weight=551)
data[20]["mst"].add_edge("d", "l", weight=21)
data[20]["mst"].add_edge("d", "s", weight=1067)
data[20]["mst"].add_edge("f", "u", weight=636)
data[20]["mst"].add_edge("g", "r", weight=579)
data[20]["mst"].add_edge("h", "j", weight=480)
data[20]["mst"].add_edge("h", "o", weight=99)
data[20]["mst"].add_edge("k", "i", weight=339)
data[20]["mst"].add_edge("n", "m", weight=355)
data[20]["mst"].add_edge("n", "o", weight=559)
data[20]["mst"].add_edge("p", "m", weight=326)
data[20]["mst"].add_edge("q", "d", weight=1083)
data[20]["mst"].add_edge("q", "g", weight=344)
data[20]["mst"].add_edge("t", "f", weight=215)
data[20]["mst"].add_edge("u", "g", weight=232)
data[20]["mst"].add_edge("u", "j", weight=550)
data[20]["solutions"] = [
    { "edge": ("l", "j"), "weight": 1452, "expected": [('a', 'c'), ('a', 'h'), ('t', 'f'), ('h', 'o'), ('h', 'j'), ('b', 'k'), ('b', 'e'), ('b', 'p'), ('k', 'i'), ('p', 'm'), ('q', 'g'), ('q', 'd'), ('d', 'l'), ('d', 's'), ('n', 'm'), ('n', 'o'), ('f', 'u'), ('u', 'g'), ('u', 'j'), ('g', 'r')] },
    { "edge": ("s", "l"), "weight": 1664, "expected": [('a', 'c'), ('a', 'h'), ('t', 'f'), ('h', 'o'), ('h', 'j'), ('b', 'k'), ('b', 'e'), ('b', 'p'), ('k', 'i'), ('p', 'm'), ('q', 'g'), ('q', 'd'), ('d', 'l'), ('d', 's'), ('n', 'm'), ('n', 'o'), ('f', 'u'), ('u', 'g'), ('u', 'j'), ('g', 'r')] },
    { "edge": ("n", "o"), "weight": 558, "expected": [('a', 'c'), ('a', 'h'), ('t', 'f'), ('h', 'o'), ('h', 'j'), ('b', 'k'), ('b', 'e'), ('b', 'p'), ('k', 'i'), ('p', 'm'), ('q', 'g'), ('q', 'd'), ('d', 'l'), ('d', 's'), ('n', 'm'), ('n', 'o'), ('f', 'u'), ('u', 'g'), ('u', 'j'), ('g', 'r')] },
    { "edge": ("g", "r"), "weight": 580, "expected": [('a', 'c'), ('a', 'h'), ('t', 'f'), ('h', 'o'), ('h', 'j'), ('b', 'k'), ('b', 'e'), ('b', 'p'), ('k', 'i'), ('p', 'm'), ('q', 'g'), ('q', 'd'), ('d', 'l'), ('d', 's'), ('n', 'm'), ('n', 'o'), ('f', 'u'), ('u', 'g'), ('u', 'j'), ('g', 'r')] }
]
# Graph consisting of 20 nodes
data[21]["graph"] = Graph(is_directed=False)
data[21]["graph"].add_edge("a", "k", 432)
data[21]["graph"].add_edge("a", "n", 225)
data[21]["graph"].add_edge("a", "o", 401)
data[21]["graph"].add_edge("b", "c", 295)
data[21]["graph"].add_edge("b", "i", 29)
data[21]["graph"].add_edge("b", "r", 335)
data[21]["graph"].add_edge("c", "j", 256)
data[21]["graph"].add_edge("c", "t", 347)
data[21]["graph"].add_edge("d", "f", 237)
data[21]["graph"].add_edge("d", "g", 206)
data[21]["graph"].add_edge("d", "q", 387)
data[21]["graph"].add_edge("e", "h", 138)
data[21]["graph"].add_edge("f", "e", 8)
data[21]["graph"].add_edge("g", "s", 140)
data[21]["graph"].add_edge("h", "u", 113)
data[21]["graph"].add_edge("i", "f", 384)
data[21]["graph"].add_edge("j", "l", 94)
data[21]["graph"].add_edge("k", "j", 379)
data[21]["graph"].add_edge("k", "o", 244)
data[21]["graph"].add_edge("n", "h", 283)
data[21]["graph"].add_edge("n", "m", 85)
data[21]["graph"].add_edge("o", "i", 274)
data[21]["graph"].add_edge("q", "m", 438)
data[21]["graph"].add_edge("q", "p", 412)
data[21]["graph"].add_edge("r", "e", 80)
data[21]["graph"].add_edge("r", "p", 37)
data[21]["graph"].add_edge("s", "l", 317)
data[21]["graph"].add_edge("s", "m", 287)
data[21]["graph"].add_edge("t", "g", 166)
data[21]["graph"].add_edge("t", "l", 301)
data[21]["graph"].add_edge("u", "p", 51)
data[21]["mst"] = Graph(is_directed=False)
data[21]["mst"].add_edge("a", "n", weight=225)
data[21]["mst"].add_edge("b", "c", weight=295)
data[21]["mst"].add_edge("b", "i", weight=29)
data[21]["mst"].add_edge("c", "j", weight=256)
data[21]["mst"].add_edge("d", "f", weight=237)
data[21]["mst"].add_edge("d", "g", weight=206)
data[21]["mst"].add_edge("d", "q", weight=387)
data[21]["mst"].add_edge("f", "e", weight=8)
data[21]["mst"].add_edge("g", "s", weight=140)
data[21]["mst"].add_edge("h", "u", weight=113)
data[21]["mst"].add_edge("j", "l", weight=94)
data[21]["mst"].add_edge("k", "o", weight=244)
data[21]["mst"].add_edge("n", "h", weight=283)
data[21]["mst"].add_edge("n", "m", weight=85)
data[21]["mst"].add_edge("o", "i", weight=274)
data[21]["mst"].add_edge("r", "e", weight=80)
data[21]["mst"].add_edge("r", "p", weight=37)
data[21]["mst"].add_edge("t", "g", weight=166)
data[21]["mst"].add_edge("t", "l", weight=301)
data[21]["mst"].add_edge("u", "p", weight=51)
data[21]["solutions"] = [
    { "edge": ("i", "f"), "weight": 385, "expected": [('a', 'n'), ('k', 'o'), ('n', 'm'), ('n', 'h'), ('o', 'i'), ('b', 'i'), ('b', 'c'), ('r', 'p'), ('r', 'e'), ('c', 'j'), ('t', 'g'), ('t', 'l'), ('j', 'l'), ('d', 'g'), ('d', 'f'), ('d', 'q'), ('f', 'e'), ('g', 's'), ('h', 'u'), ('u', 'p')] },
    { "edge": ("a", "o"), "weight": 400, "expected": [('a', 'n'), ('k', 'o'), ('n', 'm'), ('n', 'h'), ('o', 'i'), ('b', 'i'), ('b', 'c'), ('r', 'p'), ('r', 'e'), ('c', 'j'), ('t', 'g'), ('t', 'l'), ('j', 'l'), ('d', 'g'), ('d', 'f'), ('d', 'q'), ('f', 'e'), ('g', 's'), ('h', 'u'), ('u', 'p')] },
    { "edge": ("g", "s"), "weight": 139, "expected": [('a', 'n'), ('k', 'o'), ('n', 'm'), ('n', 'h'), ('o', 'i'), ('b', 'i'), ('b', 'c'), ('r', 'p'), ('r', 'e'), ('c', 'j'), ('t', 'g'), ('t', 'l'), ('j', 'l'), ('d', 'g'), ('d', 'f'), ('d', 'q'), ('f', 'e'), ('g', 's'), ('h', 'u'), ('u', 'p')] },
    { "edge": ("c", "j"), "weight": 257, "expected": [('a', 'n'), ('k', 'o'), ('n', 'm'), ('n', 'h'), ('o', 'i'), ('b', 'i'), ('b', 'c'), ('r', 'p'), ('r', 'e'), ('c', 'j'), ('t', 'g'), ('t', 'l'), ('j', 'l'), ('d', 'g'), ('d', 'f'), ('d', 'q'), ('f', 'e'), ('g', 's'), ('h', 'u'), ('u', 'p')] }
]
# Graph consisting of 21 nodes
data[22]["graph"] = Graph(is_directed=False)
data[22]["graph"].add_edge("a", "h", 1067)
data[22]["graph"].add_edge("a", "m", 1214)
data[22]["graph"].add_edge("a", "n", 927)
data[22]["graph"].add_edge("b", "c", 973)
data[22]["graph"].add_edge("b", "d", 327)
data[22]["graph"].add_edge("b", "t", 851)
data[22]["graph"].add_edge("c", "i", 42)
data[22]["graph"].add_edge("c", "p", 1175)
data[22]["graph"].add_edge("d", "f", 1197)
data[22]["graph"].add_edge("e", "j", 408)
data[22]["graph"].add_edge("f", "u", 1415)
data[22]["graph"].add_edge("g", "s", 412)
data[22]["graph"].add_edge("g", "v", 295)
data[22]["graph"].add_edge("h", "d", 1515)
data[22]["graph"].add_edge("h", "g", 643)
data[22]["graph"].add_edge("i", "s", 567)
data[22]["graph"].add_edge("j", "k", 869)
data[22]["graph"].add_edge("j", "u", 1543)
data[22]["graph"].add_edge("k", "q", 1551)
data[22]["graph"].add_edge("l", "r", 581)
data[22]["graph"].add_edge("m", "i", 1575)
data[22]["graph"].add_edge("m", "o", 1461)
data[22]["graph"].add_edge("n", "e", 362)
data[22]["graph"].add_edge("n", "r", 218)
data[22]["graph"].add_edge("p", "f", 1511)
data[22]["graph"].add_edge("p", "l", 263)
data[22]["graph"].add_edge("q", "l", 1209)
data[22]["graph"].add_edge("r", "o", 520)
data[22]["graph"].add_edge("t", "e", 1577)
data[22]["graph"].add_edge("t", "o", 732)
data[22]["graph"].add_edge("u", "s", 1339)
data[22]["graph"].add_edge("v", "k", 157)
data[22]["graph"].add_edge("v", "q", 900)
data[22]["mst"] = Graph(is_directed=False)
data[22]["mst"].add_edge("a", "m", weight=1214)
data[22]["mst"].add_edge("a", "n", weight=927)
data[22]["mst"].add_edge("b", "d", weight=327)
data[22]["mst"].add_edge("b", "t", weight=851)
data[22]["mst"].add_edge("c", "i", weight=42)
data[22]["mst"].add_edge("d", "f", weight=1197)
data[22]["mst"].add_edge("e", "j", weight=408)
data[22]["mst"].add_edge("g", "s", weight=412)
data[22]["mst"].add_edge("g", "v", weight=295)
data[22]["mst"].add_edge("h", "g", weight=643)
data[22]["mst"].add_edge("i", "s", weight=567)
data[22]["mst"].add_edge("j", "k", weight=869)
data[22]["mst"].add_edge("l", "r", weight=581)
data[22]["mst"].add_edge("n", "e", weight=362)
data[22]["mst"].add_edge("n", "r", weight=218)
data[22]["mst"].add_edge("p", "l", weight=263)
data[22]["mst"].add_edge("r", "o", weight=520)
data[22]["mst"].add_edge("t", "o", weight=732)
data[22]["mst"].add_edge("u", "s", weight=1339)
data[22]["mst"].add_edge("v", "k", weight=157)
data[22]["mst"].add_edge("v", "q", weight=900)
data[22]["solutions"] = [
    { "edge": ("c", "p"), "weight": 1176, "expected": [('a', 'n'), ('a', 'm'), ('n', 'r'), ('n', 'e'), ('h', 'g'), ('b', 'd'), ('b', 't'), ('t', 'o'), ('c', 'i'), ('d', 'f'), ('i', 's'), ('p', 'l'), ('e', 'j'), ('j', 'k'), ('u', 's'), ('g', 'v'), ('g', 's'), ('v', 'k'), ('v', 'q'), ('l', 'r'), ('r', 'o')] },
    { "edge": ("m", "i"), "weight": 1574, "expected": [('a', 'n'), ('a', 'm'), ('n', 'r'), ('n', 'e'), ('h', 'g'), ('b', 'd'), ('b', 't'), ('t', 'o'), ('c', 'i'), ('d', 'f'), ('i', 's'), ('p', 'l'), ('e', 'j'), ('j', 'k'), ('u', 's'), ('g', 'v'), ('g', 's'), ('v', 'k'), ('v', 'q'), ('l', 'r'), ('r', 'o')] },
    { "edge": ("j", "k"), "weight": 868, "expected": [('a', 'n'), ('a', 'm'), ('n', 'r'), ('n', 'e'), ('h', 'g'), ('b', 'd'), ('b', 't'), ('t', 'o'), ('c', 'i'), ('d', 'f'), ('i', 's'), ('p', 'l'), ('e', 'j'), ('j', 'k'), ('u', 's'), ('g', 'v'), ('g', 's'), ('v', 'k'), ('v', 'q'), ('l', 'r'), ('r', 'o')] },
    { "edge": ("a", "n"), "weight": 928, "expected": [('a', 'n'), ('a', 'm'), ('n', 'r'), ('n', 'e'), ('h', 'g'), ('b', 'd'), ('b', 't'), ('t', 'o'), ('c', 'i'), ('d', 'f'), ('i', 's'), ('p', 'l'), ('e', 'j'), ('j', 'k'), ('u', 's'), ('g', 'v'), ('g', 's'), ('v', 'k'), ('v', 'q'), ('l', 'r'), ('r', 'o')] }
]
# Graph consisting of 22 nodes
data[23]["graph"] = Graph(is_directed=False)
data[23]["graph"].add_edge("a", "c", 376)
data[23]["graph"].add_edge("a", "m", 1583)
data[23]["graph"].add_edge("a", "v", 1153)
data[23]["graph"].add_edge("b", "p", 458)
data[23]["graph"].add_edge("b", "t", 893)
data[23]["graph"].add_edge("b", "w", 800)
data[23]["graph"].add_edge("c", "i", 258)
data[23]["graph"].add_edge("c", "t", 1330)
data[23]["graph"].add_edge("d", "h", 381)
data[23]["graph"].add_edge("d", "k", 1148)
data[23]["graph"].add_edge("d", "n", 18)
data[23]["graph"].add_edge("e", "f", 1494)
data[23]["graph"].add_edge("e", "g", 146)
data[23]["graph"].add_edge("f", "g", 1047)
data[23]["graph"].add_edge("f", "o", 1394)
data[23]["graph"].add_edge("g", "l", 1063)
data[23]["graph"].add_edge("h", "j", 384)
data[23]["graph"].add_edge("k", "r", 1608)
data[23]["graph"].add_edge("l", "q", 1364)
data[23]["graph"].add_edge("l", "u", 118)
data[23]["graph"].add_edge("m", "e", 579)
data[23]["graph"].add_edge("m", "u", 586)
data[23]["graph"].add_edge("n", "o", 542)
data[23]["graph"].add_edge("n", "u", 1348)
data[23]["graph"].add_edge("o", "j", 1221)
data[23]["graph"].add_edge("p", "h", 573)
data[23]["graph"].add_edge("p", "k", 856)
data[23]["graph"].add_edge("q", "s", 131)
data[23]["graph"].add_edge("r", "q", 472)
data[23]["graph"].add_edge("r", "s", 76)
data[23]["graph"].add_edge("t", "j", 61)
data[23]["graph"].add_edge("v", "i", 1512)
data[23]["graph"].add_edge("v", "s", 349)
data[23]["graph"].add_edge("w", "i", 1541)
data[23]["mst"] = Graph(is_directed=False)
data[23]["mst"].add_edge("a", "c", weight=376)
data[23]["mst"].add_edge("a", "v", weight=1153)
data[23]["mst"].add_edge("b", "p", weight=458)
data[23]["mst"].add_edge("b", "w", weight=800)
data[23]["mst"].add_edge("c", "i", weight=258)
data[23]["mst"].add_edge("c", "t", weight=1330)
data[23]["mst"].add_edge("d", "h", weight=381)
data[23]["mst"].add_edge("d", "n", weight=18)
data[23]["mst"].add_edge("e", "g", weight=146)
data[23]["mst"].add_edge("f", "g", weight=1047)
data[23]["mst"].add_edge("h", "j", weight=384)
data[23]["mst"].add_edge("l", "u", weight=118)
data[23]["mst"].add_edge("m", "e", weight=579)
data[23]["mst"].add_edge("m", "u", weight=586)
data[23]["mst"].add_edge("n", "o", weight=542)
data[23]["mst"].add_edge("n", "u", weight=1348)
data[23]["mst"].add_edge("p", "h", weight=573)
data[23]["mst"].add_edge("p", "k", weight=856)
data[23]["mst"].add_edge("q", "s", weight=131)
data[23]["mst"].add_edge("r", "s", weight=76)
data[23]["mst"].add_edge("t", "j", weight=61)
data[23]["mst"].add_edge("v", "s", weight=349)
data[23]["solutions"] = [
    { "edge": ("o", "j"), "weight": 1222, "expected": [('a', 'c'), ('a', 'v'), ('c', 'i'), ('c', 't'), ('m', 'e'), ('m', 'u'), ('v', 's'), ('b', 'p'), ('b', 'w'), ('t', 'j'), ('p', 'h'), ('p', 'k'), ('d', 'n'), ('d', 'h'), ('n', 'o'), ('n', 'u'), ('h', 'j'), ('e', 'g'), ('f', 'g'), ('l', 'u'), ('r', 's'), ('q', 's')] },
    { "edge": ("f", "o"), "weight": 1393, "expected": [('a', 'c'), ('a', 'v'), ('c', 'i'), ('c', 't'), ('m', 'e'), ('m', 'u'), ('v', 's'), ('b', 'p'), ('b', 'w'), ('t', 'j'), ('p', 'h'), ('p', 'k'), ('d', 'n'), ('d', 'h'), ('n', 'o'), ('n', 'u'), ('h', 'j'), ('e', 'g'), ('f', 'g'), ('l', 'u'), ('r', 's'), ('q', 's')] },
    { "edge": ("r", "s"), "weight": 75, "expected": [('a', 'c'), ('a', 'v'), ('c', 'i'), ('c', 't'), ('m', 'e'), ('m', 'u'), ('v', 's'), ('b', 'p'), ('b', 'w'), ('t', 'j'), ('p', 'h'), ('p', 'k'), ('d', 'n'), ('d', 'h'), ('n', 'o'), ('n', 'u'), ('h', 'j'), ('e', 'g'), ('f', 'g'), ('l', 'u'), ('r', 's'), ('q', 's')] },
    { "edge": ("f", "g"), "weight": 1048, "expected": [('a', 'c'), ('a', 'v'), ('c', 'i'), ('c', 't'), ('m', 'e'), ('m', 'u'), ('v', 's'), ('b', 'p'), ('b', 'w'), ('t', 'j'), ('p', 'h'), ('p', 'k'), ('d', 'n'), ('d', 'h'), ('n', 'o'), ('n', 'u'), ('h', 'j'), ('e', 'g'), ('f', 'g'), ('l', 'u'), ('r', 's'), ('q', 's')] }
]
# Graph consisting of 23 nodes
data[24]["graph"] = Graph(is_directed=False)
data[24]["graph"].add_edge("a", "e", 83)
data[24]["graph"].add_edge("a", "n", 307)
data[24]["graph"].add_edge("a", "u", 1193)
data[24]["graph"].add_edge("b", "i", 808)
data[24]["graph"].add_edge("b", "r", 1356)
data[24]["graph"].add_edge("c", "j", 974)
data[24]["graph"].add_edge("c", "l", 468)
data[24]["graph"].add_edge("c", "m", 603)
data[24]["graph"].add_edge("d", "h", 434)
data[24]["graph"].add_edge("d", "o", 1309)
data[24]["graph"].add_edge("d", "x", 1001)
data[24]["graph"].add_edge("e", "s", 1237)
data[24]["graph"].add_edge("e", "x", 302)
data[24]["graph"].add_edge("f", "k", 1463)
data[24]["graph"].add_edge("g", "v", 438)
data[24]["graph"].add_edge("h", "q", 471)
data[24]["graph"].add_edge("i", "o", 1264)
data[24]["graph"].add_edge("i", "s", 1431)
data[24]["graph"].add_edge("j", "f", 1071)
data[24]["graph"].add_edge("j", "m", 191)
data[24]["graph"].add_edge("k", "g", 824)
data[24]["graph"].add_edge("l", "s", 593)
data[24]["graph"].add_edge("l", "w", 1624)
data[24]["graph"].add_edge("m", "f", 457)
data[24]["graph"].add_edge("n", "h", 81)
data[24]["graph"].add_edge("n", "q", 600)
data[24]["graph"].add_edge("o", "g", 50)
data[24]["graph"].add_edge("r", "p", 437)
data[24]["graph"].add_edge("r", "q", 1524)
data[24]["graph"].add_edge("u", "b", 553)
data[24]["graph"].add_edge("u", "p", 1115)
data[24]["graph"].add_edge("v", "t", 1495)
data[24]["graph"].add_edge("w", "p", 379)
data[24]["graph"].add_edge("w", "t", 1038)
data[24]["graph"].add_edge("x", "k", 48)
data[24]["mst"] = Graph(is_directed=False)
data[24]["mst"].add_edge("a", "e", weight=83)
data[24]["mst"].add_edge("a", "n", weight=307)
data[24]["mst"].add_edge("a", "u", weight=1193)
data[24]["mst"].add_edge("b", "i", weight=808)
data[24]["mst"].add_edge("c", "l", weight=468)
data[24]["mst"].add_edge("c", "m", weight=603)
data[24]["mst"].add_edge("d", "h", weight=434)
data[24]["mst"].add_edge("e", "s", weight=1237)
data[24]["mst"].add_edge("e", "x", weight=302)
data[24]["mst"].add_edge("g", "v", weight=438)
data[24]["mst"].add_edge("h", "q", weight=471)
data[24]["mst"].add_edge("j", "m", weight=191)
data[24]["mst"].add_edge("k", "g", weight=824)
data[24]["mst"].add_edge("l", "s", weight=593)
data[24]["mst"].add_edge("m", "f", weight=457)
data[24]["mst"].add_edge("n", "h", weight=81)
data[24]["mst"].add_edge("o", "g", weight=50)
data[24]["mst"].add_edge("r", "p", weight=437)
data[24]["mst"].add_edge("u", "b", weight=553)
data[24]["mst"].add_edge("u", "p", weight=1115)
data[24]["mst"].add_edge("w", "p", weight=379)
data[24]["mst"].add_edge("w", "t", weight=1038)
data[24]["mst"].add_edge("x", "k", weight=48)
data[24]["solutions"] = [
    { "edge": ("n", "q"), "weight": 601, "expected": [('a', 'e'), ('a', 'n'), ('a', 'u'), ('u', 'b'), ('u', 'p'), ('e', 'x'), ('e', 's'), ('n', 'h'), ('b', 'i'), ('r', 'p'), ('c', 'l'), ('c', 'm'), ('j', 'm'), ('l', 's'), ('m', 'f'), ('d', 'h'), ('x', 'k'), ('o', 'g'), ('h', 'q'), ('k', 'g'), ('g', 'v'), ('w', 'p'), ('w', 't')] },
    { "edge": ("v", "t"), "weight": 1494, "expected": [('a', 'e'), ('a', 'n'), ('a', 'u'), ('u', 'b'), ('u', 'p'), ('e', 'x'), ('e', 's'), ('n', 'h'), ('b', 'i'), ('r', 'p'), ('c', 'l'), ('c', 'm'), ('j', 'm'), ('l', 's'), ('m', 'f'), ('d', 'h'), ('x', 'k'), ('o', 'g'), ('h', 'q'), ('k', 'g'), ('g', 'v'), ('w', 'p'), ('w', 't')] },
    { "edge": ("e", "s"), "weight": 1236, "expected": [('a', 'e'), ('a', 'n'), ('a', 'u'), ('u', 'b'), ('u', 'p'), ('e', 'x'), ('e', 's'), ('n', 'h'), ('b', 'i'), ('r', 'p'), ('c', 'l'), ('c', 'm'), ('j', 'm'), ('l', 's'), ('m', 'f'), ('d', 'h'), ('x', 'k'), ('o', 'g'), ('h', 'q'), ('k', 'g'), ('g', 'v'), ('w', 'p'), ('w', 't')] },
    { "edge": ("w", "t"), "weight": 1039, "expected": [('a', 'e'), ('a', 'n'), ('a', 'u'), ('u', 'b'), ('u', 'p'), ('e', 'x'), ('e', 's'), ('n', 'h'), ('b', 'i'), ('r', 'p'), ('c', 'l'), ('c', 'm'), ('j', 'm'), ('l', 's'), ('m', 'f'), ('d', 'h'), ('x', 'k'), ('o', 'g'), ('h', 'q'), ('k', 'g'), ('g', 'v'), ('w', 'p'), ('w', 't')] }
]
# Graph consisting of 24 nodes
data[25]["graph"] = Graph(is_directed=False)
data[25]["graph"].add_edge("a", "d", 599)
data[25]["graph"].add_edge("a", "k", 1329)
data[25]["graph"].add_edge("a", "x", 97)
data[25]["graph"].add_edge("b", "h", 1391)
data[25]["graph"].add_edge("b", "n", 1132)
data[25]["graph"].add_edge("b", "s", 391)
data[25]["graph"].add_edge("c", "g", 887)
data[25]["graph"].add_edge("c", "t", 25)
data[25]["graph"].add_edge("c", "y", 1181)
data[25]["graph"].add_edge("d", "r", 139)
data[25]["graph"].add_edge("d", "x", 557)
data[25]["graph"].add_edge("e", "o", 1575)
data[25]["graph"].add_edge("f", "i", 1348)
data[25]["graph"].add_edge("g", "e", 1333)
data[25]["graph"].add_edge("g", "i", 626)
data[25]["graph"].add_edge("h", "y", 1486)
data[25]["graph"].add_edge("j", "l", 1577)
data[25]["graph"].add_edge("k", "f", 64)
data[25]["graph"].add_edge("k", "j", 1223)
data[25]["graph"].add_edge("l", "w", 1675)
data[25]["graph"].add_edge("m", "p", 1669)
data[25]["graph"].add_edge("m", "q", 1504)
data[25]["graph"].add_edge("m", "u", 610)
data[25]["graph"].add_edge("n", "i", 493)
data[25]["graph"].add_edge("n", "j", 1639)
data[25]["graph"].add_edge("o", "v", 29)
data[25]["graph"].add_edge("p", "v", 308)
data[25]["graph"].add_edge("q", "u", 1059)
data[25]["graph"].add_edge("r", "f", 781)
data[25]["graph"].add_edge("r", "p", 803)
data[25]["graph"].add_edge("s", "q", 1263)
data[25]["graph"].add_edge("s", "w", 705)
data[25]["graph"].add_edge("t", "l", 1604)
data[25]["graph"].add_edge("t", "o", 890)
data[25]["graph"].add_edge("w", "u", 899)
data[25]["graph"].add_edge("x", "h", 1358)
data[25]["graph"].add_edge("y", "e", 638)
data[25]["mst"] = Graph(is_directed=False)
data[25]["mst"].add_edge("a", "x", weight=97)
data[25]["mst"].add_edge("b", "n", weight=1132)
data[25]["mst"].add_edge("b", "s", weight=391)
data[25]["mst"].add_edge("c", "g", weight=887)
data[25]["mst"].add_edge("c", "t", weight=25)
data[25]["mst"].add_edge("c", "y", weight=1181)
data[25]["mst"].add_edge("d", "r", weight=139)
data[25]["mst"].add_edge("d", "x", weight=557)
data[25]["mst"].add_edge("g", "i", weight=626)
data[25]["mst"].add_edge("j", "l", weight=1577)
data[25]["mst"].add_edge("k", "f", weight=64)
data[25]["mst"].add_edge("k", "j", weight=1223)
data[25]["mst"].add_edge("m", "u", weight=610)
data[25]["mst"].add_edge("n", "i", weight=493)
data[25]["mst"].add_edge("o", "v", weight=29)
data[25]["mst"].add_edge("p", "v", weight=308)
data[25]["mst"].add_edge("q", "u", weight=1059)
data[25]["mst"].add_edge("r", "f", weight=781)
data[25]["mst"].add_edge("r", "p", weight=803)
data[25]["mst"].add_edge("s", "w", weight=705)
data[25]["mst"].add_edge("t", "o", weight=890)
data[25]["mst"].add_edge("w", "u", weight=899)
data[25]["mst"].add_edge("x", "h", weight=1358)
data[25]["mst"].add_edge("y", "e", weight=638)
data[25]["solutions"] = [
    { "edge": ("n", "j"), "weight": 1640, "expected": [('a', 'x'), ('k', 'f'), ('k', 'j'), ('d', 'r'), ('d', 'x'), ('x', 'h'), ('b', 's'), ('b', 'n'), ('s', 'w'), ('n', 'i'), ('c', 't'), ('c', 'g'), ('c', 'y'), ('y', 'e'), ('t', 'o'), ('g', 'i'), ('r', 'f'), ('r', 'p'), ('o', 'v'), ('j', 'l'), ('w', 'u'), ('m', 'u'), ('q', 'u'), ('p', 'v')] },
    { "edge": ("l", "w"), "weight": 1674, "expected": [('a', 'x'), ('k', 'f'), ('k', 'j'), ('d', 'r'), ('d', 'x'), ('x', 'h'), ('b', 's'), ('b', 'n'), ('s', 'w'), ('n', 'i'), ('c', 't'), ('c', 'g'), ('c', 'y'), ('y', 'e'), ('t', 'o'), ('g', 'i'), ('r', 'f'), ('r', 'p'), ('o', 'v'), ('j', 'l'), ('w', 'u'), ('m', 'u'), ('q', 'u'), ('p', 'v')] },
    { "edge": ("n", "i"), "weight": 492, "expected": [('a', 'x'), ('k', 'f'), ('k', 'j'), ('d', 'r'), ('d', 'x'), ('x', 'h'), ('b', 's'), ('b', 'n'), ('s', 'w'), ('n', 'i'), ('c', 't'), ('c', 'g'), ('c', 'y'), ('y', 'e'), ('t', 'o'), ('g', 'i'), ('r', 'f'), ('r', 'p'), ('o', 'v'), ('j', 'l'), ('w', 'u'), ('m', 'u'), ('q', 'u'), ('p', 'v')] },
    { "edge": ("o", "v"), "weight": 30, "expected": [('a', 'x'), ('k', 'f'), ('k', 'j'), ('d', 'r'), ('d', 'x'), ('x', 'h'), ('b', 's'), ('b', 'n'), ('s', 'w'), ('n', 'i'), ('c', 't'), ('c', 'g'), ('c', 'y'), ('y', 'e'), ('t', 'o'), ('g', 'i'), ('r', 'f'), ('r', 'p'), ('o', 'v'), ('j', 'l'), ('w', 'u'), ('m', 'u'), ('q', 'u'), ('p', 'v')] }
]
# Graph consisting of 25 nodes
data[26]["graph"] = Graph(is_directed=False)
data[26]["graph"].add_edge("a", "d", 759)
data[26]["graph"].add_edge("a", "i", 541)
data[26]["graph"].add_edge("a", "v", 631)
data[26]["graph"].add_edge("b", "j", 242)
data[26]["graph"].add_edge("b", "p", 1513)
data[26]["graph"].add_edge("b", "t", 467)
data[26]["graph"].add_edge("c", "m", 51)
data[26]["graph"].add_edge("c", "u", 387)
data[26]["graph"].add_edge("c", "y", 440)
data[26]["graph"].add_edge("d", "q", 1384)
data[26]["graph"].add_edge("d", "u", 58)
data[26]["graph"].add_edge("e", "l", 139)
data[26]["graph"].add_edge("f", "x", 784)
data[26]["graph"].add_edge("f", "z", 1549)
data[26]["graph"].add_edge("g", "h", 691)
data[26]["graph"].add_edge("i", "o", 712)
data[26]["graph"].add_edge("i", "s", 811)
data[26]["graph"].add_edge("j", "n", 442)
data[26]["graph"].add_edge("j", "r", 1098)
data[26]["graph"].add_edge("l", "g", 1552)
data[26]["graph"].add_edge("l", "s", 193)
data[26]["graph"].add_edge("m", "k", 1655)
data[26]["graph"].add_edge("m", "s", 1003)
data[26]["graph"].add_edge("n", "r", 463)
data[26]["graph"].add_edge("o", "r", 55)
data[26]["graph"].add_edge("p", "n", 594)
data[26]["graph"].add_edge("p", "z", 977)
data[26]["graph"].add_edge("q", "e", 141)
data[26]["graph"].add_edge("q", "g", 48)
data[26]["graph"].add_edge("t", "f", 1021)
data[26]["graph"].add_edge("t", "h", 578)
data[26]["graph"].add_edge("u", "k", 757)
data[26]["graph"].add_edge("v", "h", 1266)
data[26]["graph"].add_edge("v", "w", 1494)
data[26]["graph"].add_edge("x", "w", 1438)
data[26]["graph"].add_edge("y", "e", 97)
data[26]["graph"].add_edge("y", "k", 1046)
data[26]["graph"].add_edge("z", "o", 310)
data[26]["mst"] = Graph(is_directed=False)
data[26]["mst"].add_edge("a", "i", weight=541)
data[26]["mst"].add_edge("a", "v", weight=631)
data[26]["mst"].add_edge("b", "j", weight=242)
data[26]["mst"].add_edge("b", "t", weight=467)
data[26]["mst"].add_edge("c", "m", weight=51)
data[26]["mst"].add_edge("c", "u", weight=387)
data[26]["mst"].add_edge("c", "y", weight=440)
data[26]["mst"].add_edge("d", "u", weight=58)
data[26]["mst"].add_edge("e", "l", weight=139)
data[26]["mst"].add_edge("f", "x", weight=784)
data[26]["mst"].add_edge("g", "h", weight=691)
data[26]["mst"].add_edge("i", "o", weight=712)
data[26]["mst"].add_edge("j", "n", weight=442)
data[26]["mst"].add_edge("l", "s", weight=193)
data[26]["mst"].add_edge("n", "r", weight=463)
data[26]["mst"].add_edge("o", "r", weight=55)
data[26]["mst"].add_edge("p", "n", weight=594)
data[26]["mst"].add_edge("q", "e", weight=141)
data[26]["mst"].add_edge("q", "g", weight=48)
data[26]["mst"].add_edge("t", "f", weight=1021)
data[26]["mst"].add_edge("t", "h", weight=578)
data[26]["mst"].add_edge("u", "k", weight=757)
data[26]["mst"].add_edge("x", "w", weight=1438)
data[26]["mst"].add_edge("y", "e", weight=97)
data[26]["mst"].add_edge("z", "o", weight=310)
data[26]["solutions"] = [
    { "edge": ("m", "s"), "weight": 1004, "expected": [('a', 'i'), ('a', 'v'), ('i', 'o'), ('d', 'u'), ('b', 'j'), ('b', 't'), ('j', 'n'), ('t', 'h'), ('t', 'f'), ('p', 'n'), ('c', 'm'), ('c', 'u'), ('c', 'y'), ('y', 'e'), ('u', 'k'), ('q', 'g'), ('q', 'e'), ('e', 'l'), ('l', 's'), ('f', 'x'), ('z', 'o'), ('x', 'w'), ('g', 'h'), ('o', 'r'), ('n', 'r')] },
    { "edge": ("f", "z"), "weight": 1548, "expected": [('a', 'i'), ('a', 'v'), ('i', 'o'), ('d', 'u'), ('b', 'j'), ('b', 't'), ('j', 'n'), ('t', 'h'), ('t', 'f'), ('p', 'n'), ('c', 'm'), ('c', 'u'), ('c', 'y'), ('y', 'e'), ('u', 'k'), ('q', 'g'), ('q', 'e'), ('e', 'l'), ('l', 's'), ('f', 'x'), ('z', 'o'), ('x', 'w'), ('g', 'h'), ('o', 'r'), ('n', 'r')] },
    { "edge": ("u", "k"), "weight": 756, "expected": [('a', 'i'), ('a', 'v'), ('i', 'o'), ('d', 'u'), ('b', 'j'), ('b', 't'), ('j', 'n'), ('t', 'h'), ('t', 'f'), ('p', 'n'), ('c', 'm'), ('c', 'u'), ('c', 'y'), ('y', 'e'), ('u', 'k'), ('q', 'g'), ('q', 'e'), ('e', 'l'), ('l', 's'), ('f', 'x'), ('z', 'o'), ('x', 'w'), ('g', 'h'), ('o', 'r'), ('n', 'r')] },
    { "edge": ("i", "o"), "weight": 713, "expected": [('a', 'i'), ('a', 'v'), ('i', 'o'), ('d', 'u'), ('b', 'j'), ('b', 't'), ('j', 'n'), ('t', 'h'), ('t', 'f'), ('p', 'n'), ('c', 'm'), ('c', 'u'), ('c', 'y'), ('y', 'e'), ('u', 'k'), ('q', 'g'), ('q', 'e'), ('e', 'l'), ('l', 's'), ('f', 'x'), ('z', 'o'), ('x', 'w'), ('g', 'h'), ('o', 'r'), ('n', 'r')] }
]
# Graph consisting of 26 nodes
data[27]["graph"] = Graph(is_directed=False)
data[27]["graph"].add_edge("a", "i", 675)
data[27]["graph"].add_edge("a", "v", 1247)
data[27]["graph"].add_edge("a", "y", 1038)
data[27]["graph"].add_edge("b", "o", 774)
data[27]["graph"].add_edge("b", "q", 551)
data[27]["graph"].add_edge("b", "x", 614)
data[27]["graph"].add_edge("c", "n", 307)
data[27]["graph"].add_edge("c", "r", 1451)
data[27]["graph"].add_edge("c", "u", 1660)
data[27]["graph"].add_edge("d", "f", 957)
data[27]["graph"].add_edge("d", "k", 535)
data[27]["graph"].add_edge("d", "m", 32)
data[27]["graph"].add_edge("g", "p", 1623)
data[27]["graph"].add_edge("g", "z", 1018)
data[27]["graph"].add_edge("h", "A", 407)
data[27]["graph"].add_edge("h", "s", 827)
data[27]["graph"].add_edge("i", "A", 701)
data[27]["graph"].add_edge("i", "f", 1532)
data[27]["graph"].add_edge("k", "w", 641)
data[27]["graph"].add_edge("l", "t", 597)
data[27]["graph"].add_edge("m", "A", 341)
data[27]["graph"].add_edge("m", "w", 1039)
data[27]["graph"].add_edge("n", "e", 1069)
data[27]["graph"].add_edge("n", "h", 33)
data[27]["graph"].add_edge("o", "e", 992)
data[27]["graph"].add_edge("q", "g", 189)
data[27]["graph"].add_edge("q", "j", 1133)
data[27]["graph"].add_edge("r", "f", 1454)
data[27]["graph"].add_edge("r", "j", 392)
data[27]["graph"].add_edge("s", "t", 261)
data[27]["graph"].add_edge("u", "k", 1566)
data[27]["graph"].add_edge("u", "p", 173)
data[27]["graph"].add_edge("v", "o", 1460)
data[27]["graph"].add_edge("v", "t", 883)
data[27]["graph"].add_edge("w", "l", 708)
data[27]["graph"].add_edge("x", "e", 344)
data[27]["graph"].add_edge("x", "j", 1301)
data[27]["graph"].add_edge("y", "p", 278)
data[27]["graph"].add_edge("z", "l", 1631)
data[27]["graph"].add_edge("z", "s", 716)
data[27]["mst"] = Graph(is_directed=False)
data[27]["mst"].add_edge("a", "i", weight=675)
data[27]["mst"].add_edge("a", "y", weight=1038)
data[27]["mst"].add_edge("b", "o", weight=774)
data[27]["mst"].add_edge("b", "q", weight=551)
data[27]["mst"].add_edge("b", "x", weight=614)
data[27]["mst"].add_edge("c", "n", weight=307)
data[27]["mst"].add_edge("d", "f", weight=957)
data[27]["mst"].add_edge("d", "k", weight=535)
data[27]["mst"].add_edge("d", "m", weight=32)
data[27]["mst"].add_edge("g", "z", weight=1018)
data[27]["mst"].add_edge("h", "A", weight=407)
data[27]["mst"].add_edge("i", "A", weight=701)
data[27]["mst"].add_edge("k", "w", weight=641)
data[27]["mst"].add_edge("l", "t", weight=597)
data[27]["mst"].add_edge("m", "A", weight=341)
data[27]["mst"].add_edge("n", "h", weight=33)
data[27]["mst"].add_edge("q", "g", weight=189)
data[27]["mst"].add_edge("q", "j", weight=1133)
data[27]["mst"].add_edge("r", "j", weight=392)
data[27]["mst"].add_edge("s", "t", weight=261)
data[27]["mst"].add_edge("u", "p", weight=173)
data[27]["mst"].add_edge("v", "t", weight=883)
data[27]["mst"].add_edge("w", "l", weight=708)
data[27]["mst"].add_edge("x", "e", weight=344)
data[27]["mst"].add_edge("y", "p", weight=278)
data[27]["mst"].add_edge("z", "s", weight=716)
data[27]["solutions"] = [
    { "edge": ("c", "r"), "weight": 1452, "expected": [('a', 'i'), ('a', 'y'), ('i', 'A'), ('y', 'p'), ('v', 't'), ('b', 'q'), ('b', 'x'), ('b', 'o'), ('q', 'g'), ('q', 'j'), ('x', 'e'), ('c', 'n'), ('r', 'j'), ('u', 'p'), ('n', 'h'), ('d', 'm'), ('d', 'k'), ('d', 'f'), ('k', 'w'), ('m', 'A'), ('g', 'z'), ('z', 's'), ('h', 'A'), ('s', 't'), ('w', 'l'), ('l', 't')] },
    { "edge": ("r", "f"), "weight": 1453, "expected": [('a', 'i'), ('a', 'y'), ('i', 'A'), ('y', 'p'), ('v', 't'), ('b', 'q'), ('b', 'x'), ('b', 'o'), ('q', 'g'), ('q', 'j'), ('x', 'e'), ('c', 'n'), ('r', 'j'), ('u', 'p'), ('n', 'h'), ('d', 'm'), ('d', 'k'), ('d', 'f'), ('k', 'w'), ('m', 'A'), ('g', 'z'), ('z', 's'), ('h', 'A'), ('s', 't'), ('w', 'l'), ('l', 't')] },
    { "edge": ("b", "x"), "weight": 613, "expected": [('a', 'i'), ('a', 'y'), ('i', 'A'), ('y', 'p'), ('v', 't'), ('b', 'q'), ('b', 'x'), ('b', 'o'), ('q', 'g'), ('q', 'j'), ('x', 'e'), ('c', 'n'), ('r', 'j'), ('u', 'p'), ('n', 'h'), ('d', 'm'), ('d', 'k'), ('d', 'f'), ('k', 'w'), ('m', 'A'), ('g', 'z'), ('z', 's'), ('h', 'A'), ('s', 't'), ('w', 'l'), ('l', 't')] },
    { "edge": ("s", "t"), "weight": 262, "expected": [('a', 'i'), ('a', 'y'), ('i', 'A'), ('y', 'p'), ('v', 't'), ('b', 'q'), ('b', 'x'), ('b', 'o'), ('q', 'g'), ('q', 'j'), ('x', 'e'), ('c', 'n'), ('r', 'j'), ('u', 'p'), ('n', 'h'), ('d', 'm'), ('d', 'k'), ('d', 'f'), ('k', 'w'), ('m', 'A'), ('g', 'z'), ('z', 's'), ('h', 'A'), ('s', 't'), ('w', 'l'), ('l', 't')] }
]
# Graph consisting of 27 nodes
data[28]["graph"] = Graph(is_directed=False)
data[28]["graph"].add_edge("A", "j", 1030)
data[28]["graph"].add_edge("B", "k", 645)
data[28]["graph"].add_edge("B", "p", 1438)
data[28]["graph"].add_edge("a", "B", 1517)
data[28]["graph"].add_edge("a", "m", 1200)
data[28]["graph"].add_edge("a", "v", 982)
data[28]["graph"].add_edge("b", "c", 610)
data[28]["graph"].add_edge("b", "d", 384)
data[28]["graph"].add_edge("b", "r", 754)
data[28]["graph"].add_edge("c", "w", 846)
data[28]["graph"].add_edge("c", "y", 529)
data[28]["graph"].add_edge("d", "g", 1073)
data[28]["graph"].add_edge("d", "s", 1102)
data[28]["graph"].add_edge("e", "o", 1399)
data[28]["graph"].add_edge("e", "q", 582)
data[28]["graph"].add_edge("f", "k", 1299)
data[28]["graph"].add_edge("f", "p", 113)
data[28]["graph"].add_edge("g", "k", 1651)
data[28]["graph"].add_edge("h", "i", 166)
data[28]["graph"].add_edge("h", "n", 1281)
data[28]["graph"].add_edge("h", "u", 577)
data[28]["graph"].add_edge("i", "A", 1644)
data[28]["graph"].add_edge("j", "l", 800)
data[28]["graph"].add_edge("m", "f", 186)
data[28]["graph"].add_edge("m", "q", 1134)
data[28]["graph"].add_edge("n", "l", 1669)
data[28]["graph"].add_edge("o", "u", 177)
data[28]["graph"].add_edge("o", "z", 212)
data[28]["graph"].add_edge("p", "A", 121)
data[28]["graph"].add_edge("q", "n", 483)
data[28]["graph"].add_edge("r", "y", 1151)
data[28]["graph"].add_edge("s", "i", 530)
data[28]["graph"].add_edge("s", "j", 1646)
data[28]["graph"].add_edge("t", "x", 799)
data[28]["graph"].add_edge("u", "x", 710)
data[28]["graph"].add_edge("v", "g", 955)
data[28]["graph"].add_edge("v", "r", 134)
data[28]["graph"].add_edge("w", "e", 1039)
data[28]["graph"].add_edge("w", "t", 53)
data[28]["graph"].add_edge("y", "l", 1117)
data[28]["graph"].add_edge("z", "t", 450)
data[28]["graph"].add_edge("z", "x", 1310)
data[28]["mst"] = Graph(is_directed=False)
data[28]["mst"].add_edge("A", "j", weight=1030)
data[28]["mst"].add_edge("B", "k", weight=645)
data[28]["mst"].add_edge("a", "v", weight=982)
data[28]["mst"].add_edge("b", "c", weight=610)
data[28]["mst"].add_edge("b", "d", weight=384)
data[28]["mst"].add_edge("b", "r", weight=754)
data[28]["mst"].add_edge("c", "w", weight=846)
data[28]["mst"].add_edge("c", "y", weight=529)
data[28]["mst"].add_edge("e", "q", weight=582)
data[28]["mst"].add_edge("f", "k", weight=1299)
data[28]["mst"].add_edge("f", "p", weight=113)
data[28]["mst"].add_edge("h", "i", weight=166)
data[28]["mst"].add_edge("h", "u", weight=577)
data[28]["mst"].add_edge("j", "l", weight=800)
data[28]["mst"].add_edge("m", "f", weight=186)
data[28]["mst"].add_edge("o", "u", weight=177)
data[28]["mst"].add_edge("o", "z", weight=212)
data[28]["mst"].add_edge("p", "A", weight=121)
data[28]["mst"].add_edge("q", "n", weight=483)
data[28]["mst"].add_edge("s", "i", weight=530)
data[28]["mst"].add_edge("u", "x", weight=710)
data[28]["mst"].add_edge("v", "g", weight=955)
data[28]["mst"].add_edge("v", "r", weight=134)
data[28]["mst"].add_edge("w", "e", weight=1039)
data[28]["mst"].add_edge("w", "t", weight=53)
data[28]["mst"].add_edge("y", "l", weight=1117)
data[28]["mst"].add_edge("z", "t", weight=450)
data[28]["solutions"] = [
    { "edge": ("a", "m"), "weight": 1201, "expected": [('a', 'v'), ('B', 'k'), ('m', 'f'), ('v', 'r'), ('v', 'g'), ('b', 'd'), ('b', 'c'), ('b', 'r'), ('c', 'y'), ('c', 'w'), ('y', 'l'), ('w', 't'), ('w', 'e'), ('s', 'i'), ('e', 'q'), ('q', 'n'), ('o', 'u'), ('o', 'z'), ('f', 'p'), ('f', 'k'), ('p', 'A'), ('h', 'i'), ('h', 'u'), ('u', 'x'), ('A', 'j'), ('j', 'l'), ('z', 't')] },
    { "edge": ("n", "l"), "weight": 1668, "expected": [('a', 'v'), ('B', 'k'), ('m', 'f'), ('v', 'r'), ('v', 'g'), ('b', 'd'), ('b', 'c'), ('b', 'r'), ('c', 'y'), ('c', 'w'), ('y', 'l'), ('w', 't'), ('w', 'e'), ('s', 'i'), ('e', 'q'), ('q', 'n'), ('o', 'u'), ('o', 'z'), ('f', 'p'), ('f', 'k'), ('p', 'A'), ('h', 'i'), ('h', 'u'), ('u', 'x'), ('A', 'j'), ('j', 'l'), ('z', 't')] },
    { "edge": ("c", "w"), "weight": 845, "expected": [('a', 'v'), ('B', 'k'), ('m', 'f'), ('v', 'r'), ('v', 'g'), ('b', 'd'), ('b', 'c'), ('b', 'r'), ('c', 'y'), ('c', 'w'), ('y', 'l'), ('w', 't'), ('w', 'e'), ('s', 'i'), ('e', 'q'), ('q', 'n'), ('o', 'u'), ('o', 'z'), ('f', 'p'), ('f', 'k'), ('p', 'A'), ('h', 'i'), ('h', 'u'), ('u', 'x'), ('A', 'j'), ('j', 'l'), ('z', 't')] },
    { "edge": ("A", "j"), "weight": 1031, "expected": [('a', 'v'), ('B', 'k'), ('m', 'f'), ('v', 'r'), ('v', 'g'), ('b', 'd'), ('b', 'c'), ('b', 'r'), ('c', 'y'), ('c', 'w'), ('y', 'l'), ('w', 't'), ('w', 'e'), ('s', 'i'), ('e', 'q'), ('q', 'n'), ('o', 'u'), ('o', 'z'), ('f', 'p'), ('f', 'k'), ('p', 'A'), ('h', 'i'), ('h', 'u'), ('u', 'x'), ('A', 'j'), ('j', 'l'), ('z', 't')] }
]
# Graph consisting of 28 nodes
data[29]["graph"] = Graph(is_directed=False)
data[29]["graph"].add_edge("A", "B", 31)
data[29]["graph"].add_edge("C", "u", 171)
data[29]["graph"].add_edge("a", "k", 1379)
data[29]["graph"].add_edge("a", "p", 1209)
data[29]["graph"].add_edge("a", "s", 1138)
data[29]["graph"].add_edge("b", "j", 1467)
data[29]["graph"].add_edge("b", "n", 538)
data[29]["graph"].add_edge("b", "y", 818)
data[29]["graph"].add_edge("c", "A", 148)
data[29]["graph"].add_edge("c", "t", 817)
data[29]["graph"].add_edge("d", "h", 377)
data[29]["graph"].add_edge("d", "m", 415)
data[29]["graph"].add_edge("e", "v", 1162)
data[29]["graph"].add_edge("f", "q", 1259)
data[29]["graph"].add_edge("f", "x", 381)
data[29]["graph"].add_edge("f", "z", 314)
data[29]["graph"].add_edge("g", "C", 1072)
data[29]["graph"].add_edge("g", "i", 718)
data[29]["graph"].add_edge("h", "x", 1199)
data[29]["graph"].add_edge("i", "r", 759)
data[29]["graph"].add_edge("j", "r", 1186)
data[29]["graph"].add_edge("j", "x", 153)
data[29]["graph"].add_edge("k", "h", 547)
data[29]["graph"].add_edge("k", "m", 840)
data[29]["graph"].add_edge("l", "o", 174)
data[29]["graph"].add_edge("n", "i", 991)
data[29]["graph"].add_edge("n", "w", 589)
data[29]["graph"].add_edge("p", "c", 1004)
data[29]["graph"].add_edge("p", "m", 1431)
data[29]["graph"].add_edge("q", "l", 1457)
data[29]["graph"].add_edge("q", "o", 246)
data[29]["graph"].add_edge("s", "e", 505)
data[29]["graph"].add_edge("s", "r", 1362)
data[29]["graph"].add_edge("t", "e", 688)
data[29]["graph"].add_edge("t", "w", 701)
data[29]["graph"].add_edge("v", "g", 1325)
data[29]["graph"].add_edge("v", "u", 265)
data[29]["graph"].add_edge("w", "u", 1628)
data[29]["graph"].add_edge("y", "d", 160)
data[29]["graph"].add_edge("y", "l", 122)
data[29]["graph"].add_edge("z", "C", 78)
data[29]["graph"].add_edge("z", "o", 1642)
data[29]["mst"] = Graph(is_directed=False)
data[29]["mst"].add_edge("A", "B", weight=31)
data[29]["mst"].add_edge("C", "u", weight=171)
data[29]["mst"].add_edge("a", "s", weight=1138)
data[29]["mst"].add_edge("b", "n", weight=538)
data[29]["mst"].add_edge("b", "y", weight=818)
data[29]["mst"].add_edge("c", "A", weight=148)
data[29]["mst"].add_edge("c", "t", weight=817)
data[29]["mst"].add_edge("d", "h", weight=377)
data[29]["mst"].add_edge("d", "m", weight=415)
data[29]["mst"].add_edge("f", "x", weight=381)
data[29]["mst"].add_edge("f", "z", weight=314)
data[29]["mst"].add_edge("g", "C", weight=1072)
data[29]["mst"].add_edge("g", "i", weight=718)
data[29]["mst"].add_edge("i", "r", weight=759)
data[29]["mst"].add_edge("j", "x", weight=153)
data[29]["mst"].add_edge("k", "h", weight=547)
data[29]["mst"].add_edge("l", "o", weight=174)
data[29]["mst"].add_edge("n", "i", weight=991)
data[29]["mst"].add_edge("n", "w", weight=589)
data[29]["mst"].add_edge("p", "c", weight=1004)
data[29]["mst"].add_edge("q", "o", weight=246)
data[29]["mst"].add_edge("s", "e", weight=505)
data[29]["mst"].add_edge("t", "e", weight=688)
data[29]["mst"].add_edge("t", "w", weight=701)
data[29]["mst"].add_edge("v", "u", weight=265)
data[29]["mst"].add_edge("y", "d", weight=160)
data[29]["mst"].add_edge("y", "l", weight=122)
data[29]["mst"].add_edge("z", "C", weight=78)
data[29]["solutions"] = [
    { "edge": ("b", "j"), "weight": 1468, "expected": [('a', 's'), ('k', 'h'), ('s', 'e'), ('p', 'c'), ('b', 'n'), ('b', 'y'), ('y', 'l'), ('y', 'd'), ('j', 'x'), ('n', 'w'), ('n', 'i'), ('c', 'A'), ('c', 't'), ('A', 'B'), ('t', 'e'), ('t', 'w'), ('d', 'h'), ('d', 'm'), ('v', 'u'), ('f', 'z'), ('f', 'x'), ('q', 'o'), ('z', 'C'), ('g', 'i'), ('g', 'C'), ('i', 'r'), ('C', 'u'), ('l', 'o')] },
    { "edge": ("f", "q"), "weight": 1258, "expected": [('a', 's'), ('k', 'h'), ('s', 'e'), ('p', 'c'), ('b', 'n'), ('b', 'y'), ('y', 'l'), ('y', 'd'), ('j', 'x'), ('n', 'w'), ('n', 'i'), ('c', 'A'), ('c', 't'), ('A', 'B'), ('t', 'e'), ('t', 'w'), ('d', 'h'), ('d', 'm'), ('v', 'u'), ('f', 'z'), ('f', 'x'), ('q', 'o'), ('z', 'C'), ('g', 'i'), ('g', 'C'), ('i', 'r'), ('C', 'u'), ('l', 'o')] },
    { "edge": ("t", "w"), "weight": 700, "expected": [('a', 's'), ('k', 'h'), ('s', 'e'), ('p', 'c'), ('b', 'n'), ('b', 'y'), ('y', 'l'), ('y', 'd'), ('j', 'x'), ('n', 'w'), ('n', 'i'), ('c', 'A'), ('c', 't'), ('A', 'B'), ('t', 'e'), ('t', 'w'), ('d', 'h'), ('d', 'm'), ('v', 'u'), ('f', 'z'), ('f', 'x'), ('q', 'o'), ('z', 'C'), ('g', 'i'), ('g', 'C'), ('i', 'r'), ('C', 'u'), ('l', 'o')] },
    { "edge": ("s", "e"), "weight": 506, "expected": [('a', 's'), ('k', 'h'), ('s', 'e'), ('p', 'c'), ('b', 'n'), ('b', 'y'), ('y', 'l'), ('y', 'd'), ('j', 'x'), ('n', 'w'), ('n', 'i'), ('c', 'A'), ('c', 't'), ('A', 'B'), ('t', 'e'), ('t', 'w'), ('d', 'h'), ('d', 'm'), ('v', 'u'), ('f', 'z'), ('f', 'x'), ('q', 'o'), ('z', 'C'), ('g', 'i'), ('g', 'C'), ('i', 'r'), ('C', 'u'), ('l', 'o')] }
]
# Graph consisting of 29 nodes
data[30]["graph"] = Graph(is_directed=False)
data[30]["graph"].add_edge("A", "o", 672)
data[30]["graph"].add_edge("B", "x", 1602)
data[30]["graph"].add_edge("D", "C", 1164)
data[30]["graph"].add_edge("a", "e", 1078)
data[30]["graph"].add_edge("a", "w", 1002)
data[30]["graph"].add_edge("a", "z", 72)
data[30]["graph"].add_edge("b", "i", 1360)
data[30]["graph"].add_edge("b", "s", 1366)
data[30]["graph"].add_edge("c", "p", 307)
data[30]["graph"].add_edge("c", "v", 1517)
data[30]["graph"].add_edge("d", "m", 1332)
data[30]["graph"].add_edge("d", "q", 1351)
data[30]["graph"].add_edge("d", "t", 1103)
data[30]["graph"].add_edge("e", "n", 1437)
data[30]["graph"].add_edge("e", "q", 408)
data[30]["graph"].add_edge("f", "h", 1237)
data[30]["graph"].add_edge("f", "k", 789)
data[30]["graph"].add_edge("g", "A", 1670)
data[30]["graph"].add_edge("g", "u", 263)
data[30]["graph"].add_edge("h", "l", 691)
data[30]["graph"].add_edge("i", "j", 1353)
data[30]["graph"].add_edge("i", "y", 1467)
data[30]["graph"].add_edge("j", "D", 906)
data[30]["graph"].add_edge("k", "u", 972)
data[30]["graph"].add_edge("k", "y", 1409)
data[30]["graph"].add_edge("l", "y", 562)
data[30]["graph"].add_edge("m", "o", 94)
data[30]["graph"].add_edge("n", "h", 1249)
data[30]["graph"].add_edge("o", "B", 1406)
data[30]["graph"].add_edge("p", "B", 240)
data[30]["graph"].add_edge("p", "j", 1423)
data[30]["graph"].add_edge("q", "A", 155)
data[30]["graph"].add_edge("r", "C", 1035)
data[30]["graph"].add_edge("r", "x", 304)
data[30]["graph"].add_edge("s", "c", 1314)
data[30]["graph"].add_edge("s", "l", 722)
data[30]["graph"].add_edge("t", "m", 1209)
data[30]["graph"].add_edge("t", "x", 827)
data[30]["graph"].add_edge("v", "n", 831)
data[30]["graph"].add_edge("v", "u", 847)
data[30]["graph"].add_edge("w", "f", 529)
data[30]["graph"].add_edge("w", "g", 1193)
data[30]["graph"].add_edge("z", "b", 883)
data[30]["graph"].add_edge("z", "r", 417)
data[30]["mst"] = Graph(is_directed=False)
data[30]["mst"].add_edge("A", "o", weight=672)
data[30]["mst"].add_edge("D", "C", weight=1164)
data[30]["mst"].add_edge("a", "e", weight=1078)
data[30]["mst"].add_edge("a", "w", weight=1002)
data[30]["mst"].add_edge("a", "z", weight=72)
data[30]["mst"].add_edge("c", "p", weight=307)
data[30]["mst"].add_edge("d", "t", weight=1103)
data[30]["mst"].add_edge("e", "q", weight=408)
data[30]["mst"].add_edge("f", "h", weight=1237)
data[30]["mst"].add_edge("f", "k", weight=789)
data[30]["mst"].add_edge("g", "u", weight=263)
data[30]["mst"].add_edge("h", "l", weight=691)
data[30]["mst"].add_edge("i", "j", weight=1353)
data[30]["mst"].add_edge("j", "D", weight=906)
data[30]["mst"].add_edge("k", "u", weight=972)
data[30]["mst"].add_edge("l", "y", weight=562)
data[30]["mst"].add_edge("m", "o", weight=94)
data[30]["mst"].add_edge("p", "B", weight=240)
data[30]["mst"].add_edge("q", "A", weight=155)
data[30]["mst"].add_edge("r", "C", weight=1035)
data[30]["mst"].add_edge("r", "x", weight=304)
data[30]["mst"].add_edge("s", "c", weight=1314)
data[30]["mst"].add_edge("s", "l", weight=722)
data[30]["mst"].add_edge("t", "x", weight=827)
data[30]["mst"].add_edge("v", "n", weight=831)
data[30]["mst"].add_edge("v", "u", weight=847)
data[30]["mst"].add_edge("w", "f", weight=529)
data[30]["mst"].add_edge("z", "b", weight=883)
data[30]["mst"].add_edge("z", "r", weight=417)
data[30]["solutions"] = [
    { "edge": ("g", "A"), "weight": 1671, "expected": [('a', 'z'), ('a', 'w'), ('a', 'e'), ('z', 'r'), ('z', 'b'), ('e', 'q'), ('w', 'f'), ('i', 'j'), ('s', 'l'), ('s', 'c'), ('c', 'p'), ('v', 'n'), ('v', 'u'), ('p', 'B'), ('d', 't'), ('q', 'A'), ('t', 'x'), ('m', 'o'), ('f', 'k'), ('f', 'h'), ('k', 'u'), ('h', 'l'), ('g', 'u'), ('A', 'o'), ('l', 'y'), ('j', 'D'), ('D', 'C'), ('r', 'x'), ('r', 'C')] },
    { "edge": ("b", "s"), "weight": 1365, "expected": [('a', 'z'), ('a', 'w'), ('a', 'e'), ('z', 'r'), ('z', 'b'), ('e', 'q'), ('w', 'f'), ('i', 'j'), ('s', 'l'), ('s', 'c'), ('c', 'p'), ('v', 'n'), ('v', 'u'), ('p', 'B'), ('d', 't'), ('q', 'A'), ('t', 'x'), ('m', 'o'), ('f', 'k'), ('f', 'h'), ('k', 'u'), ('h', 'l'), ('g', 'u'), ('A', 'o'), ('l', 'y'), ('j', 'D'), ('D', 'C'), ('r', 'x'), ('r', 'C')] },
    { "edge": ("q", "A"), "weight": 154, "expected": [('a', 'z'), ('a', 'w'), ('a', 'e'), ('z', 'r'), ('z', 'b'), ('e', 'q'), ('w', 'f'), ('i', 'j'), ('s', 'l'), ('s', 'c'), ('c', 'p'), ('v', 'n'), ('v', 'u'), ('p', 'B'), ('d', 't'), ('q', 'A'), ('t', 'x'), ('m', 'o'), ('f', 'k'), ('f', 'h'), ('k', 'u'), ('h', 'l'), ('g', 'u'), ('A', 'o'), ('l', 'y'), ('j', 'D'), ('D', 'C'), ('r', 'x'), ('r', 'C')] },
    { "edge": ("r", "C"), "weight": 1036, "expected": [('a', 'z'), ('a', 'w'), ('a', 'e'), ('z', 'r'), ('z', 'b'), ('e', 'q'), ('w', 'f'), ('i', 'j'), ('s', 'l'), ('s', 'c'), ('c', 'p'), ('v', 'n'), ('v', 'u'), ('p', 'B'), ('d', 't'), ('q', 'A'), ('t', 'x'), ('m', 'o'), ('f', 'k'), ('f', 'h'), ('k', 'u'), ('h', 'l'), ('g', 'u'), ('A', 'o'), ('l', 'y'), ('j', 'D'), ('D', 'C'), ('r', 'x'), ('r', 'C')] }
]
# Graph consisting of 30 nodes
data[31]["graph"] = Graph(is_directed=False)
data[31]["graph"].add_edge("B", "A", 1186)
data[31]["graph"].add_edge("C", "A", 43)
data[31]["graph"].add_edge("C", "o", 1562)
data[31]["graph"].add_edge("D", "A", 1055)
data[31]["graph"].add_edge("E", "v", 740)
data[31]["graph"].add_edge("a", "C", 1152)
data[31]["graph"].add_edge("a", "e", 608)
data[31]["graph"].add_edge("a", "q", 1392)
data[31]["graph"].add_edge("b", "y", 1287)
data[31]["graph"].add_edge("b", "z", 1133)
data[31]["graph"].add_edge("c", "o", 693)
data[31]["graph"].add_edge("c", "t", 1011)
data[31]["graph"].add_edge("d", "h", 57)
data[31]["graph"].add_edge("d", "l", 1552)
data[31]["graph"].add_edge("d", "p", 613)
data[31]["graph"].add_edge("e", "b", 1440)
data[31]["graph"].add_edge("e", "i", 386)
data[31]["graph"].add_edge("f", "u", 664)
data[31]["graph"].add_edge("g", "B", 761)
data[31]["graph"].add_edge("h", "g", 485)
data[31]["graph"].add_edge("h", "w", 332)
data[31]["graph"].add_edge("i", "f", 1207)
data[31]["graph"].add_edge("l", "f", 710)
data[31]["graph"].add_edge("l", "j", 1350)
data[31]["graph"].add_edge("m", "E", 298)
data[31]["graph"].add_edge("m", "s", 579)
data[31]["graph"].add_edge("n", "v", 1367)
data[31]["graph"].add_edge("o", "r", 735)
data[31]["graph"].add_edge("p", "g", 1528)
data[31]["graph"].add_edge("p", "j", 26)
data[31]["graph"].add_edge("q", "B", 1032)
data[31]["graph"].add_edge("q", "j", 1409)
data[31]["graph"].add_edge("s", "n", 1499)
data[31]["graph"].add_edge("s", "r", 282)
data[31]["graph"].add_edge("t", "i", 22)
data[31]["graph"].add_edge("t", "k", 412)
data[31]["graph"].add_edge("u", "k", 274)
data[31]["graph"].add_edge("u", "m", 161)
data[31]["graph"].add_edge("v", "r", 861)
data[31]["graph"].add_edge("w", "E", 1503)
data[31]["graph"].add_edge("w", "k", 957)
data[31]["graph"].add_edge("x", "D", 1625)
data[31]["graph"].add_edge("y", "c", 1253)
data[31]["graph"].add_edge("y", "x", 112)
data[31]["graph"].add_edge("z", "n", 488)
data[31]["graph"].add_edge("z", "x", 953)
data[31]["mst"] = Graph(is_directed=False)
data[31]["mst"].add_edge("C", "A", weight=43)
data[31]["mst"].add_edge("D", "A", weight=1055)
data[31]["mst"].add_edge("E", "v", weight=740)
data[31]["mst"].add_edge("a", "C", weight=1152)
data[31]["mst"].add_edge("a", "e", weight=608)
data[31]["mst"].add_edge("b", "z", weight=1133)
data[31]["mst"].add_edge("c", "o", weight=693)
data[31]["mst"].add_edge("d", "h", weight=57)
data[31]["mst"].add_edge("d", "p", weight=613)
data[31]["mst"].add_edge("e", "i", weight=386)
data[31]["mst"].add_edge("f", "u", weight=664)
data[31]["mst"].add_edge("g", "B", weight=761)
data[31]["mst"].add_edge("h", "g", weight=485)
data[31]["mst"].add_edge("h", "w", weight=332)
data[31]["mst"].add_edge("l", "f", weight=710)
data[31]["mst"].add_edge("m", "E", weight=298)
data[31]["mst"].add_edge("m", "s", weight=579)
data[31]["mst"].add_edge("o", "r", weight=735)
data[31]["mst"].add_edge("p", "j", weight=26)
data[31]["mst"].add_edge("q", "B", weight=1032)
data[31]["mst"].add_edge("s", "r", weight=282)
data[31]["mst"].add_edge("t", "i", weight=22)
data[31]["mst"].add_edge("t", "k", weight=412)
data[31]["mst"].add_edge("u", "k", weight=274)
data[31]["mst"].add_edge("u", "m", weight=161)
data[31]["mst"].add_edge("w", "k", weight=957)
data[31]["mst"].add_edge("y", "c", weight=1253)
data[31]["mst"].add_edge("y", "x", weight=112)
data[31]["mst"].add_edge("z", "n", weight=488)
data[31]["mst"].add_edge("z", "x", weight=953)
data[31]["solutions"] = [
    { "edge": ("p", "g"), "weight": 1529, "expected": [('a', 'e'), ('a', 'C'), ('q', 'B'), ('e', 'i'), ('C', 'A'), ('b', 'z'), ('y', 'x'), ('y', 'c'), ('z', 'n'), ('z', 'x'), ('c', 'o'), ('t', 'i'), ('t', 'k'), ('o', 'r'), ('d', 'h'), ('d', 'p'), ('l', 'f'), ('p', 'j'), ('h', 'w'), ('h', 'g'), ('f', 'u'), ('u', 'm'), ('u', 'k'), ('g', 'B'), ('w', 'k'), ('m', 'E'), ('m', 's'), ('s', 'r'), ('E', 'v'), ('D', 'A')] },
    { "edge": ("e", "b"), "weight": 1439, "expected": [('a', 'e'), ('a', 'C'), ('q', 'B'), ('e', 'i'), ('C', 'A'), ('b', 'z'), ('y', 'x'), ('y', 'c'), ('z', 'n'), ('z', 'x'), ('c', 'o'), ('t', 'i'), ('t', 'k'), ('o', 'r'), ('d', 'h'), ('d', 'p'), ('l', 'f'), ('p', 'j'), ('h', 'w'), ('h', 'g'), ('f', 'u'), ('u', 'm'), ('u', 'k'), ('g', 'B'), ('w', 'k'), ('m', 'E'), ('m', 's'), ('s', 'r'), ('E', 'v'), ('D', 'A')] },
    { "edge": ("h", "g"), "weight": 484, "expected": [('a', 'e'), ('a', 'C'), ('q', 'B'), ('e', 'i'), ('C', 'A'), ('b', 'z'), ('y', 'x'), ('y', 'c'), ('z', 'n'), ('z', 'x'), ('c', 'o'), ('t', 'i'), ('t', 'k'), ('o', 'r'), ('d', 'h'), ('d', 'p'), ('l', 'f'), ('p', 'j'), ('h', 'w'), ('h', 'g'), ('f', 'u'), ('u', 'm'), ('u', 'k'), ('g', 'B'), ('w', 'k'), ('m', 'E'), ('m', 's'), ('s', 'r'), ('E', 'v'), ('D', 'A')] },
    { "edge": ("d", "p"), "weight": 614, "expected": [('a', 'e'), ('a', 'C'), ('q', 'B'), ('e', 'i'), ('C', 'A'), ('b', 'z'), ('y', 'x'), ('y', 'c'), ('z', 'n'), ('z', 'x'), ('c', 'o'), ('t', 'i'), ('t', 'k'), ('o', 'r'), ('d', 'h'), ('d', 'p'), ('l', 'f'), ('p', 'j'), ('h', 'w'), ('h', 'g'), ('f', 'u'), ('u', 'm'), ('u', 'k'), ('g', 'B'), ('w', 'k'), ('m', 'E'), ('m', 's'), ('s', 'r'), ('E', 'v'), ('D', 'A')] }
]
# Graph consisting of 31 nodes
data[32]["graph"] = Graph(is_directed=False)
data[32]["graph"].add_edge("B", "s", 439)
data[32]["graph"].add_edge("B", "t", 1230)
data[32]["graph"].add_edge("C", "A", 1650)
data[32]["graph"].add_edge("D", "s", 1074)
data[32]["graph"].add_edge("E", "j", 853)
data[32]["graph"].add_edge("E", "u", 1243)
data[32]["graph"].add_edge("F", "e", 510)
data[32]["graph"].add_edge("a", "h", 24)
data[32]["graph"].add_edge("a", "p", 620)
data[32]["graph"].add_edge("a", "y", 28)
data[32]["graph"].add_edge("b", "B", 1586)
data[32]["graph"].add_edge("b", "c", 91)
data[32]["graph"].add_edge("b", "i", 412)
data[32]["graph"].add_edge("c", "F", 544)
data[32]["graph"].add_edge("c", "k", 521)
data[32]["graph"].add_edge("d", "g", 345)
data[32]["graph"].add_edge("d", "o", 1411)
data[32]["graph"].add_edge("e", "E", 971)
data[32]["graph"].add_edge("f", "n", 1547)
data[32]["graph"].add_edge("f", "w", 641)
data[32]["graph"].add_edge("g", "v", 161)
data[32]["graph"].add_edge("h", "C", 1231)
data[32]["graph"].add_edge("h", "F", 409)
data[32]["graph"].add_edge("i", "v", 625)
data[32]["graph"].add_edge("i", "z", 458)
data[32]["graph"].add_edge("k", "d", 79)
data[32]["graph"].add_edge("k", "e", 38)
data[32]["graph"].add_edge("l", "D", 1498)
data[32]["graph"].add_edge("l", "r", 1439)
data[32]["graph"].add_edge("m", "A", 507)
data[32]["graph"].add_edge("n", "D", 1134)
data[32]["graph"].add_edge("n", "m", 1516)
data[32]["graph"].add_edge("o", "C", 898)
data[32]["graph"].add_edge("o", "f", 1)
data[32]["graph"].add_edge("p", "g", 1174)
data[32]["graph"].add_edge("p", "j", 1501)
data[32]["graph"].add_edge("q", "t", 789)
data[32]["graph"].add_edge("q", "x", 1218)
data[32]["graph"].add_edge("r", "u", 792)
data[32]["graph"].add_edge("r", "x", 553)
data[32]["graph"].add_edge("t", "s", 302)
data[32]["graph"].add_edge("v", "j", 386)
data[32]["graph"].add_edge("w", "A", 1325)
data[32]["graph"].add_edge("w", "x", 1087)
data[32]["graph"].add_edge("y", "l", 1612)
data[32]["graph"].add_edge("y", "q", 850)
data[32]["graph"].add_edge("z", "m", 1160)
data[32]["graph"].add_edge("z", "u", 468)
data[32]["mst"] = Graph(is_directed=False)
data[32]["mst"].add_edge("B", "s", weight=439)
data[32]["mst"].add_edge("D", "s", weight=1074)
data[32]["mst"].add_edge("E", "j", weight=853)
data[32]["mst"].add_edge("F", "e", weight=510)
data[32]["mst"].add_edge("a", "h", weight=24)
data[32]["mst"].add_edge("a", "p", weight=620)
data[32]["mst"].add_edge("a", "y", weight=28)
data[32]["mst"].add_edge("b", "c", weight=91)
data[32]["mst"].add_edge("b", "i", weight=412)
data[32]["mst"].add_edge("c", "k", weight=521)
data[32]["mst"].add_edge("d", "g", weight=345)
data[32]["mst"].add_edge("f", "w", weight=641)
data[32]["mst"].add_edge("g", "v", weight=161)
data[32]["mst"].add_edge("h", "F", weight=409)
data[32]["mst"].add_edge("i", "z", weight=458)
data[32]["mst"].add_edge("k", "d", weight=79)
data[32]["mst"].add_edge("k", "e", weight=38)
data[32]["mst"].add_edge("l", "r", weight=1439)
data[32]["mst"].add_edge("m", "A", weight=507)
data[32]["mst"].add_edge("n", "D", weight=1134)
data[32]["mst"].add_edge("o", "C", weight=898)
data[32]["mst"].add_edge("o", "f", weight=1)
data[32]["mst"].add_edge("q", "t", weight=789)
data[32]["mst"].add_edge("r", "u", weight=792)
data[32]["mst"].add_edge("r", "x", weight=553)
data[32]["mst"].add_edge("t", "s", weight=302)
data[32]["mst"].add_edge("v", "j", weight=386)
data[32]["mst"].add_edge("w", "x", weight=1087)
data[32]["mst"].add_edge("y", "q", weight=850)
data[32]["mst"].add_edge("z", "m", weight=1160)
data[32]["mst"].add_edge("z", "u", weight=468)
data[32]["solutions"] = [
    { "edge": ("w", "A"), "weight": 1326, "expected": [('a', 'h'), ('a', 'y'), ('a', 'p'), ('y', 'q'), ('h', 'F'), ('b', 'c'), ('b', 'i'), ('i', 'z'), ('c', 'k'), ('B', 's'), ('k', 'e'), ('k', 'd'), ('F', 'e'), ('d', 'g'), ('g', 'v'), ('o', 'f'), ('o', 'C'), ('E', 'j'), ('f', 'w'), ('n', 'D'), ('w', 'x'), ('v', 'j'), ('z', 'u'), ('z', 'm'), ('l', 'r'), ('r', 'x'), ('r', 'u'), ('D', 's'), ('m', 'A'), ('q', 't'), ('t', 's')] },
    { "edge": ("C", "A"), "weight": 1649, "expected": [('a', 'h'), ('a', 'y'), ('a', 'p'), ('y', 'q'), ('h', 'F'), ('b', 'c'), ('b', 'i'), ('i', 'z'), ('c', 'k'), ('B', 's'), ('k', 'e'), ('k', 'd'), ('F', 'e'), ('d', 'g'), ('g', 'v'), ('o', 'f'), ('o', 'C'), ('E', 'j'), ('f', 'w'), ('n', 'D'), ('w', 'x'), ('v', 'j'), ('z', 'u'), ('z', 'm'), ('l', 'r'), ('r', 'x'), ('r', 'u'), ('D', 's'), ('m', 'A'), ('q', 't'), ('t', 's')] },
    { "edge": ("v", "j"), "weight": 385, "expected": [('a', 'h'), ('a', 'y'), ('a', 'p'), ('y', 'q'), ('h', 'F'), ('b', 'c'), ('b', 'i'), ('i', 'z'), ('c', 'k'), ('B', 's'), ('k', 'e'), ('k', 'd'), ('F', 'e'), ('d', 'g'), ('g', 'v'), ('o', 'f'), ('o', 'C'), ('E', 'j'), ('f', 'w'), ('n', 'D'), ('w', 'x'), ('v', 'j'), ('z', 'u'), ('z', 'm'), ('l', 'r'), ('r', 'x'), ('r', 'u'), ('D', 's'), ('m', 'A'), ('q', 't'), ('t', 's')] },
    { "edge": ("a", "p"), "weight": 621, "expected": [('a', 'h'), ('a', 'y'), ('a', 'p'), ('y', 'q'), ('h', 'F'), ('b', 'c'), ('b', 'i'), ('i', 'z'), ('c', 'k'), ('B', 's'), ('k', 'e'), ('k', 'd'), ('F', 'e'), ('d', 'g'), ('g', 'v'), ('o', 'f'), ('o', 'C'), ('E', 'j'), ('f', 'w'), ('n', 'D'), ('w', 'x'), ('v', 'j'), ('z', 'u'), ('z', 'm'), ('l', 'r'), ('r', 'x'), ('r', 'u'), ('D', 's'), ('m', 'A'), ('q', 't'), ('t', 's')] }
]
# Graph consisting of 32 nodes
data[33]["graph"] = Graph(is_directed=False)
data[33]["graph"].add_edge("A", "E", 1485)
data[33]["graph"].add_edge("A", "x", 1140)
data[33]["graph"].add_edge("B", "n", 475)
data[33]["graph"].add_edge("B", "p", 51)
data[33]["graph"].add_edge("C", "l", 625)
data[33]["graph"].add_edge("C", "x", 1352)
data[33]["graph"].add_edge("D", "h", 318)
data[33]["graph"].add_edge("D", "x", 735)
data[33]["graph"].add_edge("F", "E", 510)
data[33]["graph"].add_edge("G", "h", 926)
data[33]["graph"].add_edge("a", "m", 842)
data[33]["graph"].add_edge("a", "o", 501)
data[33]["graph"].add_edge("a", "t", 1674)
data[33]["graph"].add_edge("b", "c", 802)
data[33]["graph"].add_edge("b", "j", 1077)
data[33]["graph"].add_edge("b", "r", 186)
data[33]["graph"].add_edge("c", "f", 1042)
data[33]["graph"].add_edge("c", "s", 1632)
data[33]["graph"].add_edge("d", "G", 701)
data[33]["graph"].add_edge("d", "v", 1472)
data[33]["graph"].add_edge("d", "y", 228)
data[33]["graph"].add_edge("e", "C", 840)
data[33]["graph"].add_edge("e", "g", 736)
data[33]["graph"].add_edge("f", "D", 591)
data[33]["graph"].add_edge("g", "B", 1479)
data[33]["graph"].add_edge("i", "q", 265)
data[33]["graph"].add_edge("i", "z", 732)
data[33]["graph"].add_edge("j", "u", 127)
data[33]["graph"].add_edge("j", "z", 629)
data[33]["graph"].add_edge("l", "n", 1317)
data[33]["graph"].add_edge("m", "G", 1098)
data[33]["graph"].add_edge("m", "y", 1423)
data[33]["graph"].add_edge("n", "w", 170)
data[33]["graph"].add_edge("o", "i", 769)
data[33]["graph"].add_edge("o", "k", 519)
data[33]["graph"].add_edge("p", "A", 1237)
data[33]["graph"].add_edge("q", "p", 694)
data[33]["graph"].add_edge("r", "f", 864)
data[33]["graph"].add_edge("r", "k", 27)
data[33]["graph"].add_edge("s", "h", 798)
data[33]["graph"].add_edge("s", "q", 1010)
data[33]["graph"].add_edge("t", "k", 946)
data[33]["graph"].add_edge("t", "v", 892)
data[33]["graph"].add_edge("u", "F", 1278)
data[33]["graph"].add_edge("u", "w", 969)
data[33]["graph"].add_edge("v", "e", 848)
data[33]["graph"].add_edge("w", "F", 570)
data[33]["graph"].add_edge("y", "g", 325)
data[33]["graph"].add_edge("z", "l", 1171)
data[33]["mst"] = Graph(is_directed=False)
data[33]["mst"].add_edge("A", "x", weight=1140)
data[33]["mst"].add_edge("B", "n", weight=475)
data[33]["mst"].add_edge("B", "p", weight=51)
data[33]["mst"].add_edge("C", "l", weight=625)
data[33]["mst"].add_edge("D", "h", weight=318)
data[33]["mst"].add_edge("D", "x", weight=735)
data[33]["mst"].add_edge("F", "E", weight=510)
data[33]["mst"].add_edge("G", "h", weight=926)
data[33]["mst"].add_edge("a", "m", weight=842)
data[33]["mst"].add_edge("a", "o", weight=501)
data[33]["mst"].add_edge("b", "c", weight=802)
data[33]["mst"].add_edge("b", "r", weight=186)
data[33]["mst"].add_edge("d", "G", weight=701)
data[33]["mst"].add_edge("d", "y", weight=228)
data[33]["mst"].add_edge("e", "C", weight=840)
data[33]["mst"].add_edge("e", "g", weight=736)
data[33]["mst"].add_edge("f", "D", weight=591)
data[33]["mst"].add_edge("i", "q", weight=265)
data[33]["mst"].add_edge("i", "z", weight=732)
data[33]["mst"].add_edge("j", "u", weight=127)
data[33]["mst"].add_edge("j", "z", weight=629)
data[33]["mst"].add_edge("n", "w", weight=170)
data[33]["mst"].add_edge("o", "i", weight=769)
data[33]["mst"].add_edge("o", "k", weight=519)
data[33]["mst"].add_edge("q", "p", weight=694)
data[33]["mst"].add_edge("r", "f", weight=864)
data[33]["mst"].add_edge("r", "k", weight=27)
data[33]["mst"].add_edge("s", "h", weight=798)
data[33]["mst"].add_edge("t", "v", weight=892)
data[33]["mst"].add_edge("v", "e", weight=848)
data[33]["mst"].add_edge("w", "F", weight=570)
data[33]["mst"].add_edge("y", "g", weight=325)
data[33]["solutions"] = [
    { "edge": ("l", "n"), "weight": 1318, "expected": [('a', 'o'), ('a', 'm'), ('t', 'v'), ('o', 'k'), ('o', 'i'), ('b', 'r'), ('b', 'c'), ('j', 'u'), ('j', 'z'), ('r', 'k'), ('r', 'f'), ('s', 'h'), ('f', 'D'), ('d', 'y'), ('d', 'G'), ('y', 'g'), ('G', 'h'), ('v', 'e'), ('e', 'g'), ('e', 'C'), ('C', 'l'), ('D', 'h'), ('D', 'x'), ('B', 'p'), ('B', 'n'), ('i', 'q'), ('i', 'z'), ('q', 'p'), ('n', 'w'), ('w', 'F'), ('A', 'x'), ('F', 'E')] },
    { "edge": ("A", "E"), "weight": 1484, "expected": [('a', 'o'), ('a', 'm'), ('t', 'v'), ('o', 'k'), ('o', 'i'), ('b', 'r'), ('b', 'c'), ('j', 'u'), ('j', 'z'), ('r', 'k'), ('r', 'f'), ('s', 'h'), ('f', 'D'), ('d', 'y'), ('d', 'G'), ('y', 'g'), ('G', 'h'), ('v', 'e'), ('e', 'g'), ('e', 'C'), ('C', 'l'), ('D', 'h'), ('D', 'x'), ('B', 'p'), ('B', 'n'), ('i', 'q'), ('i', 'z'), ('q', 'p'), ('n', 'w'), ('w', 'F'), ('A', 'x'), ('F', 'E')] },
    { "edge": ("b", "r"), "weight": 185, "expected": [('a', 'o'), ('a', 'm'), ('t', 'v'), ('o', 'k'), ('o', 'i'), ('b', 'r'), ('b', 'c'), ('j', 'u'), ('j', 'z'), ('r', 'k'), ('r', 'f'), ('s', 'h'), ('f', 'D'), ('d', 'y'), ('d', 'G'), ('y', 'g'), ('G', 'h'), ('v', 'e'), ('e', 'g'), ('e', 'C'), ('C', 'l'), ('D', 'h'), ('D', 'x'), ('B', 'p'), ('B', 'n'), ('i', 'q'), ('i', 'z'), ('q', 'p'), ('n', 'w'), ('w', 'F'), ('A', 'x'), ('F', 'E')] },
    { "edge": ("y", "g"), "weight": 326, "expected": [('a', 'o'), ('a', 'm'), ('t', 'v'), ('o', 'k'), ('o', 'i'), ('b', 'r'), ('b', 'c'), ('j', 'u'), ('j', 'z'), ('r', 'k'), ('r', 'f'), ('s', 'h'), ('f', 'D'), ('d', 'y'), ('d', 'G'), ('y', 'g'), ('G', 'h'), ('v', 'e'), ('e', 'g'), ('e', 'C'), ('C', 'l'), ('D', 'h'), ('D', 'x'), ('B', 'p'), ('B', 'n'), ('i', 'q'), ('i', 'z'), ('q', 'p'), ('n', 'w'), ('w', 'F'), ('A', 'x'), ('F', 'E')] }
]
# Graph consisting of 33 nodes
data[34]["graph"] = Graph(is_directed=False)
data[34]["graph"].add_edge("A", "w", 267)
data[34]["graph"].add_edge("A", "x", 1212)
data[34]["graph"].add_edge("B", "f", 1580)
data[34]["graph"].add_edge("C", "x", 648)
data[34]["graph"].add_edge("E", "s", 1417)
data[34]["graph"].add_edge("E", "x", 1298)
data[34]["graph"].add_edge("F", "g", 649)
data[34]["graph"].add_edge("F", "w", 1301)
data[34]["graph"].add_edge("G", "d", 135)
data[34]["graph"].add_edge("G", "h", 1017)
data[34]["graph"].add_edge("H", "o", 1658)
data[34]["graph"].add_edge("a", "F", 153)
data[34]["graph"].add_edge("a", "m", 244)
data[34]["graph"].add_edge("a", "v", 1294)
data[34]["graph"].add_edge("b", "G", 1236)
data[34]["graph"].add_edge("b", "i", 681)
data[34]["graph"].add_edge("b", "l", 1553)
data[34]["graph"].add_edge("c", "A", 993)
data[34]["graph"].add_edge("c", "B", 967)
data[34]["graph"].add_edge("c", "p", 727)
data[34]["graph"].add_edge("d", "q", 176)
data[34]["graph"].add_edge("e", "H", 109)
data[34]["graph"].add_edge("e", "j", 1489)
data[34]["graph"].add_edge("f", "D", 1595)
data[34]["graph"].add_edge("f", "r", 429)
data[34]["graph"].add_edge("g", "E", 1677)
data[34]["graph"].add_edge("g", "k", 567)
data[34]["graph"].add_edge("h", "C", 184)
data[34]["graph"].add_edge("i", "B", 827)
data[34]["graph"].add_edge("i", "k", 1485)
data[34]["graph"].add_edge("j", "H", 315)
data[34]["graph"].add_edge("j", "r", 777)
data[34]["graph"].add_edge("k", "h", 191)
data[34]["graph"].add_edge("l", "o", 1148)
data[34]["graph"].add_edge("l", "y", 1478)
data[34]["graph"].add_edge("m", "C", 491)
data[34]["graph"].add_edge("m", "D", 843)
data[34]["graph"].add_edge("n", "t", 528)
data[34]["graph"].add_edge("n", "u", 139)
data[34]["graph"].add_edge("o", "s", 285)
data[34]["graph"].add_edge("p", "e", 1616)
data[34]["graph"].add_edge("p", "y", 1007)
data[34]["graph"].add_edge("q", "D", 785)
data[34]["graph"].add_edge("q", "t", 72)
data[34]["graph"].add_edge("r", "n", 1457)
data[34]["graph"].add_edge("t", "s", 1274)
data[34]["graph"].add_edge("v", "d", 1446)
data[34]["graph"].add_edge("v", "u", 655)
data[34]["graph"].add_edge("w", "z", 933)
data[34]["graph"].add_edge("y", "u", 756)
data[34]["mst"] = Graph(is_directed=False)
data[34]["mst"].add_edge("A", "w", weight=267)
data[34]["mst"].add_edge("C", "x", weight=648)
data[34]["mst"].add_edge("E", "x", weight=1298)
data[34]["mst"].add_edge("G", "d", weight=135)
data[34]["mst"].add_edge("a", "F", weight=153)
data[34]["mst"].add_edge("a", "m", weight=244)
data[34]["mst"].add_edge("b", "i", weight=681)
data[34]["mst"].add_edge("c", "A", weight=993)
data[34]["mst"].add_edge("c", "B", weight=967)
data[34]["mst"].add_edge("c", "p", weight=727)
data[34]["mst"].add_edge("d", "q", weight=176)
data[34]["mst"].add_edge("e", "H", weight=109)
data[34]["mst"].add_edge("f", "r", weight=429)
data[34]["mst"].add_edge("g", "k", weight=567)
data[34]["mst"].add_edge("h", "C", weight=184)
data[34]["mst"].add_edge("i", "B", weight=827)
data[34]["mst"].add_edge("j", "H", weight=315)
data[34]["mst"].add_edge("j", "r", weight=777)
data[34]["mst"].add_edge("k", "h", weight=191)
data[34]["mst"].add_edge("l", "o", weight=1148)
data[34]["mst"].add_edge("m", "C", weight=491)
data[34]["mst"].add_edge("m", "D", weight=843)
data[34]["mst"].add_edge("n", "t", weight=528)
data[34]["mst"].add_edge("n", "u", weight=139)
data[34]["mst"].add_edge("o", "s", weight=285)
data[34]["mst"].add_edge("p", "y", weight=1007)
data[34]["mst"].add_edge("q", "D", weight=785)
data[34]["mst"].add_edge("q", "t", weight=72)
data[34]["mst"].add_edge("r", "n", weight=1457)
data[34]["mst"].add_edge("t", "s", weight=1274)
data[34]["mst"].add_edge("v", "u", weight=655)
data[34]["mst"].add_edge("w", "z", weight=933)
data[34]["mst"].add_edge("y", "u", weight=756)
data[34]["solutions"] = [
    { "edge": ("H", "o"), "weight": 1659, "expected": [('a', 'F'), ('a', 'm'), ('m', 'C'), ('m', 'D'), ('v', 'u'), ('b', 'i'), ('i', 'B'), ('G', 'd'), ('l', 'o'), ('c', 'p'), ('c', 'B'), ('c', 'A'), ('A', 'w'), ('p', 'y'), ('d', 'q'), ('q', 't'), ('q', 'D'), ('e', 'H'), ('j', 'H'), ('j', 'r'), ('f', 'r'), ('r', 'n'), ('g', 'k'), ('k', 'h'), ('E', 'x'), ('h', 'C'), ('C', 'x'), ('y', 'u'), ('o', 's'), ('n', 'u'), ('n', 't'), ('t', 's'), ('w', 'z')] },
    { "edge": ("l", "y"), "weight": 1477, "expected": [('a', 'F'), ('a', 'm'), ('m', 'C'), ('m', 'D'), ('v', 'u'), ('b', 'i'), ('i', 'B'), ('G', 'd'), ('l', 'o'), ('c', 'p'), ('c', 'B'), ('c', 'A'), ('A', 'w'), ('p', 'y'), ('d', 'q'), ('q', 't'), ('q', 'D'), ('e', 'H'), ('j', 'H'), ('j', 'r'), ('f', 'r'), ('r', 'n'), ('g', 'k'), ('k', 'h'), ('E', 'x'), ('h', 'C'), ('C', 'x'), ('y', 'u'), ('o', 's'), ('n', 'u'), ('n', 't'), ('t', 's'), ('w', 'z')] },
    { "edge": ("c", "B"), "weight": 966, "expected": [('a', 'F'), ('a', 'm'), ('m', 'C'), ('m', 'D'), ('v', 'u'), ('b', 'i'), ('i', 'B'), ('G', 'd'), ('l', 'o'), ('c', 'p'), ('c', 'B'), ('c', 'A'), ('A', 'w'), ('p', 'y'), ('d', 'q'), ('q', 't'), ('q', 'D'), ('e', 'H'), ('j', 'H'), ('j', 'r'), ('f', 'r'), ('r', 'n'), ('g', 'k'), ('k', 'h'), ('E', 'x'), ('h', 'C'), ('C', 'x'), ('y', 'u'), ('o', 's'), ('n', 'u'), ('n', 't'), ('t', 's'), ('w', 'z')] },
    { "edge": ("c", "A"), "weight": 994, "expected": [('a', 'F'), ('a', 'm'), ('m', 'C'), ('m', 'D'), ('v', 'u'), ('b', 'i'), ('i', 'B'), ('G', 'd'), ('l', 'o'), ('c', 'p'), ('c', 'B'), ('c', 'A'), ('A', 'w'), ('p', 'y'), ('d', 'q'), ('q', 't'), ('q', 'D'), ('e', 'H'), ('j', 'H'), ('j', 'r'), ('f', 'r'), ('r', 'n'), ('g', 'k'), ('k', 'h'), ('E', 'x'), ('h', 'C'), ('C', 'x'), ('y', 'u'), ('o', 's'), ('n', 'u'), ('n', 't'), ('t', 's'), ('w', 'z')] }
]
# Graph consisting of 34 nodes
data[35]["graph"] = Graph(is_directed=False)
data[35]["graph"].add_edge("A", "F", 1265)
data[35]["graph"].add_edge("B", "j", 473)
data[35]["graph"].add_edge("B", "t", 1204)
data[35]["graph"].add_edge("C", "G", 1626)
data[35]["graph"].add_edge("D", "t", 461)
data[35]["graph"].add_edge("E", "p", 996)
data[35]["graph"].add_edge("H", "G", 1497)
data[35]["graph"].add_edge("H", "c", 431)
data[35]["graph"].add_edge("a", "H", 1008)
data[35]["graph"].add_edge("a", "r", 1213)
data[35]["graph"].add_edge("a", "x", 540)
data[35]["graph"].add_edge("b", "g", 1416)
data[35]["graph"].add_edge("b", "m", 1205)
data[35]["graph"].add_edge("b", "q", 167)
data[35]["graph"].add_edge("c", "B", 1155)
data[35]["graph"].add_edge("d", "f", 1143)
data[35]["graph"].add_edge("d", "h", 1448)
data[35]["graph"].add_edge("e", "j", 1121)
data[35]["graph"].add_edge("e", "v", 20)
data[35]["graph"].add_edge("f", "l", 969)
data[35]["graph"].add_edge("f", "y", 255)
data[35]["graph"].add_edge("g", "s", 330)
data[35]["graph"].add_edge("g", "u", 1680)
data[35]["graph"].add_edge("h", "A", 8)
data[35]["graph"].add_edge("h", "l", 416)
data[35]["graph"].add_edge("i", "F", 269)
data[35]["graph"].add_edge("i", "n", 434)
data[35]["graph"].add_edge("k", "E", 1466)
data[35]["graph"].add_edge("k", "w", 16)
data[35]["graph"].add_edge("k", "z", 923)
data[35]["graph"].add_edge("l", "F", 114)
data[35]["graph"].add_edge("m", "c", 199)
data[35]["graph"].add_edge("m", "j", 262)
data[35]["graph"].add_edge("n", "o", 1550)
data[35]["graph"].add_edge("o", "D", 1142)
data[35]["graph"].add_edge("p", "C", 1389)
data[35]["graph"].add_edge("q", "I", 1432)
data[35]["graph"].add_edge("q", "d", 580)
data[35]["graph"].add_edge("r", "e", 864)
data[35]["graph"].add_edge("r", "n", 1025)
data[35]["graph"].add_edge("s", "E", 76)
data[35]["graph"].add_edge("s", "i", 609)
data[35]["graph"].add_edge("u", "A", 1673)
data[35]["graph"].add_edge("u", "I", 791)
data[35]["graph"].add_edge("v", "p", 341)
data[35]["graph"].add_edge("v", "y", 857)
data[35]["graph"].add_edge("w", "D", 12)
data[35]["graph"].add_edge("w", "I", 35)
data[35]["graph"].add_edge("x", "C", 207)
data[35]["graph"].add_edge("x", "z", 1052)
data[35]["graph"].add_edge("y", "t", 822)
data[35]["graph"].add_edge("z", "o", 15)
data[35]["mst"] = Graph(is_directed=False)
data[35]["mst"].add_edge("B", "j", weight=473)
data[35]["mst"].add_edge("D", "t", weight=461)
data[35]["mst"].add_edge("H", "G", weight=1497)
data[35]["mst"].add_edge("H", "c", weight=431)
data[35]["mst"].add_edge("a", "H", weight=1008)
data[35]["mst"].add_edge("a", "x", weight=540)
data[35]["mst"].add_edge("b", "q", weight=167)
data[35]["mst"].add_edge("d", "f", weight=1143)
data[35]["mst"].add_edge("e", "v", weight=20)
data[35]["mst"].add_edge("f", "l", weight=969)
data[35]["mst"].add_edge("f", "y", weight=255)
data[35]["mst"].add_edge("g", "s", weight=330)
data[35]["mst"].add_edge("h", "A", weight=8)
data[35]["mst"].add_edge("h", "l", weight=416)
data[35]["mst"].add_edge("i", "F", weight=269)
data[35]["mst"].add_edge("i", "n", weight=434)
data[35]["mst"].add_edge("k", "w", weight=16)
data[35]["mst"].add_edge("k", "z", weight=923)
data[35]["mst"].add_edge("l", "F", weight=114)
data[35]["mst"].add_edge("m", "c", weight=199)
data[35]["mst"].add_edge("m", "j", weight=262)
data[35]["mst"].add_edge("q", "d", weight=580)
data[35]["mst"].add_edge("r", "e", weight=864)
data[35]["mst"].add_edge("s", "E", weight=76)
data[35]["mst"].add_edge("s", "i", weight=609)
data[35]["mst"].add_edge("u", "I", weight=791)
data[35]["mst"].add_edge("v", "p", weight=341)
data[35]["mst"].add_edge("v", "y", weight=857)
data[35]["mst"].add_edge("w", "D", weight=12)
data[35]["mst"].add_edge("w", "I", weight=35)
data[35]["mst"].add_edge("x", "C", weight=207)
data[35]["mst"].add_edge("x", "z", weight=1052)
data[35]["mst"].add_edge("y", "t", weight=822)
data[35]["mst"].add_edge("z", "o", weight=15)
data[35]["solutions"] = [
    { "edge": ("q", "I"), "weight": 1433, "expected": [('a', 'x'), ('a', 'H'), ('r', 'e'), ('H', 'c'), ('H', 'G'), ('x', 'C'), ('x', 'z'), ('b', 'q'), ('q', 'd'), ('m', 'c'), ('m', 'j'), ('g', 's'), ('B', 'j'), ('d', 'f'), ('f', 'y'), ('f', 'l'), ('h', 'A'), ('h', 'l'), ('e', 'v'), ('v', 'p'), ('v', 'y'), ('l', 'F'), ('y', 't'), ('s', 'E'), ('s', 'i'), ('u', 'I'), ('i', 'F'), ('i', 'n'), ('k', 'w'), ('k', 'z'), ('z', 'o'), ('w', 'D'), ('w', 'I'), ('D', 't')] },
    { "edge": ("g", "u"), "weight": 1679, "expected": [('a', 'x'), ('a', 'H'), ('r', 'e'), ('H', 'c'), ('H', 'G'), ('x', 'C'), ('x', 'z'), ('b', 'q'), ('q', 'd'), ('m', 'c'), ('m', 'j'), ('g', 's'), ('B', 'j'), ('d', 'f'), ('f', 'y'), ('f', 'l'), ('h', 'A'), ('h', 'l'), ('e', 'v'), ('v', 'p'), ('v', 'y'), ('l', 'F'), ('y', 't'), ('s', 'E'), ('s', 'i'), ('u', 'I'), ('i', 'F'), ('i', 'n'), ('k', 'w'), ('k', 'z'), ('z', 'o'), ('w', 'D'), ('w', 'I'), ('D', 't')] },
    { "edge": ("w", "D"), "weight": 11, "expected": [('a', 'x'), ('a', 'H'), ('r', 'e'), ('H', 'c'), ('H', 'G'), ('x', 'C'), ('x', 'z'), ('b', 'q'), ('q', 'd'), ('m', 'c'), ('m', 'j'), ('g', 's'), ('B', 'j'), ('d', 'f'), ('f', 'y'), ('f', 'l'), ('h', 'A'), ('h', 'l'), ('e', 'v'), ('v', 'p'), ('v', 'y'), ('l', 'F'), ('y', 't'), ('s', 'E'), ('s', 'i'), ('u', 'I'), ('i', 'F'), ('i', 'n'), ('k', 'w'), ('k', 'z'), ('z', 'o'), ('w', 'D'), ('w', 'I'), ('D', 't')] },
    { "edge": ("v", "p"), "weight": 342, "expected": [('a', 'x'), ('a', 'H'), ('r', 'e'), ('H', 'c'), ('H', 'G'), ('x', 'C'), ('x', 'z'), ('b', 'q'), ('q', 'd'), ('m', 'c'), ('m', 'j'), ('g', 's'), ('B', 'j'), ('d', 'f'), ('f', 'y'), ('f', 'l'), ('h', 'A'), ('h', 'l'), ('e', 'v'), ('v', 'p'), ('v', 'y'), ('l', 'F'), ('y', 't'), ('s', 'E'), ('s', 'i'), ('u', 'I'), ('i', 'F'), ('i', 'n'), ('k', 'w'), ('k', 'z'), ('z', 'o'), ('w', 'D'), ('w', 'I'), ('D', 't')] }
]
# Graph consisting of 35 nodes
data[36]["graph"] = Graph(is_directed=False)
data[36]["graph"].add_edge("B", "h", 250)
data[36]["graph"].add_edge("B", "i", 1241)
data[36]["graph"].add_edge("C", "D", 1255)
data[36]["graph"].add_edge("C", "u", 1186)
data[36]["graph"].add_edge("E", "x", 1055)
data[36]["graph"].add_edge("F", "i", 475)
data[36]["graph"].add_edge("F", "m", 336)
data[36]["graph"].add_edge("G", "A", 67)
data[36]["graph"].add_edge("H", "y", 1670)
data[36]["graph"].add_edge("I", "b", 202)
data[36]["graph"].add_edge("I", "j", 1599)
data[36]["graph"].add_edge("J", "r", 1003)
data[36]["graph"].add_edge("J", "u", 242)
data[36]["graph"].add_edge("a", "I", 619)
data[36]["graph"].add_edge("a", "p", 185)
data[36]["graph"].add_edge("a", "w", 775)
data[36]["graph"].add_edge("b", "q", 1118)
data[36]["graph"].add_edge("b", "s", 345)
data[36]["graph"].add_edge("c", "j", 1503)
data[36]["graph"].add_edge("c", "n", 1359)
data[36]["graph"].add_edge("d", "f", 1643)
data[36]["graph"].add_edge("e", "B", 1497)
data[36]["graph"].add_edge("e", "H", 184)
data[36]["graph"].add_edge("f", "H", 597)
data[36]["graph"].add_edge("g", "C", 1572)
data[36]["graph"].add_edge("g", "F", 86)
data[36]["graph"].add_edge("g", "J", 310)
data[36]["graph"].add_edge("h", "r", 120)
data[36]["graph"].add_edge("h", "v", 919)
data[36]["graph"].add_edge("i", "y", 1419)
data[36]["graph"].add_edge("j", "e", 193)
data[36]["graph"].add_edge("k", "E", 599)
data[36]["graph"].add_edge("k", "t", 1540)
data[36]["graph"].add_edge("l", "x", 371)
data[36]["graph"].add_edge("l", "z", 87)
data[36]["graph"].add_edge("m", "o", 1198)
data[36]["graph"].add_edge("n", "k", 822)
data[36]["graph"].add_edge("n", "r", 1657)
data[36]["graph"].add_edge("o", "G", 1216)
data[36]["graph"].add_edge("p", "d", 761)
data[36]["graph"].add_edge("p", "u", 1427)
data[36]["graph"].add_edge("q", "A", 474)
data[36]["graph"].add_edge("q", "d", 957)
data[36]["graph"].add_edge("s", "G", 459)
data[36]["graph"].add_edge("s", "f", 196)
data[36]["graph"].add_edge("t", "m", 151)
data[36]["graph"].add_edge("v", "o", 691)
data[36]["graph"].add_edge("v", "t", 1211)
data[36]["graph"].add_edge("w", "E", 1525)
data[36]["graph"].add_edge("w", "c", 1361)
data[36]["graph"].add_edge("y", "l", 632)
data[36]["graph"].add_edge("z", "A", 357)
data[36]["graph"].add_edge("z", "x", 841)
data[36]["mst"] = Graph(is_directed=False)
data[36]["mst"].add_edge("B", "h", weight=250)
data[36]["mst"].add_edge("C", "D", weight=1255)
data[36]["mst"].add_edge("C", "u", weight=1186)
data[36]["mst"].add_edge("E", "x", weight=1055)
data[36]["mst"].add_edge("F", "i", weight=475)
data[36]["mst"].add_edge("F", "m", weight=336)
data[36]["mst"].add_edge("G", "A", weight=67)
data[36]["mst"].add_edge("I", "b", weight=202)
data[36]["mst"].add_edge("J", "r", weight=1003)
data[36]["mst"].add_edge("J", "u", weight=242)
data[36]["mst"].add_edge("a", "I", weight=619)
data[36]["mst"].add_edge("a", "p", weight=185)
data[36]["mst"].add_edge("a", "w", weight=775)
data[36]["mst"].add_edge("b", "s", weight=345)
data[36]["mst"].add_edge("c", "n", weight=1359)
data[36]["mst"].add_edge("e", "H", weight=184)
data[36]["mst"].add_edge("f", "H", weight=597)
data[36]["mst"].add_edge("g", "F", weight=86)
data[36]["mst"].add_edge("g", "J", weight=310)
data[36]["mst"].add_edge("h", "r", weight=120)
data[36]["mst"].add_edge("h", "v", weight=919)
data[36]["mst"].add_edge("j", "e", weight=193)
data[36]["mst"].add_edge("k", "E", weight=599)
data[36]["mst"].add_edge("l", "x", weight=371)
data[36]["mst"].add_edge("l", "z", weight=87)
data[36]["mst"].add_edge("n", "k", weight=822)
data[36]["mst"].add_edge("o", "G", weight=1216)
data[36]["mst"].add_edge("p", "d", weight=761)
data[36]["mst"].add_edge("q", "A", weight=474)
data[36]["mst"].add_edge("s", "G", weight=459)
data[36]["mst"].add_edge("s", "f", weight=196)
data[36]["mst"].add_edge("t", "m", weight=151)
data[36]["mst"].add_edge("v", "o", weight=691)
data[36]["mst"].add_edge("y", "l", weight=632)
data[36]["mst"].add_edge("z", "A", weight=357)
data[36]["solutions"] = [
    { "edge": ("m", "o"), "weight": 1199, "expected": [('a', 'p'), ('a', 'I'), ('a', 'w'), ('I', 'b'), ('p', 'd'), ('b', 's'), ('q', 'A'), ('s', 'f'), ('s', 'G'), ('c', 'n'), ('j', 'e'), ('n', 'k'), ('f', 'H'), ('e', 'H'), ('B', 'h'), ('g', 'F'), ('g', 'J'), ('J', 'u'), ('J', 'r'), ('C', 'u'), ('C', 'D'), ('F', 'm'), ('F', 'i'), ('h', 'r'), ('h', 'v'), ('v', 'o'), ('y', 'l'), ('k', 'E'), ('t', 'm'), ('E', 'x'), ('l', 'z'), ('l', 'x'), ('z', 'A'), ('o', 'G'), ('G', 'A')] },
    { "edge": ("w", "c"), "weight": 1360, "expected": [('a', 'p'), ('a', 'I'), ('a', 'w'), ('I', 'b'), ('p', 'd'), ('b', 's'), ('q', 'A'), ('s', 'f'), ('s', 'G'), ('c', 'n'), ('j', 'e'), ('n', 'k'), ('f', 'H'), ('e', 'H'), ('B', 'h'), ('g', 'F'), ('g', 'J'), ('J', 'u'), ('J', 'r'), ('C', 'u'), ('C', 'D'), ('F', 'm'), ('F', 'i'), ('h', 'r'), ('h', 'v'), ('v', 'o'), ('y', 'l'), ('k', 'E'), ('t', 'm'), ('E', 'x'), ('l', 'z'), ('l', 'x'), ('z', 'A'), ('o', 'G'), ('G', 'A')] },
    { "edge": ("o", "G"), "weight": 1215, "expected": [('a', 'p'), ('a', 'I'), ('a', 'w'), ('I', 'b'), ('p', 'd'), ('b', 's'), ('q', 'A'), ('s', 'f'), ('s', 'G'), ('c', 'n'), ('j', 'e'), ('n', 'k'), ('f', 'H'), ('e', 'H'), ('B', 'h'), ('g', 'F'), ('g', 'J'), ('J', 'u'), ('J', 'r'), ('C', 'u'), ('C', 'D'), ('F', 'm'), ('F', 'i'), ('h', 'r'), ('h', 'v'), ('v', 'o'), ('y', 'l'), ('k', 'E'), ('t', 'm'), ('E', 'x'), ('l', 'z'), ('l', 'x'), ('z', 'A'), ('o', 'G'), ('G', 'A')] },
    { "edge": ("I", "b"), "weight": 203, "expected": [('a', 'p'), ('a', 'I'), ('a', 'w'), ('I', 'b'), ('p', 'd'), ('b', 's'), ('q', 'A'), ('s', 'f'), ('s', 'G'), ('c', 'n'), ('j', 'e'), ('n', 'k'), ('f', 'H'), ('e', 'H'), ('B', 'h'), ('g', 'F'), ('g', 'J'), ('J', 'u'), ('J', 'r'), ('C', 'u'), ('C', 'D'), ('F', 'm'), ('F', 'i'), ('h', 'r'), ('h', 'v'), ('v', 'o'), ('y', 'l'), ('k', 'E'), ('t', 'm'), ('E', 'x'), ('l', 'z'), ('l', 'x'), ('z', 'A'), ('o', 'G'), ('G', 'A')] }
]
# Graph consisting of 36 nodes
data[37]["graph"] = Graph(is_directed=False)
data[37]["graph"].add_edge("A", "j", 788)
data[37]["graph"].add_edge("A", "q", 1275)
data[37]["graph"].add_edge("B", "w", 1090)
data[37]["graph"].add_edge("C", "q", 966)
data[37]["graph"].add_edge("D", "e", 1011)
data[37]["graph"].add_edge("D", "g", 472)
data[37]["graph"].add_edge("E", "J", 1541)
data[37]["graph"].add_edge("F", "J", 559)
data[37]["graph"].add_edge("G", "k", 834)
data[37]["graph"].add_edge("G", "n", 1245)
data[37]["graph"].add_edge("H", "j", 774)
data[37]["graph"].add_edge("H", "w", 738)
data[37]["graph"].add_edge("I", "z", 1586)
data[37]["graph"].add_edge("K", "n", 1191)
data[37]["graph"].add_edge("K", "u", 403)
data[37]["graph"].add_edge("a", "K", 1357)
data[37]["graph"].add_edge("a", "i", 941)
data[37]["graph"].add_edge("a", "l", 1188)
data[37]["graph"].add_edge("b", "f", 477)
data[37]["graph"].add_edge("b", "o", 17)
data[37]["graph"].add_edge("b", "v", 1381)
data[37]["graph"].add_edge("c", "D", 1466)
data[37]["graph"].add_edge("c", "G", 1273)
data[37]["graph"].add_edge("c", "x", 1193)
data[37]["graph"].add_edge("d", "m", 428)
data[37]["graph"].add_edge("e", "A", 618)
data[37]["graph"].add_edge("e", "y", 813)
data[37]["graph"].add_edge("f", "d", 1093)
data[37]["graph"].add_edge("f", "p", 378)
data[37]["graph"].add_edge("g", "E", 36)
data[37]["graph"].add_edge("g", "I", 451)
data[37]["graph"].add_edge("h", "H", 5)
data[37]["graph"].add_edge("h", "s", 1394)
data[37]["graph"].add_edge("i", "m", 300)
data[37]["graph"].add_edge("i", "o", 1114)
data[37]["graph"].add_edge("j", "C", 1363)
data[37]["graph"].add_edge("k", "B", 612)
data[37]["graph"].add_edge("k", "u", 827)
data[37]["graph"].add_edge("l", "C", 1652)
data[37]["graph"].add_edge("l", "h", 1483)
data[37]["graph"].add_edge("m", "B", 395)
data[37]["graph"].add_edge("o", "d", 308)
data[37]["graph"].add_edge("p", "E", 887)
data[37]["graph"].add_edge("p", "t", 1486)
data[37]["graph"].add_edge("r", "F", 255)
data[37]["graph"].add_edge("s", "r", 1314)
data[37]["graph"].add_edge("s", "z", 47)
data[37]["graph"].add_edge("t", "z", 608)
data[37]["graph"].add_edge("u", "t", 982)
data[37]["graph"].add_edge("v", "n", 677)
data[37]["graph"].add_edge("v", "q", 387)
data[37]["graph"].add_edge("x", "I", 367)
data[37]["graph"].add_edge("x", "r", 86)
data[37]["graph"].add_edge("y", "F", 796)
data[37]["graph"].add_edge("y", "w", 484)
data[37]["mst"] = Graph(is_directed=False)
data[37]["mst"].add_edge("A", "j", weight=788)
data[37]["mst"].add_edge("C", "q", weight=966)
data[37]["mst"].add_edge("D", "g", weight=472)
data[37]["mst"].add_edge("F", "J", weight=559)
data[37]["mst"].add_edge("G", "k", weight=834)
data[37]["mst"].add_edge("H", "j", weight=774)
data[37]["mst"].add_edge("H", "w", weight=738)
data[37]["mst"].add_edge("K", "n", weight=1191)
data[37]["mst"].add_edge("K", "u", weight=403)
data[37]["mst"].add_edge("a", "i", weight=941)
data[37]["mst"].add_edge("a", "l", weight=1188)
data[37]["mst"].add_edge("b", "f", weight=477)
data[37]["mst"].add_edge("b", "o", weight=17)
data[37]["mst"].add_edge("c", "x", weight=1193)
data[37]["mst"].add_edge("d", "m", weight=428)
data[37]["mst"].add_edge("e", "A", weight=618)
data[37]["mst"].add_edge("f", "p", weight=378)
data[37]["mst"].add_edge("g", "E", weight=36)
data[37]["mst"].add_edge("g", "I", weight=451)
data[37]["mst"].add_edge("h", "H", weight=5)
data[37]["mst"].add_edge("i", "m", weight=300)
data[37]["mst"].add_edge("k", "B", weight=612)
data[37]["mst"].add_edge("k", "u", weight=827)
data[37]["mst"].add_edge("m", "B", weight=395)
data[37]["mst"].add_edge("o", "d", weight=308)
data[37]["mst"].add_edge("p", "E", weight=887)
data[37]["mst"].add_edge("r", "F", weight=255)
data[37]["mst"].add_edge("s", "z", weight=47)
data[37]["mst"].add_edge("t", "z", weight=608)
data[37]["mst"].add_edge("u", "t", weight=982)
data[37]["mst"].add_edge("v", "n", weight=677)
data[37]["mst"].add_edge("v", "q", weight=387)
data[37]["mst"].add_edge("x", "I", weight=367)
data[37]["mst"].add_edge("x", "r", weight=86)
data[37]["mst"].add_edge("y", "F", weight=796)
data[37]["mst"].add_edge("y", "w", weight=484)
data[37]["solutions"] = [
    { "edge": ("a", "K"), "weight": 1358, "expected": [('a', 'i'), ('a', 'l'), ('i', 'm'), ('K', 'u'), ('K', 'n'), ('b', 'o'), ('b', 'f'), ('v', 'q'), ('v', 'n'), ('f', 'p'), ('o', 'd'), ('c', 'x'), ('G', 'k'), ('D', 'g'), ('x', 'r'), ('x', 'I'), ('d', 'm'), ('m', 'B'), ('e', 'A'), ('y', 'w'), ('y', 'F'), ('A', 'j'), ('p', 'E'), ('g', 'E'), ('g', 'I'), ('h', 'H'), ('H', 'w'), ('H', 'j'), ('s', 'z'), ('C', 'q'), ('k', 'B'), ('k', 'u'), ('u', 't'), ('t', 'z'), ('r', 'F'), ('F', 'J')] },
    { "edge": ("h", "s"), "weight": 1393, "expected": [('a', 'i'), ('a', 'l'), ('i', 'm'), ('K', 'u'), ('K', 'n'), ('b', 'o'), ('b', 'f'), ('v', 'q'), ('v', 'n'), ('f', 'p'), ('o', 'd'), ('c', 'x'), ('G', 'k'), ('D', 'g'), ('x', 'r'), ('x', 'I'), ('d', 'm'), ('m', 'B'), ('e', 'A'), ('y', 'w'), ('y', 'F'), ('A', 'j'), ('p', 'E'), ('g', 'E'), ('g', 'I'), ('h', 'H'), ('H', 'w'), ('H', 'j'), ('s', 'z'), ('C', 'q'), ('k', 'B'), ('k', 'u'), ('u', 't'), ('t', 'z'), ('r', 'F'), ('F', 'J')] },
    { "edge": ("C", "q"), "weight": 965, "expected": [('a', 'i'), ('a', 'l'), ('i', 'm'), ('K', 'u'), ('K', 'n'), ('b', 'o'), ('b', 'f'), ('v', 'q'), ('v', 'n'), ('f', 'p'), ('o', 'd'), ('c', 'x'), ('G', 'k'), ('D', 'g'), ('x', 'r'), ('x', 'I'), ('d', 'm'), ('m', 'B'), ('e', 'A'), ('y', 'w'), ('y', 'F'), ('A', 'j'), ('p', 'E'), ('g', 'E'), ('g', 'I'), ('h', 'H'), ('H', 'w'), ('H', 'j'), ('s', 'z'), ('C', 'q'), ('k', 'B'), ('k', 'u'), ('u', 't'), ('t', 'z'), ('r', 'F'), ('F', 'J')] },
    { "edge": ("t", "z"), "weight": 609, "expected": [('a', 'i'), ('a', 'l'), ('i', 'm'), ('K', 'u'), ('K', 'n'), ('b', 'o'), ('b', 'f'), ('v', 'q'), ('v', 'n'), ('f', 'p'), ('o', 'd'), ('c', 'x'), ('G', 'k'), ('D', 'g'), ('x', 'r'), ('x', 'I'), ('d', 'm'), ('m', 'B'), ('e', 'A'), ('y', 'w'), ('y', 'F'), ('A', 'j'), ('p', 'E'), ('g', 'E'), ('g', 'I'), ('h', 'H'), ('H', 'w'), ('H', 'j'), ('s', 'z'), ('C', 'q'), ('k', 'B'), ('k', 'u'), ('u', 't'), ('t', 'z'), ('r', 'F'), ('F', 'J')] }
]
# Graph consisting of 37 nodes
data[38]["graph"] = Graph(is_directed=False)
data[38]["graph"].add_edge("A", "B", 1442)
data[38]["graph"].add_edge("A", "t", 356)
data[38]["graph"].add_edge("B", "H", 1259)
data[38]["graph"].add_edge("C", "q", 1396)
data[38]["graph"].add_edge("D", "I", 128)
data[38]["graph"].add_edge("E", "D", 861)
data[38]["graph"].add_edge("E", "I", 996)
data[38]["graph"].add_edge("F", "H", 1614)
data[38]["graph"].add_edge("F", "v", 1326)
data[38]["graph"].add_edge("J", "k", 841)
data[38]["graph"].add_edge("K", "j", 216)
data[38]["graph"].add_edge("K", "v", 1622)
data[38]["graph"].add_edge("L", "t", 112)
data[38]["graph"].add_edge("L", "y", 1034)
data[38]["graph"].add_edge("a", "L", 299)
data[38]["graph"].add_edge("a", "h", 935)
data[38]["graph"].add_edge("a", "w", 259)
data[38]["graph"].add_edge("b", "K", 1145)
data[38]["graph"].add_edge("b", "c", 1367)
data[38]["graph"].add_edge("b", "f", 1665)
data[38]["graph"].add_edge("c", "o", 408)
data[38]["graph"].add_edge("d", "A", 325)
data[38]["graph"].add_edge("d", "p", 195)
data[38]["graph"].add_edge("d", "s", 603)
data[38]["graph"].add_edge("e", "i", 1392)
data[38]["graph"].add_edge("e", "m", 724)
data[38]["graph"].add_edge("e", "r", 1147)
data[38]["graph"].add_edge("f", "C", 799)
data[38]["graph"].add_edge("f", "p", 580)
data[38]["graph"].add_edge("g", "J", 86)
data[38]["graph"].add_edge("g", "l", 349)
data[38]["graph"].add_edge("g", "u", 607)
data[38]["graph"].add_edge("h", "G", 1148)
data[38]["graph"].add_edge("h", "y", 836)
data[38]["graph"].add_edge("i", "F", 662)
data[38]["graph"].add_edge("i", "G", 1287)
data[38]["graph"].add_edge("j", "n", 1243)
data[38]["graph"].add_edge("j", "q", 574)
data[38]["graph"].add_edge("k", "E", 727)
data[38]["graph"].add_edge("l", "B", 184)
data[38]["graph"].add_edge("l", "D", 628)
data[38]["graph"].add_edge("m", "z", 1206)
data[38]["graph"].add_edge("n", "t", 1038)
data[38]["graph"].add_edge("o", "n", 992)
data[38]["graph"].add_edge("o", "y", 1485)
data[38]["graph"].add_edge("p", "q", 377)
data[38]["graph"].add_edge("r", "H", 870)
data[38]["graph"].add_edge("r", "k", 1440)
data[38]["graph"].add_edge("s", "C", 1526)
data[38]["graph"].add_edge("s", "J", 962)
data[38]["graph"].add_edge("u", "G", 1093)
data[38]["graph"].add_edge("u", "x", 1253)
data[38]["graph"].add_edge("w", "c", 274)
data[38]["graph"].add_edge("w", "m", 906)
data[38]["graph"].add_edge("x", "I", 1553)
data[38]["graph"].add_edge("z", "v", 814)
data[38]["graph"].add_edge("z", "x", 1560)
data[38]["mst"] = Graph(is_directed=False)
data[38]["mst"].add_edge("A", "t", weight=356)
data[38]["mst"].add_edge("D", "I", weight=128)
data[38]["mst"].add_edge("J", "k", weight=841)
data[38]["mst"].add_edge("K", "j", weight=216)
data[38]["mst"].add_edge("L", "t", weight=112)
data[38]["mst"].add_edge("a", "L", weight=299)
data[38]["mst"].add_edge("a", "h", weight=935)
data[38]["mst"].add_edge("a", "w", weight=259)
data[38]["mst"].add_edge("b", "K", weight=1145)
data[38]["mst"].add_edge("c", "o", weight=408)
data[38]["mst"].add_edge("d", "A", weight=325)
data[38]["mst"].add_edge("d", "p", weight=195)
data[38]["mst"].add_edge("d", "s", weight=603)
data[38]["mst"].add_edge("e", "m", weight=724)
data[38]["mst"].add_edge("e", "r", weight=1147)
data[38]["mst"].add_edge("f", "C", weight=799)
data[38]["mst"].add_edge("f", "p", weight=580)
data[38]["mst"].add_edge("g", "J", weight=86)
data[38]["mst"].add_edge("g", "l", weight=349)
data[38]["mst"].add_edge("g", "u", weight=607)
data[38]["mst"].add_edge("h", "y", weight=836)
data[38]["mst"].add_edge("i", "F", weight=662)
data[38]["mst"].add_edge("i", "G", weight=1287)
data[38]["mst"].add_edge("j", "q", weight=574)
data[38]["mst"].add_edge("k", "E", weight=727)
data[38]["mst"].add_edge("l", "B", weight=184)
data[38]["mst"].add_edge("l", "D", weight=628)
data[38]["mst"].add_edge("m", "z", weight=1206)
data[38]["mst"].add_edge("o", "n", weight=992)
data[38]["mst"].add_edge("p", "q", weight=377)
data[38]["mst"].add_edge("r", "H", weight=870)
data[38]["mst"].add_edge("s", "J", weight=962)
data[38]["mst"].add_edge("u", "G", weight=1093)
data[38]["mst"].add_edge("u", "x", weight=1253)
data[38]["mst"].add_edge("w", "c", weight=274)
data[38]["mst"].add_edge("w", "m", weight=906)
data[38]["mst"].add_edge("z", "v", weight=814)
data[38]["solutions"] = [
    { "edge": ("F", "v"), "weight": 1327, "expected": [('a', 'w'), ('a', 'L'), ('a', 'h'), ('L', 't'), ('w', 'c'), ('w', 'm'), ('h', 'y'), ('b', 'K'), ('c', 'o'), ('K', 'j'), ('f', 'p'), ('f', 'C'), ('o', 'n'), ('d', 'p'), ('d', 'A'), ('d', 's'), ('s', 'J'), ('A', 't'), ('p', 'q'), ('e', 'm'), ('e', 'r'), ('i', 'F'), ('i', 'G'), ('r', 'H'), ('m', 'z'), ('g', 'J'), ('g', 'l'), ('g', 'u'), ('J', 'k'), ('l', 'B'), ('l', 'D'), ('u', 'G'), ('u', 'x'), ('j', 'q'), ('k', 'E'), ('D', 'I'), ('z', 'v')] },
    { "edge": ("o", "y"), "weight": 1484, "expected": [('a', 'w'), ('a', 'L'), ('a', 'h'), ('L', 't'), ('w', 'c'), ('w', 'm'), ('h', 'y'), ('b', 'K'), ('c', 'o'), ('K', 'j'), ('f', 'p'), ('f', 'C'), ('o', 'n'), ('d', 'p'), ('d', 'A'), ('d', 's'), ('s', 'J'), ('A', 't'), ('p', 'q'), ('e', 'm'), ('e', 'r'), ('i', 'F'), ('i', 'G'), ('r', 'H'), ('m', 'z'), ('g', 'J'), ('g', 'l'), ('g', 'u'), ('J', 'k'), ('l', 'B'), ('l', 'D'), ('u', 'G'), ('u', 'x'), ('j', 'q'), ('k', 'E'), ('D', 'I'), ('z', 'v')] },
    { "edge": ("o", "n"), "weight": 991, "expected": [('a', 'w'), ('a', 'L'), ('a', 'h'), ('L', 't'), ('w', 'c'), ('w', 'm'), ('h', 'y'), ('b', 'K'), ('c', 'o'), ('K', 'j'), ('f', 'p'), ('f', 'C'), ('o', 'n'), ('d', 'p'), ('d', 'A'), ('d', 's'), ('s', 'J'), ('A', 't'), ('p', 'q'), ('e', 'm'), ('e', 'r'), ('i', 'F'), ('i', 'G'), ('r', 'H'), ('m', 'z'), ('g', 'J'), ('g', 'l'), ('g', 'u'), ('J', 'k'), ('l', 'B'), ('l', 'D'), ('u', 'G'), ('u', 'x'), ('j', 'q'), ('k', 'E'), ('D', 'I'), ('z', 'v')] },
    { "edge": ("g", "l"), "weight": 350, "expected": [('a', 'w'), ('a', 'L'), ('a', 'h'), ('L', 't'), ('w', 'c'), ('w', 'm'), ('h', 'y'), ('b', 'K'), ('c', 'o'), ('K', 'j'), ('f', 'p'), ('f', 'C'), ('o', 'n'), ('d', 'p'), ('d', 'A'), ('d', 's'), ('s', 'J'), ('A', 't'), ('p', 'q'), ('e', 'm'), ('e', 'r'), ('i', 'F'), ('i', 'G'), ('r', 'H'), ('m', 'z'), ('g', 'J'), ('g', 'l'), ('g', 'u'), ('J', 'k'), ('l', 'B'), ('l', 'D'), ('u', 'G'), ('u', 'x'), ('j', 'q'), ('k', 'E'), ('D', 'I'), ('z', 'v')] }
]
# Graph consisting of 38 nodes
data[39]["graph"] = Graph(is_directed=False)
data[39]["graph"].add_edge("A", "E", 1379)
data[39]["graph"].add_edge("A", "y", 460)
data[39]["graph"].add_edge("B", "u", 27)
data[39]["graph"].add_edge("B", "v", 909)
data[39]["graph"].add_edge("C", "p", 1068)
data[39]["graph"].add_edge("C", "r", 540)
data[39]["graph"].add_edge("D", "i", 1038)
data[39]["graph"].add_edge("D", "s", 809)
data[39]["graph"].add_edge("E", "M", 816)
data[39]["graph"].add_edge("F", "M", 1183)
data[39]["graph"].add_edge("F", "x", 424)
data[39]["graph"].add_edge("G", "s", 851)
data[39]["graph"].add_edge("H", "d", 1637)
data[39]["graph"].add_edge("H", "i", 790)
data[39]["graph"].add_edge("I", "r", 108)
data[39]["graph"].add_edge("I", "s", 984)
data[39]["graph"].add_edge("K", "E", 148)
data[39]["graph"].add_edge("K", "u", 941)
data[39]["graph"].add_edge("L", "p", 1671)
data[39]["graph"].add_edge("L", "u", 994)
data[39]["graph"].add_edge("a", "b", 1280)
data[39]["graph"].add_edge("a", "w", 212)
data[39]["graph"].add_edge("a", "z", 353)
data[39]["graph"].add_edge("b", "c", 937)
data[39]["graph"].add_edge("b", "o", 1084)
data[39]["graph"].add_edge("c", "H", 600)
data[39]["graph"].add_edge("c", "g", 183)
data[39]["graph"].add_edge("d", "e", 1323)
data[39]["graph"].add_edge("d", "h", 778)
data[39]["graph"].add_edge("e", "q", 907)
data[39]["graph"].add_edge("e", "t", 1476)
data[39]["graph"].add_edge("f", "A", 1672)
data[39]["graph"].add_edge("f", "D", 807)
data[39]["graph"].add_edge("f", "L", 223)
data[39]["graph"].add_edge("g", "I", 384)
data[39]["graph"].add_edge("h", "B", 545)
data[39]["graph"].add_edge("h", "F", 817)
data[39]["graph"].add_edge("i", "y", 410)
data[39]["graph"].add_edge("j", "n", 1203)
data[39]["graph"].add_edge("k", "C", 1233)
data[39]["graph"].add_edge("k", "x", 917)
data[39]["graph"].add_edge("m", "J", 1112)
data[39]["graph"].add_edge("m", "K", 1210)
data[39]["graph"].add_edge("m", "r", 1667)
data[39]["graph"].add_edge("n", "G", 1605)
data[39]["graph"].add_edge("n", "J", 144)
data[39]["graph"].add_edge("o", "g", 927)
data[39]["graph"].add_edge("o", "l", 709)
data[39]["graph"].add_edge("p", "v", 227)
data[39]["graph"].add_edge("q", "J", 1644)
data[39]["graph"].add_edge("t", "G", 1589)
data[39]["graph"].add_edge("t", "j", 531)
data[39]["graph"].add_edge("w", "l", 993)
data[39]["graph"].add_edge("w", "q", 1004)
data[39]["graph"].add_edge("x", "v", 1079)
data[39]["graph"].add_edge("y", "j", 1251)
data[39]["graph"].add_edge("z", "k", 87)
data[39]["graph"].add_edge("z", "l", 986)
data[39]["mst"] = Graph(is_directed=False)
data[39]["mst"].add_edge("A", "y", weight=460)
data[39]["mst"].add_edge("B", "u", weight=27)
data[39]["mst"].add_edge("B", "v", weight=909)
data[39]["mst"].add_edge("C", "r", weight=540)
data[39]["mst"].add_edge("D", "s", weight=809)
data[39]["mst"].add_edge("E", "M", weight=816)
data[39]["mst"].add_edge("F", "x", weight=424)
data[39]["mst"].add_edge("G", "s", weight=851)
data[39]["mst"].add_edge("H", "i", weight=790)
data[39]["mst"].add_edge("I", "r", weight=108)
data[39]["mst"].add_edge("I", "s", weight=984)
data[39]["mst"].add_edge("K", "E", weight=148)
data[39]["mst"].add_edge("K", "u", weight=941)
data[39]["mst"].add_edge("a", "w", weight=212)
data[39]["mst"].add_edge("a", "z", weight=353)
data[39]["mst"].add_edge("b", "c", weight=937)
data[39]["mst"].add_edge("c", "H", weight=600)
data[39]["mst"].add_edge("c", "g", weight=183)
data[39]["mst"].add_edge("d", "h", weight=778)
data[39]["mst"].add_edge("e", "q", weight=907)
data[39]["mst"].add_edge("f", "D", weight=807)
data[39]["mst"].add_edge("f", "L", weight=223)
data[39]["mst"].add_edge("g", "I", weight=384)
data[39]["mst"].add_edge("h", "B", weight=545)
data[39]["mst"].add_edge("h", "F", weight=817)
data[39]["mst"].add_edge("i", "y", weight=410)
data[39]["mst"].add_edge("j", "n", weight=1203)
data[39]["mst"].add_edge("k", "x", weight=917)
data[39]["mst"].add_edge("m", "J", weight=1112)
data[39]["mst"].add_edge("m", "K", weight=1210)
data[39]["mst"].add_edge("n", "J", weight=144)
data[39]["mst"].add_edge("o", "g", weight=927)
data[39]["mst"].add_edge("o", "l", weight=709)
data[39]["mst"].add_edge("p", "v", weight=227)
data[39]["mst"].add_edge("t", "j", weight=531)
data[39]["mst"].add_edge("w", "q", weight=1004)
data[39]["mst"].add_edge("z", "k", weight=87)
data[39]["mst"].add_edge("z", "l", weight=986)
data[39]["solutions"] = [
    { "edge": ("f", "A"), "weight": 1673, "expected": [('a', 'w'), ('a', 'z'), ('b', 'c'), ('w', 'q'), ('z', 'k'), ('z', 'l'), ('c', 'g'), ('c', 'H'), ('o', 'l'), ('o', 'g'), ('g', 'I'), ('H', 'i'), ('d', 'h'), ('e', 'q'), ('h', 'B'), ('h', 'F'), ('t', 'j'), ('f', 'L'), ('f', 'D'), ('A', 'y'), ('D', 's'), ('I', 'r'), ('I', 's'), ('B', 'u'), ('B', 'v'), ('F', 'x'), ('i', 'y'), ('j', 'n'), ('n', 'J'), ('k', 'x'), ('C', 'r'), ('m', 'J'), ('m', 'K'), ('K', 'E'), ('K', 'u'), ('G', 's'), ('p', 'v'), ('E', 'M')] },
    { "edge": ("e", "t"), "weight": 1475, "expected": [('a', 'w'), ('a', 'z'), ('b', 'c'), ('w', 'q'), ('z', 'k'), ('z', 'l'), ('c', 'g'), ('c', 'H'), ('o', 'l'), ('o', 'g'), ('g', 'I'), ('H', 'i'), ('d', 'h'), ('e', 'q'), ('h', 'B'), ('h', 'F'), ('t', 'j'), ('f', 'L'), ('f', 'D'), ('A', 'y'), ('D', 's'), ('I', 'r'), ('I', 's'), ('B', 'u'), ('B', 'v'), ('F', 'x'), ('i', 'y'), ('j', 'n'), ('n', 'J'), ('k', 'x'), ('C', 'r'), ('m', 'J'), ('m', 'K'), ('K', 'E'), ('K', 'u'), ('G', 's'), ('p', 'v'), ('E', 'M')] },
    { "edge": ("n", "J"), "weight": 143, "expected": [('a', 'w'), ('a', 'z'), ('b', 'c'), ('w', 'q'), ('z', 'k'), ('z', 'l'), ('c', 'g'), ('c', 'H'), ('o', 'l'), ('o', 'g'), ('g', 'I'), ('H', 'i'), ('d', 'h'), ('e', 'q'), ('h', 'B'), ('h', 'F'), ('t', 'j'), ('f', 'L'), ('f', 'D'), ('A', 'y'), ('D', 's'), ('I', 'r'), ('I', 's'), ('B', 'u'), ('B', 'v'), ('F', 'x'), ('i', 'y'), ('j', 'n'), ('n', 'J'), ('k', 'x'), ('C', 'r'), ('m', 'J'), ('m', 'K'), ('K', 'E'), ('K', 'u'), ('G', 's'), ('p', 'v'), ('E', 'M')] },
    { "edge": ("k", "x"), "weight": 918, "expected": [('a', 'w'), ('a', 'z'), ('b', 'c'), ('w', 'q'), ('z', 'k'), ('z', 'l'), ('c', 'g'), ('c', 'H'), ('o', 'l'), ('o', 'g'), ('g', 'I'), ('H', 'i'), ('d', 'h'), ('e', 'q'), ('h', 'B'), ('h', 'F'), ('t', 'j'), ('f', 'L'), ('f', 'D'), ('A', 'y'), ('D', 's'), ('I', 'r'), ('I', 's'), ('B', 'u'), ('B', 'v'), ('F', 'x'), ('i', 'y'), ('j', 'n'), ('n', 'J'), ('k', 'x'), ('C', 'r'), ('m', 'J'), ('m', 'K'), ('K', 'E'), ('K', 'u'), ('G', 's'), ('p', 'v'), ('E', 'M')] }
]
# Graph consisting of 39 nodes
data[40]["graph"] = Graph(is_directed=False)
data[40]["graph"].add_edge("A", "g", 1454)
data[40]["graph"].add_edge("B", "N", 943)
data[40]["graph"].add_edge("D", "u", 1263)
data[40]["graph"].add_edge("E", "C", 210)
data[40]["graph"].add_edge("E", "I", 1174)
data[40]["graph"].add_edge("F", "C", 1266)
data[40]["graph"].add_edge("F", "N", 345)
data[40]["graph"].add_edge("G", "B", 1435)
data[40]["graph"].add_edge("G", "r", 669)
data[40]["graph"].add_edge("H", "u", 172)
data[40]["graph"].add_edge("I", "L", 910)
data[40]["graph"].add_edge("J", "k", 1558)
data[40]["graph"].add_edge("K", "N", 1621)
data[40]["graph"].add_edge("L", "C", 1484)
data[40]["graph"].add_edge("M", "K", 947)
data[40]["graph"].add_edge("M", "h", 872)
data[40]["graph"].add_edge("a", "d", 1415)
data[40]["graph"].add_edge("a", "o", 571)
data[40]["graph"].add_edge("a", "w", 1550)
data[40]["graph"].add_edge("b", "M", 1227)
data[40]["graph"].add_edge("b", "f", 375)
data[40]["graph"].add_edge("c", "J", 754)
data[40]["graph"].add_edge("c", "m", 335)
data[40]["graph"].add_edge("d", "A", 43)
data[40]["graph"].add_edge("d", "G", 16)
data[40]["graph"].add_edge("e", "B", 1102)
data[40]["graph"].add_edge("e", "n", 514)
data[40]["graph"].add_edge("f", "A", 137)
data[40]["graph"].add_edge("f", "J", 841)
data[40]["graph"].add_edge("g", "q", 1500)
data[40]["graph"].add_edge("g", "y", 642)
data[40]["graph"].add_edge("h", "z", 208)
data[40]["graph"].add_edge("i", "l", 1332)
data[40]["graph"].add_edge("j", "t", 1321)
data[40]["graph"].add_edge("l", "t", 897)
data[40]["graph"].add_edge("m", "e", 1572)
data[40]["graph"].add_edge("m", "i", 544)
data[40]["graph"].add_edge("n", "p", 33)
data[40]["graph"].add_edge("n", "x", 891)
data[40]["graph"].add_edge("o", "b", 972)
data[40]["graph"].add_edge("o", "k", 952)
data[40]["graph"].add_edge("p", "D", 59)
data[40]["graph"].add_edge("p", "H", 597)
data[40]["graph"].add_edge("q", "h", 1368)
data[40]["graph"].add_edge("q", "k", 773)
data[40]["graph"].add_edge("r", "u", 1309)
data[40]["graph"].add_edge("s", "E", 625)
data[40]["graph"].add_edge("s", "K", 1632)
data[40]["graph"].add_edge("t", "s", 782)
data[40]["graph"].add_edge("v", "F", 720)
data[40]["graph"].add_edge("v", "I", 804)
data[40]["graph"].add_edge("v", "L", 577)
data[40]["graph"].add_edge("w", "c", 1398)
data[40]["graph"].add_edge("w", "r", 1294)
data[40]["graph"].add_edge("x", "D", 91)
data[40]["graph"].add_edge("x", "H", 1352)
data[40]["graph"].add_edge("y", "i", 1190)
data[40]["graph"].add_edge("y", "j", 1042)
data[40]["graph"].add_edge("z", "j", 1039)
data[40]["graph"].add_edge("z", "l", 1270)
data[40]["mst"] = Graph(is_directed=False)
data[40]["mst"].add_edge("B", "N", weight=943)
data[40]["mst"].add_edge("E", "C", weight=210)
data[40]["mst"].add_edge("E", "I", weight=1174)
data[40]["mst"].add_edge("F", "N", weight=345)
data[40]["mst"].add_edge("G", "r", weight=669)
data[40]["mst"].add_edge("H", "u", weight=172)
data[40]["mst"].add_edge("M", "K", weight=947)
data[40]["mst"].add_edge("M", "h", weight=872)
data[40]["mst"].add_edge("a", "o", weight=571)
data[40]["mst"].add_edge("b", "f", weight=375)
data[40]["mst"].add_edge("c", "J", weight=754)
data[40]["mst"].add_edge("c", "m", weight=335)
data[40]["mst"].add_edge("d", "A", weight=43)
data[40]["mst"].add_edge("d", "G", weight=16)
data[40]["mst"].add_edge("e", "B", weight=1102)
data[40]["mst"].add_edge("e", "n", weight=514)
data[40]["mst"].add_edge("f", "A", weight=137)
data[40]["mst"].add_edge("f", "J", weight=841)
data[40]["mst"].add_edge("g", "y", weight=642)
data[40]["mst"].add_edge("h", "z", weight=208)
data[40]["mst"].add_edge("l", "t", weight=897)
data[40]["mst"].add_edge("m", "i", weight=544)
data[40]["mst"].add_edge("n", "p", weight=33)
data[40]["mst"].add_edge("o", "b", weight=972)
data[40]["mst"].add_edge("o", "k", weight=952)
data[40]["mst"].add_edge("p", "D", weight=59)
data[40]["mst"].add_edge("p", "H", weight=597)
data[40]["mst"].add_edge("q", "k", weight=773)
data[40]["mst"].add_edge("s", "E", weight=625)
data[40]["mst"].add_edge("t", "s", weight=782)
data[40]["mst"].add_edge("v", "F", weight=720)
data[40]["mst"].add_edge("v", "I", weight=804)
data[40]["mst"].add_edge("v", "L", weight=577)
data[40]["mst"].add_edge("w", "r", weight=1294)
data[40]["mst"].add_edge("x", "D", weight=91)
data[40]["mst"].add_edge("y", "i", weight=1190)
data[40]["mst"].add_edge("y", "j", weight=1042)
data[40]["mst"].add_edge("z", "j", weight=1039)
data[40]["mst"].add_edge("z", "l", weight=1270)
data[40]["solutions"] = [
    { "edge": ("s", "K"), "weight": 1633, "expected": [('a', 'o'), ('d', 'G'), ('d', 'A'), ('o', 'k'), ('o', 'b'), ('w', 'r'), ('b', 'f'), ('M', 'h'), ('M', 'K'), ('f', 'A'), ('f', 'J'), ('c', 'm'), ('c', 'J'), ('m', 'i'), ('G', 'r'), ('e', 'n'), ('e', 'B'), ('B', 'N'), ('n', 'p'), ('g', 'y'), ('q', 'k'), ('y', 'j'), ('y', 'i'), ('h', 'z'), ('z', 'j'), ('z', 'l'), ('l', 't'), ('t', 's'), ('x', 'D'), ('p', 'D'), ('p', 'H'), ('H', 'u'), ('s', 'E'), ('E', 'C'), ('E', 'I'), ('v', 'L'), ('v', 'F'), ('v', 'I'), ('F', 'N')] },
    { "edge": ("a", "w"), "weight": 1549, "expected": [('a', 'o'), ('d', 'G'), ('d', 'A'), ('o', 'k'), ('o', 'b'), ('w', 'r'), ('b', 'f'), ('M', 'h'), ('M', 'K'), ('f', 'A'), ('f', 'J'), ('c', 'm'), ('c', 'J'), ('m', 'i'), ('G', 'r'), ('e', 'n'), ('e', 'B'), ('B', 'N'), ('n', 'p'), ('g', 'y'), ('q', 'k'), ('y', 'j'), ('y', 'i'), ('h', 'z'), ('z', 'j'), ('z', 'l'), ('l', 't'), ('t', 's'), ('x', 'D'), ('p', 'D'), ('p', 'H'), ('H', 'u'), ('s', 'E'), ('E', 'C'), ('E', 'I'), ('v', 'L'), ('v', 'F'), ('v', 'I'), ('F', 'N')] },
    { "edge": ("F", "N"), "weight": 344, "expected": [('a', 'o'), ('d', 'G'), ('d', 'A'), ('o', 'k'), ('o', 'b'), ('w', 'r'), ('b', 'f'), ('M', 'h'), ('M', 'K'), ('f', 'A'), ('f', 'J'), ('c', 'm'), ('c', 'J'), ('m', 'i'), ('G', 'r'), ('e', 'n'), ('e', 'B'), ('B', 'N'), ('n', 'p'), ('g', 'y'), ('q', 'k'), ('y', 'j'), ('y', 'i'), ('h', 'z'), ('z', 'j'), ('z', 'l'), ('l', 't'), ('t', 's'), ('x', 'D'), ('p', 'D'), ('p', 'H'), ('H', 'u'), ('s', 'E'), ('E', 'C'), ('E', 'I'), ('v', 'L'), ('v', 'F'), ('v', 'I'), ('F', 'N')] },
    { "edge": ("v", "I"), "weight": 805, "expected": [('a', 'o'), ('d', 'G'), ('d', 'A'), ('o', 'k'), ('o', 'b'), ('w', 'r'), ('b', 'f'), ('M', 'h'), ('M', 'K'), ('f', 'A'), ('f', 'J'), ('c', 'm'), ('c', 'J'), ('m', 'i'), ('G', 'r'), ('e', 'n'), ('e', 'B'), ('B', 'N'), ('n', 'p'), ('g', 'y'), ('q', 'k'), ('y', 'j'), ('y', 'i'), ('h', 'z'), ('z', 'j'), ('z', 'l'), ('l', 't'), ('t', 's'), ('x', 'D'), ('p', 'D'), ('p', 'H'), ('H', 'u'), ('s', 'E'), ('E', 'C'), ('E', 'I'), ('v', 'L'), ('v', 'F'), ('v', 'I'), ('F', 'N')] }
]
# Graph consisting of 40 nodes
data[41]["graph"] = Graph(is_directed=False)
data[41]["graph"].add_edge("B", "G", 326)
data[41]["graph"].add_edge("D", "C", 1357)
data[41]["graph"].add_edge("D", "v", 1610)
data[41]["graph"].add_edge("E", "O", 63)
data[41]["graph"].add_edge("E", "w", 406)
data[41]["graph"].add_edge("F", "g", 1381)
data[41]["graph"].add_edge("F", "m", 757)
data[41]["graph"].add_edge("G", "C", 1187)
data[41]["graph"].add_edge("I", "m", 66)
data[41]["graph"].add_edge("I", "t", 1248)
data[41]["graph"].add_edge("J", "H", 504)
data[41]["graph"].add_edge("K", "y", 1498)
data[41]["graph"].add_edge("K", "z", 761)
data[41]["graph"].add_edge("L", "B", 1134)
data[41]["graph"].add_edge("L", "H", 1615)
data[41]["graph"].add_edge("M", "G", 1088)
data[41]["graph"].add_edge("O", "C", 375)
data[41]["graph"].add_edge("a", "D", 4)
data[41]["graph"].add_edge("a", "q", 1517)
data[41]["graph"].add_edge("a", "u", 889)
data[41]["graph"].add_edge("b", "F", 1065)
data[41]["graph"].add_edge("b", "o", 957)
data[41]["graph"].add_edge("b", "p", 1489)
data[41]["graph"].add_edge("c", "k", 1605)
data[41]["graph"].add_edge("c", "n", 498)
data[41]["graph"].add_edge("c", "r", 651)
data[41]["graph"].add_edge("d", "E", 1587)
data[41]["graph"].add_edge("d", "K", 613)
data[41]["graph"].add_edge("d", "x", 1563)
data[41]["graph"].add_edge("f", "O", 1163)
data[41]["graph"].add_edge("f", "h", 946)
data[41]["graph"].add_edge("f", "s", 71)
data[41]["graph"].add_edge("g", "A", 1223)
data[41]["graph"].add_edge("h", "g", 1462)
data[41]["graph"].add_edge("h", "v", 1530)
data[41]["graph"].add_edge("i", "z", 1425)
data[41]["graph"].add_edge("j", "L", 378)
data[41]["graph"].add_edge("k", "M", 1534)
data[41]["graph"].add_edge("k", "i", 359)
data[41]["graph"].add_edge("l", "I", 1007)
data[41]["graph"].add_edge("l", "N", 638)
data[41]["graph"].add_edge("l", "w", 1590)
data[41]["graph"].add_edge("n", "i", 1619)
data[41]["graph"].add_edge("n", "y", 1156)
data[41]["graph"].add_edge("o", "j", 1243)
data[41]["graph"].add_edge("o", "m", 235)
data[41]["graph"].add_edge("p", "j", 169)
data[41]["graph"].add_edge("q", "e", 1608)
data[41]["graph"].add_edge("q", "x", 425)
data[41]["graph"].add_edge("r", "A", 1560)
data[41]["graph"].add_edge("r", "N", 1124)
data[41]["graph"].add_edge("s", "A", 1264)
data[41]["graph"].add_edge("s", "N", 1072)
data[41]["graph"].add_edge("t", "J", 1081)
data[41]["graph"].add_edge("u", "e", 1325)
data[41]["graph"].add_edge("u", "p", 371)
data[41]["graph"].add_edge("v", "M", 794)
data[41]["graph"].add_edge("w", "t", 1160)
data[41]["graph"].add_edge("x", "e", 1667)
data[41]["graph"].add_edge("y", "J", 386)
data[41]["graph"].add_edge("z", "B", 362)
data[41]["mst"] = Graph(is_directed=False)
data[41]["mst"].add_edge("B", "G", weight=326)
data[41]["mst"].add_edge("E", "O", weight=63)
data[41]["mst"].add_edge("E", "w", weight=406)
data[41]["mst"].add_edge("F", "m", weight=757)
data[41]["mst"].add_edge("G", "C", weight=1187)
data[41]["mst"].add_edge("I", "m", weight=66)
data[41]["mst"].add_edge("J", "H", weight=504)
data[41]["mst"].add_edge("K", "z", weight=761)
data[41]["mst"].add_edge("L", "B", weight=1134)
data[41]["mst"].add_edge("M", "G", weight=1088)
data[41]["mst"].add_edge("O", "C", weight=375)
data[41]["mst"].add_edge("a", "D", weight=4)
data[41]["mst"].add_edge("a", "q", weight=1517)
data[41]["mst"].add_edge("a", "u", weight=889)
data[41]["mst"].add_edge("b", "o", weight=957)
data[41]["mst"].add_edge("c", "n", weight=498)
data[41]["mst"].add_edge("c", "r", weight=651)
data[41]["mst"].add_edge("d", "K", weight=613)
data[41]["mst"].add_edge("f", "h", weight=946)
data[41]["mst"].add_edge("f", "s", weight=71)
data[41]["mst"].add_edge("g", "A", weight=1223)
data[41]["mst"].add_edge("i", "z", weight=1425)
data[41]["mst"].add_edge("j", "L", weight=378)
data[41]["mst"].add_edge("k", "i", weight=359)
data[41]["mst"].add_edge("l", "I", weight=1007)
data[41]["mst"].add_edge("l", "N", weight=638)
data[41]["mst"].add_edge("n", "y", weight=1156)
data[41]["mst"].add_edge("o", "m", weight=235)
data[41]["mst"].add_edge("p", "j", weight=169)
data[41]["mst"].add_edge("q", "x", weight=425)
data[41]["mst"].add_edge("r", "N", weight=1124)
data[41]["mst"].add_edge("s", "A", weight=1264)
data[41]["mst"].add_edge("s", "N", weight=1072)
data[41]["mst"].add_edge("t", "J", weight=1081)
data[41]["mst"].add_edge("u", "e", weight=1325)
data[41]["mst"].add_edge("u", "p", weight=371)
data[41]["mst"].add_edge("v", "M", weight=794)
data[41]["mst"].add_edge("w", "t", weight=1160)
data[41]["mst"].add_edge("y", "J", weight=386)
data[41]["mst"].add_edge("z", "B", weight=362)
data[41]["solutions"] = [
    { "edge": ("K", "y"), "weight": 1499, "expected": [('a', 'D'), ('a', 'u'), ('a', 'q'), ('q', 'x'), ('u', 'p'), ('u', 'e'), ('b', 'o'), ('F', 'm'), ('o', 'm'), ('p', 'j'), ('c', 'n'), ('c', 'r'), ('r', 'N'), ('k', 'i'), ('n', 'y'), ('d', 'K'), ('K', 'z'), ('E', 'O'), ('E', 'w'), ('f', 's'), ('f', 'h'), ('O', 'C'), ('s', 'N'), ('s', 'A'), ('g', 'A'), ('v', 'M'), ('i', 'z'), ('z', 'B'), ('j', 'L'), ('L', 'B'), ('M', 'G'), ('l', 'N'), ('l', 'I'), ('I', 'm'), ('w', 't'), ('y', 'J'), ('t', 'J'), ('J', 'H'), ('B', 'G'), ('G', 'C')] },
    { "edge": ("r", "A"), "weight": 1559, "expected": [('a', 'D'), ('a', 'u'), ('a', 'q'), ('q', 'x'), ('u', 'p'), ('u', 'e'), ('b', 'o'), ('F', 'm'), ('o', 'm'), ('p', 'j'), ('c', 'n'), ('c', 'r'), ('r', 'N'), ('k', 'i'), ('n', 'y'), ('d', 'K'), ('K', 'z'), ('E', 'O'), ('E', 'w'), ('f', 's'), ('f', 'h'), ('O', 'C'), ('s', 'N'), ('s', 'A'), ('g', 'A'), ('v', 'M'), ('i', 'z'), ('z', 'B'), ('j', 'L'), ('L', 'B'), ('M', 'G'), ('l', 'N'), ('l', 'I'), ('I', 'm'), ('w', 't'), ('y', 'J'), ('t', 'J'), ('J', 'H'), ('B', 'G'), ('G', 'C')] },
    { "edge": ("k", "i"), "weight": 358, "expected": [('a', 'D'), ('a', 'u'), ('a', 'q'), ('q', 'x'), ('u', 'p'), ('u', 'e'), ('b', 'o'), ('F', 'm'), ('o', 'm'), ('p', 'j'), ('c', 'n'), ('c', 'r'), ('r', 'N'), ('k', 'i'), ('n', 'y'), ('d', 'K'), ('K', 'z'), ('E', 'O'), ('E', 'w'), ('f', 's'), ('f', 'h'), ('O', 'C'), ('s', 'N'), ('s', 'A'), ('g', 'A'), ('v', 'M'), ('i', 'z'), ('z', 'B'), ('j', 'L'), ('L', 'B'), ('M', 'G'), ('l', 'N'), ('l', 'I'), ('I', 'm'), ('w', 't'), ('y', 'J'), ('t', 'J'), ('J', 'H'), ('B', 'G'), ('G', 'C')] },
    { "edge": ("y", "J"), "weight": 387, "expected": [('a', 'D'), ('a', 'u'), ('a', 'q'), ('q', 'x'), ('u', 'p'), ('u', 'e'), ('b', 'o'), ('F', 'm'), ('o', 'm'), ('p', 'j'), ('c', 'n'), ('c', 'r'), ('r', 'N'), ('k', 'i'), ('n', 'y'), ('d', 'K'), ('K', 'z'), ('E', 'O'), ('E', 'w'), ('f', 's'), ('f', 'h'), ('O', 'C'), ('s', 'N'), ('s', 'A'), ('g', 'A'), ('v', 'M'), ('i', 'z'), ('z', 'B'), ('j', 'L'), ('L', 'B'), ('M', 'G'), ('l', 'N'), ('l', 'I'), ('I', 'm'), ('w', 't'), ('y', 'J'), ('t', 'J'), ('J', 'H'), ('B', 'G'), ('G', 'C')] }
]